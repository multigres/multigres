// Copyright 2025 The Multigres Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v4.25.1
// source: pgctldservice.proto

package pgctldservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Server status enumeration
type ServerStatus int32

const (
	ServerStatus_UNKNOWN         ServerStatus = 0
	ServerStatus_STOPPED         ServerStatus = 1
	ServerStatus_STARTING        ServerStatus = 2
	ServerStatus_RUNNING         ServerStatus = 3
	ServerStatus_STOPPING        ServerStatus = 4
	ServerStatus_NOT_INITIALIZED ServerStatus = 5
)

// Enum value maps for ServerStatus.
var (
	ServerStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "STOPPED",
		2: "STARTING",
		3: "RUNNING",
		4: "STOPPING",
		5: "NOT_INITIALIZED",
	}
	ServerStatus_value = map[string]int32{
		"UNKNOWN":         0,
		"STOPPED":         1,
		"STARTING":        2,
		"RUNNING":         3,
		"STOPPING":        4,
		"NOT_INITIALIZED": 5,
	}
)

func (x ServerStatus) Enum() *ServerStatus {
	p := new(ServerStatus)
	*p = x
	return p
}

func (x ServerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pgctldservice_proto_enumTypes[0].Descriptor()
}

func (ServerStatus) Type() protoreflect.EnumType {
	return &file_pgctldservice_proto_enumTypes[0]
}

func (x ServerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerStatus.Descriptor instead.
func (ServerStatus) EnumDescriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{0}
}

// Start PostgreSQL server
type StartRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Override default data directory
	DataDir string `protobuf:"bytes,1,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	// Override default port
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Override default socket directory
	SocketDir string `protobuf:"bytes,3,opt,name=socket_dir,json=socketDir,proto3" json:"socket_dir,omitempty"`
	// Override default config file
	ConfigFile string `protobuf:"bytes,4,opt,name=config_file,json=configFile,proto3" json:"config_file,omitempty"`
	// Additional postgres command line arguments
	ExtraArgs     []string `protobuf:"bytes,5,rep,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_pgctldservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{0}
}

func (x *StartRequest) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *StartRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartRequest) GetSocketDir() string {
	if x != nil {
		return x.SocketDir
	}
	return ""
}

func (x *StartRequest) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

func (x *StartRequest) GetExtraArgs() []string {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

type StartResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Process ID of started PostgreSQL server
	Pid int32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// Status message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	mi := &file_pgctldservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{1}
}

func (x *StartResponse) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *StartResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Stop PostgreSQL server
type StopRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Shutdown mode: smart, fast, immediate
	Mode string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	// Timeout in seconds
	Timeout int32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Override default data directory
	DataDir       string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_pgctldservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{2}
}

func (x *StopRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *StopRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *StopRequest) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

type StopResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status message
	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_pgctldservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{3}
}

func (x *StopResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Restart PostgreSQL server
type RestartRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Shutdown mode for stop phase: smart, fast, immediate
	Mode string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	// Timeout in seconds for stop phase
	Timeout int32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Override default data directory
	DataDir string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	// Override default port for start phase
	Port int32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// Override default socket directory for start phase
	SocketDir string `protobuf:"bytes,5,opt,name=socket_dir,json=socketDir,proto3" json:"socket_dir,omitempty"`
	// Override default config file for start phase
	ConfigFile string `protobuf:"bytes,6,opt,name=config_file,json=configFile,proto3" json:"config_file,omitempty"`
	// Additional postgres command line arguments for start phase
	ExtraArgs     []string `protobuf:"bytes,7,rep,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartRequest) Reset() {
	*x = RestartRequest{}
	mi := &file_pgctldservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartRequest) ProtoMessage() {}

func (x *RestartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartRequest.ProtoReflect.Descriptor instead.
func (*RestartRequest) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{4}
}

func (x *RestartRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *RestartRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *RestartRequest) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *RestartRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RestartRequest) GetSocketDir() string {
	if x != nil {
		return x.SocketDir
	}
	return ""
}

func (x *RestartRequest) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

func (x *RestartRequest) GetExtraArgs() []string {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

type RestartResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Process ID of restarted PostgreSQL server
	Pid int32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// Status message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartResponse) Reset() {
	*x = RestartResponse{}
	mi := &file_pgctldservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartResponse) ProtoMessage() {}

func (x *RestartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartResponse.ProtoReflect.Descriptor instead.
func (*RestartResponse) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{5}
}

func (x *RestartResponse) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *RestartResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Reload PostgreSQL configuration
type ReloadConfigRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Override default data directory
	DataDir       string `protobuf:"bytes,1,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReloadConfigRequest) Reset() {
	*x = ReloadConfigRequest{}
	mi := &file_pgctldservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReloadConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadConfigRequest) ProtoMessage() {}

func (x *ReloadConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadConfigRequest.ProtoReflect.Descriptor instead.
func (*ReloadConfigRequest) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{6}
}

func (x *ReloadConfigRequest) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

type ReloadConfigResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status message
	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReloadConfigResponse) Reset() {
	*x = ReloadConfigResponse{}
	mi := &file_pgctldservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReloadConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadConfigResponse) ProtoMessage() {}

func (x *ReloadConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadConfigResponse.ProtoReflect.Descriptor instead.
func (*ReloadConfigResponse) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{7}
}

func (x *ReloadConfigResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Get PostgreSQL server status
type StatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Override default data directory
	DataDir       string `protobuf:"bytes,1,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_pgctldservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{8}
}

func (x *StatusRequest) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

type StatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Server status
	Status ServerStatus `protobuf:"varint,1,opt,name=status,proto3,enum=pgctldservice.ServerStatus" json:"status,omitempty"`
	// Process ID (if running)
	Pid int32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	// Server version (if available)
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Uptime in seconds (if running)
	UptimeSeconds int64 `protobuf:"varint,4,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	// Data directory path
	DataDir string `protobuf:"bytes,5,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	// Port number
	Port int32 `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	// Host address
	Host string `protobuf:"bytes,7,opt,name=host,proto3" json:"host,omitempty"`
	// Is server ready to accept connections
	Ready bool `protobuf:"varint,8,opt,name=ready,proto3" json:"ready,omitempty"`
	// Additional status information
	Message       string `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_pgctldservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{9}
}

func (x *StatusResponse) GetStatus() ServerStatus {
	if x != nil {
		return x.Status
	}
	return ServerStatus_UNKNOWN
}

func (x *StatusResponse) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *StatusResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *StatusResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *StatusResponse) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *StatusResponse) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StatusResponse) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *StatusResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Get server version information
type VersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Override default connection parameters
	Host          string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Database      string `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	User          string `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	mi := &file_pgctldservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{10}
}

func (x *VersionRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *VersionRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *VersionRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *VersionRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type VersionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PostgreSQL version string
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Status message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	mi := &file_pgctldservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{11}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Initialize data directory
type InitDataDirRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data directory path
	DataDir string `protobuf:"bytes,1,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	// Authentication method for local connections
	AuthLocal string `protobuf:"bytes,2,opt,name=auth_local,json=authLocal,proto3" json:"auth_local,omitempty"`
	// Authentication method for host connections
	AuthHost string `protobuf:"bytes,3,opt,name=auth_host,json=authHost,proto3" json:"auth_host,omitempty"`
	// Additional initdb arguments
	ExtraArgs     []string `protobuf:"bytes,4,rep,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitDataDirRequest) Reset() {
	*x = InitDataDirRequest{}
	mi := &file_pgctldservice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitDataDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitDataDirRequest) ProtoMessage() {}

func (x *InitDataDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitDataDirRequest.ProtoReflect.Descriptor instead.
func (*InitDataDirRequest) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{12}
}

func (x *InitDataDirRequest) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *InitDataDirRequest) GetAuthLocal() string {
	if x != nil {
		return x.AuthLocal
	}
	return ""
}

func (x *InitDataDirRequest) GetAuthHost() string {
	if x != nil {
		return x.AuthHost
	}
	return ""
}

func (x *InitDataDirRequest) GetExtraArgs() []string {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

type InitDataDirResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status message
	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitDataDirResponse) Reset() {
	*x = InitDataDirResponse{}
	mi := &file_pgctldservice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitDataDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitDataDirResponse) ProtoMessage() {}

func (x *InitDataDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldservice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitDataDirResponse.ProtoReflect.Descriptor instead.
func (*InitDataDirResponse) Descriptor() ([]byte, []int) {
	return file_pgctldservice_proto_rawDescGZIP(), []int{13}
}

func (x *InitDataDirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pgctldservice_proto protoreflect.FileDescriptor

const file_pgctldservice_proto_rawDesc = "" +
	"\n" +
	"\x13pgctldservice.proto\x12\rpgctldservice\"\x9c\x01\n" +
	"\fStartRequest\x12\x19\n" +
	"\bdata_dir\x18\x01 \x01(\tR\adataDir\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1d\n" +
	"\n" +
	"socket_dir\x18\x03 \x01(\tR\tsocketDir\x12\x1f\n" +
	"\vconfig_file\x18\x04 \x01(\tR\n" +
	"configFile\x12\x1d\n" +
	"\n" +
	"extra_args\x18\x05 \x03(\tR\textraArgs\";\n" +
	"\rStartResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x05R\x03pid\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"V\n" +
	"\vStopRequest\x12\x12\n" +
	"\x04mode\x18\x01 \x01(\tR\x04mode\x12\x18\n" +
	"\atimeout\x18\x02 \x01(\x05R\atimeout\x12\x19\n" +
	"\bdata_dir\x18\x03 \x01(\tR\adataDir\"(\n" +
	"\fStopResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xcc\x01\n" +
	"\x0eRestartRequest\x12\x12\n" +
	"\x04mode\x18\x01 \x01(\tR\x04mode\x12\x18\n" +
	"\atimeout\x18\x02 \x01(\x05R\atimeout\x12\x19\n" +
	"\bdata_dir\x18\x03 \x01(\tR\adataDir\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12\x1d\n" +
	"\n" +
	"socket_dir\x18\x05 \x01(\tR\tsocketDir\x12\x1f\n" +
	"\vconfig_file\x18\x06 \x01(\tR\n" +
	"configFile\x12\x1d\n" +
	"\n" +
	"extra_args\x18\a \x03(\tR\textraArgs\"=\n" +
	"\x0fRestartResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x05R\x03pid\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"0\n" +
	"\x13ReloadConfigRequest\x12\x19\n" +
	"\bdata_dir\x18\x01 \x01(\tR\adataDir\"0\n" +
	"\x14ReloadConfigResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"*\n" +
	"\rStatusRequest\x12\x19\n" +
	"\bdata_dir\x18\x01 \x01(\tR\adataDir\"\x8b\x02\n" +
	"\x0eStatusResponse\x123\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1b.pgctldservice.ServerStatusR\x06status\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\x05R\x03pid\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12%\n" +
	"\x0euptime_seconds\x18\x04 \x01(\x03R\ruptimeSeconds\x12\x19\n" +
	"\bdata_dir\x18\x05 \x01(\tR\adataDir\x12\x12\n" +
	"\x04port\x18\x06 \x01(\x05R\x04port\x12\x12\n" +
	"\x04host\x18\a \x01(\tR\x04host\x12\x14\n" +
	"\x05ready\x18\b \x01(\bR\x05ready\x12\x18\n" +
	"\amessage\x18\t \x01(\tR\amessage\"h\n" +
	"\x0eVersionRequest\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1a\n" +
	"\bdatabase\x18\x03 \x01(\tR\bdatabase\x12\x12\n" +
	"\x04user\x18\x04 \x01(\tR\x04user\"E\n" +
	"\x0fVersionResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x8a\x01\n" +
	"\x12InitDataDirRequest\x12\x19\n" +
	"\bdata_dir\x18\x01 \x01(\tR\adataDir\x12\x1d\n" +
	"\n" +
	"auth_local\x18\x02 \x01(\tR\tauthLocal\x12\x1b\n" +
	"\tauth_host\x18\x03 \x01(\tR\bauthHost\x12\x1d\n" +
	"\n" +
	"extra_args\x18\x04 \x03(\tR\textraArgs\"/\n" +
	"\x13InitDataDirResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage*f\n" +
	"\fServerStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSTOPPED\x10\x01\x12\f\n" +
	"\bSTARTING\x10\x02\x12\v\n" +
	"\aRUNNING\x10\x03\x12\f\n" +
	"\bSTOPPING\x10\x04\x12\x13\n" +
	"\x0fNOT_INITIALIZED\x10\x052\x97\x04\n" +
	"\x06PgCtld\x12B\n" +
	"\x05Start\x12\x1b.pgctldservice.StartRequest\x1a\x1c.pgctldservice.StartResponse\x12?\n" +
	"\x04Stop\x12\x1a.pgctldservice.StopRequest\x1a\x1b.pgctldservice.StopResponse\x12H\n" +
	"\aRestart\x12\x1d.pgctldservice.RestartRequest\x1a\x1e.pgctldservice.RestartResponse\x12W\n" +
	"\fReloadConfig\x12\".pgctldservice.ReloadConfigRequest\x1a#.pgctldservice.ReloadConfigResponse\x12E\n" +
	"\x06Status\x12\x1c.pgctldservice.StatusRequest\x1a\x1d.pgctldservice.StatusResponse\x12H\n" +
	"\aVersion\x12\x1d.pgctldservice.VersionRequest\x1a\x1e.pgctldservice.VersionResponse\x12T\n" +
	"\vInitDataDir\x12!.pgctldservice.InitDataDirRequest\x1a\".pgctldservice.InitDataDirResponseB4Z2github.com/multigres/multigres/go/pb/pgctldserviceb\x06proto3"

var (
	file_pgctldservice_proto_rawDescOnce sync.Once
	file_pgctldservice_proto_rawDescData []byte
)

func file_pgctldservice_proto_rawDescGZIP() []byte {
	file_pgctldservice_proto_rawDescOnce.Do(func() {
		file_pgctldservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pgctldservice_proto_rawDesc), len(file_pgctldservice_proto_rawDesc)))
	})
	return file_pgctldservice_proto_rawDescData
}

var file_pgctldservice_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pgctldservice_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_pgctldservice_proto_goTypes = []any{
	(ServerStatus)(0),            // 0: pgctldservice.ServerStatus
	(*StartRequest)(nil),         // 1: pgctldservice.StartRequest
	(*StartResponse)(nil),        // 2: pgctldservice.StartResponse
	(*StopRequest)(nil),          // 3: pgctldservice.StopRequest
	(*StopResponse)(nil),         // 4: pgctldservice.StopResponse
	(*RestartRequest)(nil),       // 5: pgctldservice.RestartRequest
	(*RestartResponse)(nil),      // 6: pgctldservice.RestartResponse
	(*ReloadConfigRequest)(nil),  // 7: pgctldservice.ReloadConfigRequest
	(*ReloadConfigResponse)(nil), // 8: pgctldservice.ReloadConfigResponse
	(*StatusRequest)(nil),        // 9: pgctldservice.StatusRequest
	(*StatusResponse)(nil),       // 10: pgctldservice.StatusResponse
	(*VersionRequest)(nil),       // 11: pgctldservice.VersionRequest
	(*VersionResponse)(nil),      // 12: pgctldservice.VersionResponse
	(*InitDataDirRequest)(nil),   // 13: pgctldservice.InitDataDirRequest
	(*InitDataDirResponse)(nil),  // 14: pgctldservice.InitDataDirResponse
}
var file_pgctldservice_proto_depIdxs = []int32{
	0,  // 0: pgctldservice.StatusResponse.status:type_name -> pgctldservice.ServerStatus
	1,  // 1: pgctldservice.PgCtld.Start:input_type -> pgctldservice.StartRequest
	3,  // 2: pgctldservice.PgCtld.Stop:input_type -> pgctldservice.StopRequest
	5,  // 3: pgctldservice.PgCtld.Restart:input_type -> pgctldservice.RestartRequest
	7,  // 4: pgctldservice.PgCtld.ReloadConfig:input_type -> pgctldservice.ReloadConfigRequest
	9,  // 5: pgctldservice.PgCtld.Status:input_type -> pgctldservice.StatusRequest
	11, // 6: pgctldservice.PgCtld.Version:input_type -> pgctldservice.VersionRequest
	13, // 7: pgctldservice.PgCtld.InitDataDir:input_type -> pgctldservice.InitDataDirRequest
	2,  // 8: pgctldservice.PgCtld.Start:output_type -> pgctldservice.StartResponse
	4,  // 9: pgctldservice.PgCtld.Stop:output_type -> pgctldservice.StopResponse
	6,  // 10: pgctldservice.PgCtld.Restart:output_type -> pgctldservice.RestartResponse
	8,  // 11: pgctldservice.PgCtld.ReloadConfig:output_type -> pgctldservice.ReloadConfigResponse
	10, // 12: pgctldservice.PgCtld.Status:output_type -> pgctldservice.StatusResponse
	12, // 13: pgctldservice.PgCtld.Version:output_type -> pgctldservice.VersionResponse
	14, // 14: pgctldservice.PgCtld.InitDataDir:output_type -> pgctldservice.InitDataDirResponse
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_pgctldservice_proto_init() }
func file_pgctldservice_proto_init() {
	if File_pgctldservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pgctldservice_proto_rawDesc), len(file_pgctldservice_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pgctldservice_proto_goTypes,
		DependencyIndexes: file_pgctldservice_proto_depIdxs,
		EnumInfos:         file_pgctldservice_proto_enumTypes,
		MessageInfos:      file_pgctldservice_proto_msgTypes,
	}.Build()
	File_pgctldservice_proto = out.File
	file_pgctldservice_proto_goTypes = nil
	file_pgctldservice_proto_depIdxs = nil
}
