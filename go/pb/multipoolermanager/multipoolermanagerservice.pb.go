// Copyright 2025 Supabase, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: multipoolermanagerservice.proto

package multipoolermanager

import (
	multipoolermanagerdata "github.com/multigres/multigres/go/pb/multipoolermanagerdata"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_multipoolermanagerservice_proto protoreflect.FileDescriptor

const file_multipoolermanagerservice_proto_rawDesc = "" +
	"\n" +
	"\x1fmultipoolermanagerservice.proto\x12\x12multipoolermanager\x1a\x1cmultipoolermanagerdata.proto2\x8c\x14\n" +
	"\x12MultiPoolerManager\x12c\n" +
	"\n" +
	"WaitForLSN\x12).multipoolermanagerdata.WaitForLSNRequest\x1a*.multipoolermanagerdata.WaitForLSNResponse\x12f\n" +
	"\vSetReadOnly\x12*.multipoolermanagerdata.SetReadOnlyRequest\x1a+.multipoolermanagerdata.SetReadOnlyResponse\x12o\n" +
	"\x0ePromoteStandby\x12-.multipoolermanagerdata.PromoteStandbyRequest\x1a..multipoolermanagerdata.PromoteStandbyResponse\x12l\n" +
	"\rGetPrimaryLSN\x12,.multipoolermanagerdata.GetPrimaryLSNRequest\x1a-.multipoolermanagerdata.GetPrimaryLSNResponse\x12c\n" +
	"\n" +
	"IsReadOnly\x12).multipoolermanagerdata.IsReadOnlyRequest\x1a*.multipoolermanagerdata.IsReadOnlyResponse\x12\x90\x01\n" +
	"\x19SetStandbyPrimaryConnInfo\x128.multipoolermanagerdata.SetStandbyPrimaryConnInfoRequest\x1a9.multipoolermanagerdata.SetStandbyPrimaryConnInfoResponse\x12|\n" +
	"\x17StartStandbyReplication\x12/.multipoolermanagerdata.StartReplicationRequest\x1a0.multipoolermanagerdata.StartReplicationResponse\x12\x87\x01\n" +
	"\x16StopStandbyReplication\x125.multipoolermanagerdata.StopStandbyReplicationRequest\x1a6.multipoolermanagerdata.StopStandbyReplicationResponse\x12\x8d\x01\n" +
	"\x18StandbyReplicationStatus\x127.multipoolermanagerdata.StandbyReplicationStatusRequest\x1a8.multipoolermanagerdata.StandbyReplicationStatusResponse\x12\x8a\x01\n" +
	"\x17ResetStandbyReplication\x126.multipoolermanagerdata.ResetStandbyReplicationRequest\x1a7.multipoolermanagerdata.ResetStandbyReplicationResponse\x12\xa2\x01\n" +
	"\x1fConfigureSynchronousReplication\x12>.multipoolermanagerdata.ConfigureSynchronousReplicationRequest\x1a?.multipoolermanagerdata.ConfigureSynchronousReplicationResponse\x12l\n" +
	"\rPrimaryStatus\x12,.multipoolermanagerdata.PrimaryStatusRequest\x1a-.multipoolermanagerdata.PrimaryStatusResponse\x12r\n" +
	"\x0fPrimaryPosition\x12..multipoolermanagerdata.PrimaryPositionRequest\x1a/.multipoolermanagerdata.PrimaryPositionResponse\x12\x81\x01\n" +
	"\x14SetReplicationSource\x123.multipoolermanagerdata.SetReplicationSourceRequest\x1a4.multipoolermanagerdata.SetReplicationSourceResponse\x12\x96\x01\n" +
	"\x1bStopReplicationAndGetStatus\x12:.multipoolermanagerdata.StopReplicationAndGetStatusRequest\x1a;.multipoolermanagerdata.StopReplicationAndGetStatusResponse\x12c\n" +
	"\n" +
	"ChangeType\x12).multipoolermanagerdata.ChangeTypeRequest\x1a*.multipoolermanagerdata.ChangeTypeResponse\x12i\n" +
	"\fGetFollowers\x12+.multipoolermanagerdata.GetFollowersRequest\x1a,.multipoolermanagerdata.GetFollowersResponse\x12i\n" +
	"\fDemoteLeader\x12+.multipoolermanagerdata.DemoteLeaderRequest\x1a,.multipoolermanagerdata.DemoteLeaderResponse\x12u\n" +
	"\x10UndoDemoteLeader\x12/.multipoolermanagerdata.UndoDemoteLeaderRequest\x1a0.multipoolermanagerdata.UndoDemoteLeaderResponse\x12c\n" +
	"\n" +
	"FullStatus\x12).multipoolermanagerdata.FullStatusRequest\x1a*.multipoolermanagerdata.FullStatusResponse\x12r\n" +
	"\x0fPromoteFollower\x12..multipoolermanagerdata.PromoteFollowerRequest\x1a/.multipoolermanagerdata.PromoteFollowerResponseB9Z7github.com/multigres/multigres/go/pb/multipoolermanagerb\x06proto3"

var file_multipoolermanagerservice_proto_goTypes = []any{
	(*multipoolermanagerdata.WaitForLSNRequest)(nil),                       // 0: multipoolermanagerdata.WaitForLSNRequest
	(*multipoolermanagerdata.SetReadOnlyRequest)(nil),                      // 1: multipoolermanagerdata.SetReadOnlyRequest
	(*multipoolermanagerdata.PromoteStandbyRequest)(nil),                   // 2: multipoolermanagerdata.PromoteStandbyRequest
	(*multipoolermanagerdata.GetPrimaryLSNRequest)(nil),                    // 3: multipoolermanagerdata.GetPrimaryLSNRequest
	(*multipoolermanagerdata.IsReadOnlyRequest)(nil),                       // 4: multipoolermanagerdata.IsReadOnlyRequest
	(*multipoolermanagerdata.SetStandbyPrimaryConnInfoRequest)(nil),        // 5: multipoolermanagerdata.SetStandbyPrimaryConnInfoRequest
	(*multipoolermanagerdata.StartReplicationRequest)(nil),                 // 6: multipoolermanagerdata.StartReplicationRequest
	(*multipoolermanagerdata.StopStandbyReplicationRequest)(nil),           // 7: multipoolermanagerdata.StopStandbyReplicationRequest
	(*multipoolermanagerdata.StandbyReplicationStatusRequest)(nil),         // 8: multipoolermanagerdata.StandbyReplicationStatusRequest
	(*multipoolermanagerdata.ResetStandbyReplicationRequest)(nil),          // 9: multipoolermanagerdata.ResetStandbyReplicationRequest
	(*multipoolermanagerdata.ConfigureSynchronousReplicationRequest)(nil),  // 10: multipoolermanagerdata.ConfigureSynchronousReplicationRequest
	(*multipoolermanagerdata.PrimaryStatusRequest)(nil),                    // 11: multipoolermanagerdata.PrimaryStatusRequest
	(*multipoolermanagerdata.PrimaryPositionRequest)(nil),                  // 12: multipoolermanagerdata.PrimaryPositionRequest
	(*multipoolermanagerdata.SetReplicationSourceRequest)(nil),             // 13: multipoolermanagerdata.SetReplicationSourceRequest
	(*multipoolermanagerdata.StopReplicationAndGetStatusRequest)(nil),      // 14: multipoolermanagerdata.StopReplicationAndGetStatusRequest
	(*multipoolermanagerdata.ChangeTypeRequest)(nil),                       // 15: multipoolermanagerdata.ChangeTypeRequest
	(*multipoolermanagerdata.GetFollowersRequest)(nil),                     // 16: multipoolermanagerdata.GetFollowersRequest
	(*multipoolermanagerdata.DemoteLeaderRequest)(nil),                     // 17: multipoolermanagerdata.DemoteLeaderRequest
	(*multipoolermanagerdata.UndoDemoteLeaderRequest)(nil),                 // 18: multipoolermanagerdata.UndoDemoteLeaderRequest
	(*multipoolermanagerdata.FullStatusRequest)(nil),                       // 19: multipoolermanagerdata.FullStatusRequest
	(*multipoolermanagerdata.PromoteFollowerRequest)(nil),                  // 20: multipoolermanagerdata.PromoteFollowerRequest
	(*multipoolermanagerdata.WaitForLSNResponse)(nil),                      // 21: multipoolermanagerdata.WaitForLSNResponse
	(*multipoolermanagerdata.SetReadOnlyResponse)(nil),                     // 22: multipoolermanagerdata.SetReadOnlyResponse
	(*multipoolermanagerdata.PromoteStandbyResponse)(nil),                  // 23: multipoolermanagerdata.PromoteStandbyResponse
	(*multipoolermanagerdata.GetPrimaryLSNResponse)(nil),                   // 24: multipoolermanagerdata.GetPrimaryLSNResponse
	(*multipoolermanagerdata.IsReadOnlyResponse)(nil),                      // 25: multipoolermanagerdata.IsReadOnlyResponse
	(*multipoolermanagerdata.SetStandbyPrimaryConnInfoResponse)(nil),       // 26: multipoolermanagerdata.SetStandbyPrimaryConnInfoResponse
	(*multipoolermanagerdata.StartReplicationResponse)(nil),                // 27: multipoolermanagerdata.StartReplicationResponse
	(*multipoolermanagerdata.StopStandbyReplicationResponse)(nil),          // 28: multipoolermanagerdata.StopStandbyReplicationResponse
	(*multipoolermanagerdata.StandbyReplicationStatusResponse)(nil),        // 29: multipoolermanagerdata.StandbyReplicationStatusResponse
	(*multipoolermanagerdata.ResetStandbyReplicationResponse)(nil),         // 30: multipoolermanagerdata.ResetStandbyReplicationResponse
	(*multipoolermanagerdata.ConfigureSynchronousReplicationResponse)(nil), // 31: multipoolermanagerdata.ConfigureSynchronousReplicationResponse
	(*multipoolermanagerdata.PrimaryStatusResponse)(nil),                   // 32: multipoolermanagerdata.PrimaryStatusResponse
	(*multipoolermanagerdata.PrimaryPositionResponse)(nil),                 // 33: multipoolermanagerdata.PrimaryPositionResponse
	(*multipoolermanagerdata.SetReplicationSourceResponse)(nil),            // 34: multipoolermanagerdata.SetReplicationSourceResponse
	(*multipoolermanagerdata.StopReplicationAndGetStatusResponse)(nil),     // 35: multipoolermanagerdata.StopReplicationAndGetStatusResponse
	(*multipoolermanagerdata.ChangeTypeResponse)(nil),                      // 36: multipoolermanagerdata.ChangeTypeResponse
	(*multipoolermanagerdata.GetFollowersResponse)(nil),                    // 37: multipoolermanagerdata.GetFollowersResponse
	(*multipoolermanagerdata.DemoteLeaderResponse)(nil),                    // 38: multipoolermanagerdata.DemoteLeaderResponse
	(*multipoolermanagerdata.UndoDemoteLeaderResponse)(nil),                // 39: multipoolermanagerdata.UndoDemoteLeaderResponse
	(*multipoolermanagerdata.FullStatusResponse)(nil),                      // 40: multipoolermanagerdata.FullStatusResponse
	(*multipoolermanagerdata.PromoteFollowerResponse)(nil),                 // 41: multipoolermanagerdata.PromoteFollowerResponse
}
var file_multipoolermanagerservice_proto_depIdxs = []int32{
	0,  // 0: multipoolermanager.MultiPoolerManager.WaitForLSN:input_type -> multipoolermanagerdata.WaitForLSNRequest
	1,  // 1: multipoolermanager.MultiPoolerManager.SetReadOnly:input_type -> multipoolermanagerdata.SetReadOnlyRequest
	2,  // 2: multipoolermanager.MultiPoolerManager.PromoteStandby:input_type -> multipoolermanagerdata.PromoteStandbyRequest
	3,  // 3: multipoolermanager.MultiPoolerManager.GetPrimaryLSN:input_type -> multipoolermanagerdata.GetPrimaryLSNRequest
	4,  // 4: multipoolermanager.MultiPoolerManager.IsReadOnly:input_type -> multipoolermanagerdata.IsReadOnlyRequest
	5,  // 5: multipoolermanager.MultiPoolerManager.SetStandbyPrimaryConnInfo:input_type -> multipoolermanagerdata.SetStandbyPrimaryConnInfoRequest
	6,  // 6: multipoolermanager.MultiPoolerManager.StartStandbyReplication:input_type -> multipoolermanagerdata.StartReplicationRequest
	7,  // 7: multipoolermanager.MultiPoolerManager.StopStandbyReplication:input_type -> multipoolermanagerdata.StopStandbyReplicationRequest
	8,  // 8: multipoolermanager.MultiPoolerManager.StandbyReplicationStatus:input_type -> multipoolermanagerdata.StandbyReplicationStatusRequest
	9,  // 9: multipoolermanager.MultiPoolerManager.ResetStandbyReplication:input_type -> multipoolermanagerdata.ResetStandbyReplicationRequest
	10, // 10: multipoolermanager.MultiPoolerManager.ConfigureSynchronousReplication:input_type -> multipoolermanagerdata.ConfigureSynchronousReplicationRequest
	11, // 11: multipoolermanager.MultiPoolerManager.PrimaryStatus:input_type -> multipoolermanagerdata.PrimaryStatusRequest
	12, // 12: multipoolermanager.MultiPoolerManager.PrimaryPosition:input_type -> multipoolermanagerdata.PrimaryPositionRequest
	13, // 13: multipoolermanager.MultiPoolerManager.SetReplicationSource:input_type -> multipoolermanagerdata.SetReplicationSourceRequest
	14, // 14: multipoolermanager.MultiPoolerManager.StopReplicationAndGetStatus:input_type -> multipoolermanagerdata.StopReplicationAndGetStatusRequest
	15, // 15: multipoolermanager.MultiPoolerManager.ChangeType:input_type -> multipoolermanagerdata.ChangeTypeRequest
	16, // 16: multipoolermanager.MultiPoolerManager.GetFollowers:input_type -> multipoolermanagerdata.GetFollowersRequest
	17, // 17: multipoolermanager.MultiPoolerManager.DemoteLeader:input_type -> multipoolermanagerdata.DemoteLeaderRequest
	18, // 18: multipoolermanager.MultiPoolerManager.UndoDemoteLeader:input_type -> multipoolermanagerdata.UndoDemoteLeaderRequest
	19, // 19: multipoolermanager.MultiPoolerManager.FullStatus:input_type -> multipoolermanagerdata.FullStatusRequest
	20, // 20: multipoolermanager.MultiPoolerManager.PromoteFollower:input_type -> multipoolermanagerdata.PromoteFollowerRequest
	21, // 21: multipoolermanager.MultiPoolerManager.WaitForLSN:output_type -> multipoolermanagerdata.WaitForLSNResponse
	22, // 22: multipoolermanager.MultiPoolerManager.SetReadOnly:output_type -> multipoolermanagerdata.SetReadOnlyResponse
	23, // 23: multipoolermanager.MultiPoolerManager.PromoteStandby:output_type -> multipoolermanagerdata.PromoteStandbyResponse
	24, // 24: multipoolermanager.MultiPoolerManager.GetPrimaryLSN:output_type -> multipoolermanagerdata.GetPrimaryLSNResponse
	25, // 25: multipoolermanager.MultiPoolerManager.IsReadOnly:output_type -> multipoolermanagerdata.IsReadOnlyResponse
	26, // 26: multipoolermanager.MultiPoolerManager.SetStandbyPrimaryConnInfo:output_type -> multipoolermanagerdata.SetStandbyPrimaryConnInfoResponse
	27, // 27: multipoolermanager.MultiPoolerManager.StartStandbyReplication:output_type -> multipoolermanagerdata.StartReplicationResponse
	28, // 28: multipoolermanager.MultiPoolerManager.StopStandbyReplication:output_type -> multipoolermanagerdata.StopStandbyReplicationResponse
	29, // 29: multipoolermanager.MultiPoolerManager.StandbyReplicationStatus:output_type -> multipoolermanagerdata.StandbyReplicationStatusResponse
	30, // 30: multipoolermanager.MultiPoolerManager.ResetStandbyReplication:output_type -> multipoolermanagerdata.ResetStandbyReplicationResponse
	31, // 31: multipoolermanager.MultiPoolerManager.ConfigureSynchronousReplication:output_type -> multipoolermanagerdata.ConfigureSynchronousReplicationResponse
	32, // 32: multipoolermanager.MultiPoolerManager.PrimaryStatus:output_type -> multipoolermanagerdata.PrimaryStatusResponse
	33, // 33: multipoolermanager.MultiPoolerManager.PrimaryPosition:output_type -> multipoolermanagerdata.PrimaryPositionResponse
	34, // 34: multipoolermanager.MultiPoolerManager.SetReplicationSource:output_type -> multipoolermanagerdata.SetReplicationSourceResponse
	35, // 35: multipoolermanager.MultiPoolerManager.StopReplicationAndGetStatus:output_type -> multipoolermanagerdata.StopReplicationAndGetStatusResponse
	36, // 36: multipoolermanager.MultiPoolerManager.ChangeType:output_type -> multipoolermanagerdata.ChangeTypeResponse
	37, // 37: multipoolermanager.MultiPoolerManager.GetFollowers:output_type -> multipoolermanagerdata.GetFollowersResponse
	38, // 38: multipoolermanager.MultiPoolerManager.DemoteLeader:output_type -> multipoolermanagerdata.DemoteLeaderResponse
	39, // 39: multipoolermanager.MultiPoolerManager.UndoDemoteLeader:output_type -> multipoolermanagerdata.UndoDemoteLeaderResponse
	40, // 40: multipoolermanager.MultiPoolerManager.FullStatus:output_type -> multipoolermanagerdata.FullStatusResponse
	41, // 41: multipoolermanager.MultiPoolerManager.PromoteFollower:output_type -> multipoolermanagerdata.PromoteFollowerResponse
	21, // [21:42] is the sub-list for method output_type
	0,  // [0:21] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_multipoolermanagerservice_proto_init() }
func file_multipoolermanagerservice_proto_init() {
	if File_multipoolermanagerservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_multipoolermanagerservice_proto_rawDesc), len(file_multipoolermanagerservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_multipoolermanagerservice_proto_goTypes,
		DependencyIndexes: file_multipoolermanagerservice_proto_depIdxs,
	}.Build()
	File_multipoolermanagerservice_proto = out.File
	file_multipoolermanagerservice_proto_goTypes = nil
	file_multipoolermanagerservice_proto_depIdxs = nil
}
