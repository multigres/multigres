// Copyright 2025 Supabase, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: multipoolermanagerservice.proto

package multipoolermanager

import (
	multipoolermanagerdata "github.com/multigres/multigres/go/pb/multipoolermanagerdata"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_multipoolermanagerservice_proto protoreflect.FileDescriptor

const file_multipoolermanagerservice_proto_rawDesc = "" +
	"\n" +
	"\x1fmultipoolermanagerservice.proto\x12\x12multipoolermanager\x1a\x1cmultipoolermanagerdata.proto2\x8b\x10\n" +
	"\x12MultiPoolerManager\x12c\n" +
	"\n" +
	"WaitForLSN\x12).multipoolermanagerdata.WaitForLSNRequest\x1a*.multipoolermanagerdata.WaitForLSNResponse\x12f\n" +
	"\vSetReadOnly\x12*.multipoolermanagerdata.SetReadOnlyRequest\x1a+.multipoolermanagerdata.SetReadOnlyResponse\x12`\n" +
	"\tPgPromote\x12(.multipoolermanagerdata.PgPromoteRequest\x1a).multipoolermanagerdata.PgPromoteResponse\x12c\n" +
	"\n" +
	"IsReadOnly\x12).multipoolermanagerdata.IsReadOnlyRequest\x1a*.multipoolermanagerdata.IsReadOnlyResponse\x12{\n" +
	"\x12SetPrimaryConnInfo\x121.multipoolermanagerdata.SetPrimaryConnInfoRequest\x1a2.multipoolermanagerdata.SetPrimaryConnInfoResponse\x12u\n" +
	"\x10StartReplication\x12/.multipoolermanagerdata.StartReplicationRequest\x1a0.multipoolermanagerdata.StartReplicationResponse\x12r\n" +
	"\x0fStopReplication\x12..multipoolermanagerdata.StopReplicationRequest\x1a/.multipoolermanagerdata.StopReplicationResponse\x12x\n" +
	"\x11ReplicationStatus\x120.multipoolermanagerdata.ReplicationStatusRequest\x1a1.multipoolermanagerdata.ReplicationStatusResponse\x12u\n" +
	"\x10ResetReplication\x12/.multipoolermanagerdata.ResetReplicationRequest\x1a0.multipoolermanagerdata.ResetReplicationResponse\x12\xa2\x01\n" +
	"\x1fConfigureSynchronousReplication\x12>.multipoolermanagerdata.ConfigureSynchronousReplicationRequest\x1a?.multipoolermanagerdata.ConfigureSynchronousReplicationResponse\x12l\n" +
	"\rPrimaryStatus\x12,.multipoolermanagerdata.PrimaryStatusRequest\x1a-.multipoolermanagerdata.PrimaryStatusResponse\x12r\n" +
	"\x0fPrimaryPosition\x12..multipoolermanagerdata.PrimaryPositionRequest\x1a/.multipoolermanagerdata.PrimaryPositionResponse\x12\x96\x01\n" +
	"\x1bStopReplicationAndGetStatus\x12:.multipoolermanagerdata.StopReplicationAndGetStatusRequest\x1a;.multipoolermanagerdata.StopReplicationAndGetStatusResponse\x12c\n" +
	"\n" +
	"ChangeType\x12).multipoolermanagerdata.ChangeTypeRequest\x1a*.multipoolermanagerdata.ChangeTypeResponse\x12i\n" +
	"\fGetFollowers\x12+.multipoolermanagerdata.GetFollowersRequest\x1a,.multipoolermanagerdata.GetFollowersResponse\x12W\n" +
	"\x06Demote\x12%.multipoolermanagerdata.DemoteRequest\x1a&.multipoolermanagerdata.DemoteResponse\x12c\n" +
	"\n" +
	"UndoDemote\x12).multipoolermanagerdata.UndoDemoteRequest\x1a*.multipoolermanagerdata.UndoDemoteResponse\x12Z\n" +
	"\aPromote\x12&.multipoolermanagerdata.PromoteRequest\x1a'.multipoolermanagerdata.PromoteResponseB9Z7github.com/multigres/multigres/go/pb/multipoolermanagerb\x06proto3"

var file_multipoolermanagerservice_proto_goTypes = []any{
	(*multipoolermanagerdata.WaitForLSNRequest)(nil),                       // 0: multipoolermanagerdata.WaitForLSNRequest
	(*multipoolermanagerdata.SetReadOnlyRequest)(nil),                      // 1: multipoolermanagerdata.SetReadOnlyRequest
	(*multipoolermanagerdata.PgPromoteRequest)(nil),                        // 2: multipoolermanagerdata.PgPromoteRequest
	(*multipoolermanagerdata.IsReadOnlyRequest)(nil),                       // 3: multipoolermanagerdata.IsReadOnlyRequest
	(*multipoolermanagerdata.SetPrimaryConnInfoRequest)(nil),               // 4: multipoolermanagerdata.SetPrimaryConnInfoRequest
	(*multipoolermanagerdata.StartReplicationRequest)(nil),                 // 5: multipoolermanagerdata.StartReplicationRequest
	(*multipoolermanagerdata.StopReplicationRequest)(nil),                  // 6: multipoolermanagerdata.StopReplicationRequest
	(*multipoolermanagerdata.ReplicationStatusRequest)(nil),                // 7: multipoolermanagerdata.ReplicationStatusRequest
	(*multipoolermanagerdata.ResetReplicationRequest)(nil),                 // 8: multipoolermanagerdata.ResetReplicationRequest
	(*multipoolermanagerdata.ConfigureSynchronousReplicationRequest)(nil),  // 9: multipoolermanagerdata.ConfigureSynchronousReplicationRequest
	(*multipoolermanagerdata.PrimaryStatusRequest)(nil),                    // 10: multipoolermanagerdata.PrimaryStatusRequest
	(*multipoolermanagerdata.PrimaryPositionRequest)(nil),                  // 11: multipoolermanagerdata.PrimaryPositionRequest
	(*multipoolermanagerdata.StopReplicationAndGetStatusRequest)(nil),      // 12: multipoolermanagerdata.StopReplicationAndGetStatusRequest
	(*multipoolermanagerdata.ChangeTypeRequest)(nil),                       // 13: multipoolermanagerdata.ChangeTypeRequest
	(*multipoolermanagerdata.GetFollowersRequest)(nil),                     // 14: multipoolermanagerdata.GetFollowersRequest
	(*multipoolermanagerdata.DemoteRequest)(nil),                           // 15: multipoolermanagerdata.DemoteRequest
	(*multipoolermanagerdata.UndoDemoteRequest)(nil),                       // 16: multipoolermanagerdata.UndoDemoteRequest
	(*multipoolermanagerdata.PromoteRequest)(nil),                          // 17: multipoolermanagerdata.PromoteRequest
	(*multipoolermanagerdata.WaitForLSNResponse)(nil),                      // 18: multipoolermanagerdata.WaitForLSNResponse
	(*multipoolermanagerdata.SetReadOnlyResponse)(nil),                     // 19: multipoolermanagerdata.SetReadOnlyResponse
	(*multipoolermanagerdata.PgPromoteResponse)(nil),                       // 20: multipoolermanagerdata.PgPromoteResponse
	(*multipoolermanagerdata.IsReadOnlyResponse)(nil),                      // 21: multipoolermanagerdata.IsReadOnlyResponse
	(*multipoolermanagerdata.SetPrimaryConnInfoResponse)(nil),              // 22: multipoolermanagerdata.SetPrimaryConnInfoResponse
	(*multipoolermanagerdata.StartReplicationResponse)(nil),                // 23: multipoolermanagerdata.StartReplicationResponse
	(*multipoolermanagerdata.StopReplicationResponse)(nil),                 // 24: multipoolermanagerdata.StopReplicationResponse
	(*multipoolermanagerdata.ReplicationStatusResponse)(nil),               // 25: multipoolermanagerdata.ReplicationStatusResponse
	(*multipoolermanagerdata.ResetReplicationResponse)(nil),                // 26: multipoolermanagerdata.ResetReplicationResponse
	(*multipoolermanagerdata.ConfigureSynchronousReplicationResponse)(nil), // 27: multipoolermanagerdata.ConfigureSynchronousReplicationResponse
	(*multipoolermanagerdata.PrimaryStatusResponse)(nil),                   // 28: multipoolermanagerdata.PrimaryStatusResponse
	(*multipoolermanagerdata.PrimaryPositionResponse)(nil),                 // 29: multipoolermanagerdata.PrimaryPositionResponse
	(*multipoolermanagerdata.StopReplicationAndGetStatusResponse)(nil),     // 30: multipoolermanagerdata.StopReplicationAndGetStatusResponse
	(*multipoolermanagerdata.ChangeTypeResponse)(nil),                      // 31: multipoolermanagerdata.ChangeTypeResponse
	(*multipoolermanagerdata.GetFollowersResponse)(nil),                    // 32: multipoolermanagerdata.GetFollowersResponse
	(*multipoolermanagerdata.DemoteResponse)(nil),                          // 33: multipoolermanagerdata.DemoteResponse
	(*multipoolermanagerdata.UndoDemoteResponse)(nil),                      // 34: multipoolermanagerdata.UndoDemoteResponse
	(*multipoolermanagerdata.PromoteResponse)(nil),                         // 35: multipoolermanagerdata.PromoteResponse
}
var file_multipoolermanagerservice_proto_depIdxs = []int32{
	0,  // 0: multipoolermanager.MultiPoolerManager.WaitForLSN:input_type -> multipoolermanagerdata.WaitForLSNRequest
	1,  // 1: multipoolermanager.MultiPoolerManager.SetReadOnly:input_type -> multipoolermanagerdata.SetReadOnlyRequest
	2,  // 2: multipoolermanager.MultiPoolerManager.PgPromote:input_type -> multipoolermanagerdata.PgPromoteRequest
	3,  // 3: multipoolermanager.MultiPoolerManager.IsReadOnly:input_type -> multipoolermanagerdata.IsReadOnlyRequest
	4,  // 4: multipoolermanager.MultiPoolerManager.SetPrimaryConnInfo:input_type -> multipoolermanagerdata.SetPrimaryConnInfoRequest
	5,  // 5: multipoolermanager.MultiPoolerManager.StartReplication:input_type -> multipoolermanagerdata.StartReplicationRequest
	6,  // 6: multipoolermanager.MultiPoolerManager.StopReplication:input_type -> multipoolermanagerdata.StopReplicationRequest
	7,  // 7: multipoolermanager.MultiPoolerManager.ReplicationStatus:input_type -> multipoolermanagerdata.ReplicationStatusRequest
	8,  // 8: multipoolermanager.MultiPoolerManager.ResetReplication:input_type -> multipoolermanagerdata.ResetReplicationRequest
	9,  // 9: multipoolermanager.MultiPoolerManager.ConfigureSynchronousReplication:input_type -> multipoolermanagerdata.ConfigureSynchronousReplicationRequest
	10, // 10: multipoolermanager.MultiPoolerManager.PrimaryStatus:input_type -> multipoolermanagerdata.PrimaryStatusRequest
	11, // 11: multipoolermanager.MultiPoolerManager.PrimaryPosition:input_type -> multipoolermanagerdata.PrimaryPositionRequest
	12, // 12: multipoolermanager.MultiPoolerManager.StopReplicationAndGetStatus:input_type -> multipoolermanagerdata.StopReplicationAndGetStatusRequest
	13, // 13: multipoolermanager.MultiPoolerManager.ChangeType:input_type -> multipoolermanagerdata.ChangeTypeRequest
	14, // 14: multipoolermanager.MultiPoolerManager.GetFollowers:input_type -> multipoolermanagerdata.GetFollowersRequest
	15, // 15: multipoolermanager.MultiPoolerManager.Demote:input_type -> multipoolermanagerdata.DemoteRequest
	16, // 16: multipoolermanager.MultiPoolerManager.UndoDemote:input_type -> multipoolermanagerdata.UndoDemoteRequest
	17, // 17: multipoolermanager.MultiPoolerManager.Promote:input_type -> multipoolermanagerdata.PromoteRequest
	18, // 18: multipoolermanager.MultiPoolerManager.WaitForLSN:output_type -> multipoolermanagerdata.WaitForLSNResponse
	19, // 19: multipoolermanager.MultiPoolerManager.SetReadOnly:output_type -> multipoolermanagerdata.SetReadOnlyResponse
	20, // 20: multipoolermanager.MultiPoolerManager.PgPromote:output_type -> multipoolermanagerdata.PgPromoteResponse
	21, // 21: multipoolermanager.MultiPoolerManager.IsReadOnly:output_type -> multipoolermanagerdata.IsReadOnlyResponse
	22, // 22: multipoolermanager.MultiPoolerManager.SetPrimaryConnInfo:output_type -> multipoolermanagerdata.SetPrimaryConnInfoResponse
	23, // 23: multipoolermanager.MultiPoolerManager.StartReplication:output_type -> multipoolermanagerdata.StartReplicationResponse
	24, // 24: multipoolermanager.MultiPoolerManager.StopReplication:output_type -> multipoolermanagerdata.StopReplicationResponse
	25, // 25: multipoolermanager.MultiPoolerManager.ReplicationStatus:output_type -> multipoolermanagerdata.ReplicationStatusResponse
	26, // 26: multipoolermanager.MultiPoolerManager.ResetReplication:output_type -> multipoolermanagerdata.ResetReplicationResponse
	27, // 27: multipoolermanager.MultiPoolerManager.ConfigureSynchronousReplication:output_type -> multipoolermanagerdata.ConfigureSynchronousReplicationResponse
	28, // 28: multipoolermanager.MultiPoolerManager.PrimaryStatus:output_type -> multipoolermanagerdata.PrimaryStatusResponse
	29, // 29: multipoolermanager.MultiPoolerManager.PrimaryPosition:output_type -> multipoolermanagerdata.PrimaryPositionResponse
	30, // 30: multipoolermanager.MultiPoolerManager.StopReplicationAndGetStatus:output_type -> multipoolermanagerdata.StopReplicationAndGetStatusResponse
	31, // 31: multipoolermanager.MultiPoolerManager.ChangeType:output_type -> multipoolermanagerdata.ChangeTypeResponse
	32, // 32: multipoolermanager.MultiPoolerManager.GetFollowers:output_type -> multipoolermanagerdata.GetFollowersResponse
	33, // 33: multipoolermanager.MultiPoolerManager.Demote:output_type -> multipoolermanagerdata.DemoteResponse
	34, // 34: multipoolermanager.MultiPoolerManager.UndoDemote:output_type -> multipoolermanagerdata.UndoDemoteResponse
	35, // 35: multipoolermanager.MultiPoolerManager.Promote:output_type -> multipoolermanagerdata.PromoteResponse
	18, // [18:36] is the sub-list for method output_type
	0,  // [0:18] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_multipoolermanagerservice_proto_init() }
func file_multipoolermanagerservice_proto_init() {
	if File_multipoolermanagerservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_multipoolermanagerservice_proto_rawDesc), len(file_multipoolermanagerservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_multipoolermanagerservice_proto_goTypes,
		DependencyIndexes: file_multipoolermanagerservice_proto_depIdxs,
	}.Build()
	File_multipoolermanagerservice_proto = out.File
	file_multipoolermanagerservice_proto_goTypes = nil
	file_multipoolermanagerservice_proto_depIdxs = nil
}
