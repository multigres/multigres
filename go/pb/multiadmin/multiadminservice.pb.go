// Copyright 2025 The Multigres Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v4.25.1
// source: multiadminservice.proto

package multiadmin

import (
	clustermetadata "github.com/multigres/multigres/go/pb/clustermetadata"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetCellRequest specifies the cell to retrieve
type GetCellRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the name of the cell to retrieve
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCellRequest) Reset() {
	*x = GetCellRequest{}
	mi := &file_multiadminservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCellRequest) ProtoMessage() {}

func (x *GetCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCellRequest.ProtoReflect.Descriptor instead.
func (*GetCellRequest) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{0}
}

func (x *GetCellRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetCellResponse contains the cell information
type GetCellResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// cell contains the Cell protobuf object
	Cell          *clustermetadata.Cell `protobuf:"bytes,1,opt,name=cell,proto3" json:"cell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCellResponse) Reset() {
	*x = GetCellResponse{}
	mi := &file_multiadminservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCellResponse) ProtoMessage() {}

func (x *GetCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCellResponse.ProtoReflect.Descriptor instead.
func (*GetCellResponse) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetCellResponse) GetCell() *clustermetadata.Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

// GetDatabaseRequest specifies the database to retrieve
type GetDatabaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the name of the database to retrieve
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatabaseRequest) Reset() {
	*x = GetDatabaseRequest{}
	mi := &file_multiadminservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseRequest) ProtoMessage() {}

func (x *GetDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseRequest.ProtoReflect.Descriptor instead.
func (*GetDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{2}
}

func (x *GetDatabaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetDatabaseResponse contains the database information
type GetDatabaseResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// database contains the Database protobuf object
	Database      *clustermetadata.Database `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatabaseResponse) Reset() {
	*x = GetDatabaseResponse{}
	mi := &file_multiadminservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseResponse) ProtoMessage() {}

func (x *GetDatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseResponse.ProtoReflect.Descriptor instead.
func (*GetDatabaseResponse) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{3}
}

func (x *GetDatabaseResponse) GetDatabase() *clustermetadata.Database {
	if x != nil {
		return x.Database
	}
	return nil
}

var File_multiadminservice_proto protoreflect.FileDescriptor

const file_multiadminservice_proto_rawDesc = "" +
	"\n" +
	"\x17multiadminservice.proto\x12\n" +
	"multiadmin\x1a\x15clustermetadata.proto\"$\n" +
	"\x0eGetCellRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"<\n" +
	"\x0fGetCellResponse\x12)\n" +
	"\x04cell\x18\x01 \x01(\v2\x15.clustermetadata.CellR\x04cell\"(\n" +
	"\x12GetDatabaseRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"L\n" +
	"\x13GetDatabaseResponse\x125\n" +
	"\bdatabase\x18\x01 \x01(\v2\x19.clustermetadata.DatabaseR\bdatabase2\xa7\x01\n" +
	"\x11MultiAdminService\x12B\n" +
	"\aGetCell\x12\x1a.multiadmin.GetCellRequest\x1a\x1b.multiadmin.GetCellResponse\x12N\n" +
	"\vGetDatabase\x12\x1e.multiadmin.GetDatabaseRequest\x1a\x1f.multiadmin.GetDatabaseResponseB1Z/github.com/multigres/multigres/go/pb/multiadminb\x06proto3"

var (
	file_multiadminservice_proto_rawDescOnce sync.Once
	file_multiadminservice_proto_rawDescData []byte
)

func file_multiadminservice_proto_rawDescGZIP() []byte {
	file_multiadminservice_proto_rawDescOnce.Do(func() {
		file_multiadminservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_multiadminservice_proto_rawDesc), len(file_multiadminservice_proto_rawDesc)))
	})
	return file_multiadminservice_proto_rawDescData
}

var file_multiadminservice_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_multiadminservice_proto_goTypes = []any{
	(*GetCellRequest)(nil),           // 0: multiadmin.GetCellRequest
	(*GetCellResponse)(nil),          // 1: multiadmin.GetCellResponse
	(*GetDatabaseRequest)(nil),       // 2: multiadmin.GetDatabaseRequest
	(*GetDatabaseResponse)(nil),      // 3: multiadmin.GetDatabaseResponse
	(*clustermetadata.Cell)(nil),     // 4: clustermetadata.Cell
	(*clustermetadata.Database)(nil), // 5: clustermetadata.Database
}
var file_multiadminservice_proto_depIdxs = []int32{
	4, // 0: multiadmin.GetCellResponse.cell:type_name -> clustermetadata.Cell
	5, // 1: multiadmin.GetDatabaseResponse.database:type_name -> clustermetadata.Database
	0, // 2: multiadmin.MultiAdminService.GetCell:input_type -> multiadmin.GetCellRequest
	2, // 3: multiadmin.MultiAdminService.GetDatabase:input_type -> multiadmin.GetDatabaseRequest
	1, // 4: multiadmin.MultiAdminService.GetCell:output_type -> multiadmin.GetCellResponse
	3, // 5: multiadmin.MultiAdminService.GetDatabase:output_type -> multiadmin.GetDatabaseResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_multiadminservice_proto_init() }
func file_multiadminservice_proto_init() {
	if File_multiadminservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_multiadminservice_proto_rawDesc), len(file_multiadminservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_multiadminservice_proto_goTypes,
		DependencyIndexes: file_multiadminservice_proto_depIdxs,
		MessageInfos:      file_multiadminservice_proto_msgTypes,
	}.Build()
	File_multiadminservice_proto = out.File
	file_multiadminservice_proto_goTypes = nil
	file_multiadminservice_proto_depIdxs = nil
}
