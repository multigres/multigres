// Copyright 2025 Supabase, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v4.25.1
// source: multiadminservice.proto

package multiadmin

import (
	clustermetadata "github.com/multigres/multigres/go/pb/clustermetadata"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetCellRequest specifies the cell to retrieve
type GetCellRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the name of the cell to retrieve
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCellRequest) Reset() {
	*x = GetCellRequest{}
	mi := &file_multiadminservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCellRequest) ProtoMessage() {}

func (x *GetCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCellRequest.ProtoReflect.Descriptor instead.
func (*GetCellRequest) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{0}
}

func (x *GetCellRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetCellResponse contains the cell information
type GetCellResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// cell contains the Cell protobuf object
	Cell          *clustermetadata.Cell `protobuf:"bytes,1,opt,name=cell,proto3" json:"cell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCellResponse) Reset() {
	*x = GetCellResponse{}
	mi := &file_multiadminservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCellResponse) ProtoMessage() {}

func (x *GetCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCellResponse.ProtoReflect.Descriptor instead.
func (*GetCellResponse) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetCellResponse) GetCell() *clustermetadata.Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

// GetDatabaseRequest specifies the database to retrieve
type GetDatabaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the name of the database to retrieve
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatabaseRequest) Reset() {
	*x = GetDatabaseRequest{}
	mi := &file_multiadminservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseRequest) ProtoMessage() {}

func (x *GetDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseRequest.ProtoReflect.Descriptor instead.
func (*GetDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{2}
}

func (x *GetDatabaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetDatabaseResponse contains the database information
type GetDatabaseResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// database contains the Database protobuf object
	Database      *clustermetadata.Database `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatabaseResponse) Reset() {
	*x = GetDatabaseResponse{}
	mi := &file_multiadminservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseResponse) ProtoMessage() {}

func (x *GetDatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseResponse.ProtoReflect.Descriptor instead.
func (*GetDatabaseResponse) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{3}
}

func (x *GetDatabaseResponse) GetDatabase() *clustermetadata.Database {
	if x != nil {
		return x.Database
	}
	return nil
}

// GetCellNamesRequest requests all cell names
type GetCellNamesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCellNamesRequest) Reset() {
	*x = GetCellNamesRequest{}
	mi := &file_multiadminservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCellNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCellNamesRequest) ProtoMessage() {}

func (x *GetCellNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCellNamesRequest.ProtoReflect.Descriptor instead.
func (*GetCellNamesRequest) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{4}
}

// GetCellNamesResponse contains all cell names
type GetCellNamesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCellNamesResponse) Reset() {
	*x = GetCellNamesResponse{}
	mi := &file_multiadminservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCellNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCellNamesResponse) ProtoMessage() {}

func (x *GetCellNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCellNamesResponse.ProtoReflect.Descriptor instead.
func (*GetCellNamesResponse) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{5}
}

func (x *GetCellNamesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// GetDatabaseNamesRequest requests all database names
type GetDatabaseNamesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatabaseNamesRequest) Reset() {
	*x = GetDatabaseNamesRequest{}
	mi := &file_multiadminservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatabaseNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseNamesRequest) ProtoMessage() {}

func (x *GetDatabaseNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseNamesRequest.ProtoReflect.Descriptor instead.
func (*GetDatabaseNamesRequest) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{6}
}

// GetDatabaseNamesResponse contains all database names
type GetDatabaseNamesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatabaseNamesResponse) Reset() {
	*x = GetDatabaseNamesResponse{}
	mi := &file_multiadminservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatabaseNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseNamesResponse) ProtoMessage() {}

func (x *GetDatabaseNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseNamesResponse.ProtoReflect.Descriptor instead.
func (*GetDatabaseNamesResponse) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{7}
}

func (x *GetDatabaseNamesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// GetGatewaysRequest requests gateways with optional filtering
type GetGatewaysRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// cells is a comma-separated list of cell names to filter by (optional)
	Cells         []string `protobuf:"bytes,1,rep,name=cells,proto3" json:"cells,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGatewaysRequest) Reset() {
	*x = GetGatewaysRequest{}
	mi := &file_multiadminservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewaysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewaysRequest) ProtoMessage() {}

func (x *GetGatewaysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewaysRequest.ProtoReflect.Descriptor instead.
func (*GetGatewaysRequest) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{8}
}

func (x *GetGatewaysRequest) GetCells() []string {
	if x != nil {
		return x.Cells
	}
	return nil
}

// GetGatewaysResponse contains the filtered gateways
type GetGatewaysResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Gateways      []*clustermetadata.MultiGateway `protobuf:"bytes,1,rep,name=gateways,proto3" json:"gateways,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGatewaysResponse) Reset() {
	*x = GetGatewaysResponse{}
	mi := &file_multiadminservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewaysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewaysResponse) ProtoMessage() {}

func (x *GetGatewaysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewaysResponse.ProtoReflect.Descriptor instead.
func (*GetGatewaysResponse) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{9}
}

func (x *GetGatewaysResponse) GetGateways() []*clustermetadata.MultiGateway {
	if x != nil {
		return x.Gateways
	}
	return nil
}

// GetPoolersRequest requests poolers with optional filtering
type GetPoolersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// cells is a comma-separated list of cell names to filter by (optional)
	Cells []string `protobuf:"bytes,1,rep,name=cells,proto3" json:"cells,omitempty"`
	// database name to filter by (optional)
	Database string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	// shard name to filter by (optional)
	Shard         string `protobuf:"bytes,3,opt,name=shard,proto3" json:"shard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPoolersRequest) Reset() {
	*x = GetPoolersRequest{}
	mi := &file_multiadminservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPoolersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolersRequest) ProtoMessage() {}

func (x *GetPoolersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolersRequest.ProtoReflect.Descriptor instead.
func (*GetPoolersRequest) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{10}
}

func (x *GetPoolersRequest) GetCells() []string {
	if x != nil {
		return x.Cells
	}
	return nil
}

func (x *GetPoolersRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *GetPoolersRequest) GetShard() string {
	if x != nil {
		return x.Shard
	}
	return ""
}

// GetPoolersResponse contains the filtered poolers
type GetPoolersResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Poolers       []*clustermetadata.MultiPooler `protobuf:"bytes,1,rep,name=poolers,proto3" json:"poolers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPoolersResponse) Reset() {
	*x = GetPoolersResponse{}
	mi := &file_multiadminservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPoolersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolersResponse) ProtoMessage() {}

func (x *GetPoolersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolersResponse.ProtoReflect.Descriptor instead.
func (*GetPoolersResponse) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{11}
}

func (x *GetPoolersResponse) GetPoolers() []*clustermetadata.MultiPooler {
	if x != nil {
		return x.Poolers
	}
	return nil
}

// GetOrchsRequest requests orchestrators with optional filtering
type GetOrchsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// cells is a comma-separated list of cell names to filter by (optional)
	Cells         []string `protobuf:"bytes,1,rep,name=cells,proto3" json:"cells,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrchsRequest) Reset() {
	*x = GetOrchsRequest{}
	mi := &file_multiadminservice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrchsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrchsRequest) ProtoMessage() {}

func (x *GetOrchsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrchsRequest.ProtoReflect.Descriptor instead.
func (*GetOrchsRequest) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{12}
}

func (x *GetOrchsRequest) GetCells() []string {
	if x != nil {
		return x.Cells
	}
	return nil
}

// GetOrchsResponse contains the filtered orchestrators
type GetOrchsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
	Orchs         []*clustermetadata.MultiOrch `protobuf:"bytes,1,rep,name=orchs,proto3" json:"orchs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrchsResponse) Reset() {
	*x = GetOrchsResponse{}
	mi := &file_multiadminservice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrchsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrchsResponse) ProtoMessage() {}

func (x *GetOrchsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiadminservice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrchsResponse.ProtoReflect.Descriptor instead.
func (*GetOrchsResponse) Descriptor() ([]byte, []int) {
	return file_multiadminservice_proto_rawDescGZIP(), []int{13}
}

func (x *GetOrchsResponse) GetOrchs() []*clustermetadata.MultiOrch {
	if x != nil {
		return x.Orchs
	}
	return nil
}

var File_multiadminservice_proto protoreflect.FileDescriptor

const file_multiadminservice_proto_rawDesc = "" +
	"\n" +
	"\x17multiadminservice.proto\x12\n" +
	"multiadmin\x1a\x15clustermetadata.proto\"$\n" +
	"\x0eGetCellRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"<\n" +
	"\x0fGetCellResponse\x12)\n" +
	"\x04cell\x18\x01 \x01(\v2\x15.clustermetadata.CellR\x04cell\"(\n" +
	"\x12GetDatabaseRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"L\n" +
	"\x13GetDatabaseResponse\x125\n" +
	"\bdatabase\x18\x01 \x01(\v2\x19.clustermetadata.DatabaseR\bdatabase\"\x15\n" +
	"\x13GetCellNamesRequest\",\n" +
	"\x14GetCellNamesResponse\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"\x19\n" +
	"\x17GetDatabaseNamesRequest\"0\n" +
	"\x18GetDatabaseNamesResponse\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"*\n" +
	"\x12GetGatewaysRequest\x12\x14\n" +
	"\x05cells\x18\x01 \x03(\tR\x05cells\"P\n" +
	"\x13GetGatewaysResponse\x129\n" +
	"\bgateways\x18\x01 \x03(\v2\x1d.clustermetadata.MultiGatewayR\bgateways\"[\n" +
	"\x11GetPoolersRequest\x12\x14\n" +
	"\x05cells\x18\x01 \x03(\tR\x05cells\x12\x1a\n" +
	"\bdatabase\x18\x02 \x01(\tR\bdatabase\x12\x14\n" +
	"\x05shard\x18\x03 \x01(\tR\x05shard\"L\n" +
	"\x12GetPoolersResponse\x126\n" +
	"\apoolers\x18\x01 \x03(\v2\x1c.clustermetadata.MultiPoolerR\apoolers\"'\n" +
	"\x0fGetOrchsRequest\x12\x14\n" +
	"\x05cells\x18\x01 \x03(\tR\x05cells\"D\n" +
	"\x10GetOrchsResponse\x120\n" +
	"\x05orchs\x18\x01 \x03(\v2\x1a.clustermetadata.MultiOrchR\x05orchs2\xbd\x04\n" +
	"\x11MultiAdminService\x12B\n" +
	"\aGetCell\x12\x1a.multiadmin.GetCellRequest\x1a\x1b.multiadmin.GetCellResponse\x12N\n" +
	"\vGetDatabase\x12\x1e.multiadmin.GetDatabaseRequest\x1a\x1f.multiadmin.GetDatabaseResponse\x12Q\n" +
	"\fGetCellNames\x12\x1f.multiadmin.GetCellNamesRequest\x1a .multiadmin.GetCellNamesResponse\x12]\n" +
	"\x10GetDatabaseNames\x12#.multiadmin.GetDatabaseNamesRequest\x1a$.multiadmin.GetDatabaseNamesResponse\x12N\n" +
	"\vGetGateways\x12\x1e.multiadmin.GetGatewaysRequest\x1a\x1f.multiadmin.GetGatewaysResponse\x12K\n" +
	"\n" +
	"GetPoolers\x12\x1d.multiadmin.GetPoolersRequest\x1a\x1e.multiadmin.GetPoolersResponse\x12E\n" +
	"\bGetOrchs\x12\x1b.multiadmin.GetOrchsRequest\x1a\x1c.multiadmin.GetOrchsResponseB1Z/github.com/multigres/multigres/go/pb/multiadminb\x06proto3"

var (
	file_multiadminservice_proto_rawDescOnce sync.Once
	file_multiadminservice_proto_rawDescData []byte
)

func file_multiadminservice_proto_rawDescGZIP() []byte {
	file_multiadminservice_proto_rawDescOnce.Do(func() {
		file_multiadminservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_multiadminservice_proto_rawDesc), len(file_multiadminservice_proto_rawDesc)))
	})
	return file_multiadminservice_proto_rawDescData
}

var file_multiadminservice_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_multiadminservice_proto_goTypes = []any{
	(*GetCellRequest)(nil),               // 0: multiadmin.GetCellRequest
	(*GetCellResponse)(nil),              // 1: multiadmin.GetCellResponse
	(*GetDatabaseRequest)(nil),           // 2: multiadmin.GetDatabaseRequest
	(*GetDatabaseResponse)(nil),          // 3: multiadmin.GetDatabaseResponse
	(*GetCellNamesRequest)(nil),          // 4: multiadmin.GetCellNamesRequest
	(*GetCellNamesResponse)(nil),         // 5: multiadmin.GetCellNamesResponse
	(*GetDatabaseNamesRequest)(nil),      // 6: multiadmin.GetDatabaseNamesRequest
	(*GetDatabaseNamesResponse)(nil),     // 7: multiadmin.GetDatabaseNamesResponse
	(*GetGatewaysRequest)(nil),           // 8: multiadmin.GetGatewaysRequest
	(*GetGatewaysResponse)(nil),          // 9: multiadmin.GetGatewaysResponse
	(*GetPoolersRequest)(nil),            // 10: multiadmin.GetPoolersRequest
	(*GetPoolersResponse)(nil),           // 11: multiadmin.GetPoolersResponse
	(*GetOrchsRequest)(nil),              // 12: multiadmin.GetOrchsRequest
	(*GetOrchsResponse)(nil),             // 13: multiadmin.GetOrchsResponse
	(*clustermetadata.Cell)(nil),         // 14: clustermetadata.Cell
	(*clustermetadata.Database)(nil),     // 15: clustermetadata.Database
	(*clustermetadata.MultiGateway)(nil), // 16: clustermetadata.MultiGateway
	(*clustermetadata.MultiPooler)(nil),  // 17: clustermetadata.MultiPooler
	(*clustermetadata.MultiOrch)(nil),    // 18: clustermetadata.MultiOrch
}
var file_multiadminservice_proto_depIdxs = []int32{
	14, // 0: multiadmin.GetCellResponse.cell:type_name -> clustermetadata.Cell
	15, // 1: multiadmin.GetDatabaseResponse.database:type_name -> clustermetadata.Database
	16, // 2: multiadmin.GetGatewaysResponse.gateways:type_name -> clustermetadata.MultiGateway
	17, // 3: multiadmin.GetPoolersResponse.poolers:type_name -> clustermetadata.MultiPooler
	18, // 4: multiadmin.GetOrchsResponse.orchs:type_name -> clustermetadata.MultiOrch
	0,  // 5: multiadmin.MultiAdminService.GetCell:input_type -> multiadmin.GetCellRequest
	2,  // 6: multiadmin.MultiAdminService.GetDatabase:input_type -> multiadmin.GetDatabaseRequest
	4,  // 7: multiadmin.MultiAdminService.GetCellNames:input_type -> multiadmin.GetCellNamesRequest
	6,  // 8: multiadmin.MultiAdminService.GetDatabaseNames:input_type -> multiadmin.GetDatabaseNamesRequest
	8,  // 9: multiadmin.MultiAdminService.GetGateways:input_type -> multiadmin.GetGatewaysRequest
	10, // 10: multiadmin.MultiAdminService.GetPoolers:input_type -> multiadmin.GetPoolersRequest
	12, // 11: multiadmin.MultiAdminService.GetOrchs:input_type -> multiadmin.GetOrchsRequest
	1,  // 12: multiadmin.MultiAdminService.GetCell:output_type -> multiadmin.GetCellResponse
	3,  // 13: multiadmin.MultiAdminService.GetDatabase:output_type -> multiadmin.GetDatabaseResponse
	5,  // 14: multiadmin.MultiAdminService.GetCellNames:output_type -> multiadmin.GetCellNamesResponse
	7,  // 15: multiadmin.MultiAdminService.GetDatabaseNames:output_type -> multiadmin.GetDatabaseNamesResponse
	9,  // 16: multiadmin.MultiAdminService.GetGateways:output_type -> multiadmin.GetGatewaysResponse
	11, // 17: multiadmin.MultiAdminService.GetPoolers:output_type -> multiadmin.GetPoolersResponse
	13, // 18: multiadmin.MultiAdminService.GetOrchs:output_type -> multiadmin.GetOrchsResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_multiadminservice_proto_init() }
func file_multiadminservice_proto_init() {
	if File_multiadminservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_multiadminservice_proto_rawDesc), len(file_multiadminservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_multiadminservice_proto_goTypes,
		DependencyIndexes: file_multiadminservice_proto_depIdxs,
		MessageInfos:      file_multiadminservice_proto_msgTypes,
	}.Build()
	File_multiadminservice_proto = out.File
	file_multiadminservice_proto_goTypes = nil
	file_multiadminservice_proto_depIdxs = nil
}
