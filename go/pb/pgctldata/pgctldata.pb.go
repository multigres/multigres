// Copyright 2025 Supabase, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: pgctldata.proto

package pgctldata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PostgreSQL replication status information
type ReplicationStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Current replication LSN position (PostgreSQL format: X/XXXXXXXX)
	Lsn string `protobuf:"bytes,1,opt,name=lsn,proto3" json:"lsn,omitempty"`
	// Whether replication is stopped/paused
	Stopped bool `protobuf:"varint,2,opt,name=stopped,proto3" json:"stopped,omitempty"`
	// Result of pg_is_wal_replay_paused()
	IsWalReplayPaused bool `protobuf:"varint,3,opt,name=is_wal_replay_paused,json=isWalReplayPaused,proto3" json:"is_wal_replay_paused,omitempty"`
	// Result of pg_get_wal_replay_pause_state()
	WalReplayPauseState string `protobuf:"bytes,4,opt,name=wal_replay_pause_state,json=walReplayPauseState,proto3" json:"wal_replay_pause_state,omitempty"`
	// Replication lag in seconds (optional, may not always be available)
	LagSeconds    int64 `protobuf:"varint,5,opt,name=lag_seconds,json=lagSeconds,proto3" json:"lag_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicationStatus) Reset() {
	*x = ReplicationStatus{}
	mi := &file_pgctldata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationStatus) ProtoMessage() {}

func (x *ReplicationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationStatus.ProtoReflect.Descriptor instead.
func (*ReplicationStatus) Descriptor() ([]byte, []int) {
	return file_pgctldata_proto_rawDescGZIP(), []int{0}
}

func (x *ReplicationStatus) GetLsn() string {
	if x != nil {
		return x.Lsn
	}
	return ""
}

func (x *ReplicationStatus) GetStopped() bool {
	if x != nil {
		return x.Stopped
	}
	return false
}

func (x *ReplicationStatus) GetIsWalReplayPaused() bool {
	if x != nil {
		return x.IsWalReplayPaused
	}
	return false
}

func (x *ReplicationStatus) GetWalReplayPauseState() string {
	if x != nil {
		return x.WalReplayPauseState
	}
	return ""
}

func (x *ReplicationStatus) GetLagSeconds() int64 {
	if x != nil {
		return x.LagSeconds
	}
	return 0
}

// Wait for PostgreSQL server to reach a specific LSN position
type WaitForLSNRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Target LSN position to wait for (PostgreSQL LSN format: X/XXXXXXXX)
	TargetLsn string `protobuf:"bytes,1,opt,name=target_lsn,json=targetLsn,proto3" json:"target_lsn,omitempty"`
	// Timeout in seconds (0 means no timeout)
	TimeoutSeconds int32 `protobuf:"varint,2,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WaitForLSNRequest) Reset() {
	*x = WaitForLSNRequest{}
	mi := &file_pgctldata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitForLSNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForLSNRequest) ProtoMessage() {}

func (x *WaitForLSNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForLSNRequest.ProtoReflect.Descriptor instead.
func (*WaitForLSNRequest) Descriptor() ([]byte, []int) {
	return file_pgctldata_proto_rawDescGZIP(), []int{1}
}

func (x *WaitForLSNRequest) GetTargetLsn() string {
	if x != nil {
		return x.TargetLsn
	}
	return ""
}

func (x *WaitForLSNRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type WaitForLSNResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitForLSNResponse) Reset() {
	*x = WaitForLSNResponse{}
	mi := &file_pgctldata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitForLSNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForLSNResponse) ProtoMessage() {}

func (x *WaitForLSNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForLSNResponse.ProtoReflect.Descriptor instead.
func (*WaitForLSNResponse) Descriptor() ([]byte, []int) {
	return file_pgctldata_proto_rawDescGZIP(), []int{2}
}

// Start PostgreSQL replication (calls pg_wal_replay_resume)
type StartReplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartReplicationRequest) Reset() {
	*x = StartReplicationRequest{}
	mi := &file_pgctldata_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReplicationRequest) ProtoMessage() {}

func (x *StartReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldata_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReplicationRequest.ProtoReflect.Descriptor instead.
func (*StartReplicationRequest) Descriptor() ([]byte, []int) {
	return file_pgctldata_proto_rawDescGZIP(), []int{3}
}

type StartReplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartReplicationResponse) Reset() {
	*x = StartReplicationResponse{}
	mi := &file_pgctldata_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartReplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReplicationResponse) ProtoMessage() {}

func (x *StartReplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldata_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReplicationResponse.ProtoReflect.Descriptor instead.
func (*StartReplicationResponse) Descriptor() ([]byte, []int) {
	return file_pgctldata_proto_rawDescGZIP(), []int{4}
}

// Stop PostgreSQL replication (calls pg_wal_replay_pause)
type StopReplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopReplicationRequest) Reset() {
	*x = StopReplicationRequest{}
	mi := &file_pgctldata_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReplicationRequest) ProtoMessage() {}

func (x *StopReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldata_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReplicationRequest.ProtoReflect.Descriptor instead.
func (*StopReplicationRequest) Descriptor() ([]byte, []int) {
	return file_pgctldata_proto_rawDescGZIP(), []int{5}
}

type StopReplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopReplicationResponse) Reset() {
	*x = StopReplicationResponse{}
	mi := &file_pgctldata_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopReplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReplicationResponse) ProtoMessage() {}

func (x *StopReplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pgctldata_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReplicationResponse.ProtoReflect.Descriptor instead.
func (*StopReplicationResponse) Descriptor() ([]byte, []int) {
	return file_pgctldata_proto_rawDescGZIP(), []int{6}
}

var File_pgctldata_proto protoreflect.FileDescriptor

const file_pgctldata_proto_rawDesc = "" +
	"\n" +
	"\x0fpgctldata.proto\x12\tpgctldata\"\xc6\x01\n" +
	"\x11ReplicationStatus\x12\x10\n" +
	"\x03lsn\x18\x01 \x01(\tR\x03lsn\x12\x18\n" +
	"\astopped\x18\x02 \x01(\bR\astopped\x12/\n" +
	"\x14is_wal_replay_paused\x18\x03 \x01(\bR\x11isWalReplayPaused\x123\n" +
	"\x16wal_replay_pause_state\x18\x04 \x01(\tR\x13walReplayPauseState\x12\x1f\n" +
	"\vlag_seconds\x18\x05 \x01(\x03R\n" +
	"lagSeconds\"[\n" +
	"\x11WaitForLSNRequest\x12\x1d\n" +
	"\n" +
	"target_lsn\x18\x01 \x01(\tR\ttargetLsn\x12'\n" +
	"\x0ftimeout_seconds\x18\x02 \x01(\x05R\x0etimeoutSeconds\"\x14\n" +
	"\x12WaitForLSNResponse\"\x19\n" +
	"\x17StartReplicationRequest\"\x1a\n" +
	"\x18StartReplicationResponse\"\x18\n" +
	"\x16StopReplicationRequest\"\x19\n" +
	"\x17StopReplicationResponseB0Z.github.com/multigres/multigres/go/pb/pgctldatab\x06proto3"

var (
	file_pgctldata_proto_rawDescOnce sync.Once
	file_pgctldata_proto_rawDescData []byte
)

func file_pgctldata_proto_rawDescGZIP() []byte {
	file_pgctldata_proto_rawDescOnce.Do(func() {
		file_pgctldata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pgctldata_proto_rawDesc), len(file_pgctldata_proto_rawDesc)))
	})
	return file_pgctldata_proto_rawDescData
}

var file_pgctldata_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pgctldata_proto_goTypes = []any{
	(*ReplicationStatus)(nil),        // 0: pgctldata.ReplicationStatus
	(*WaitForLSNRequest)(nil),        // 1: pgctldata.WaitForLSNRequest
	(*WaitForLSNResponse)(nil),       // 2: pgctldata.WaitForLSNResponse
	(*StartReplicationRequest)(nil),  // 3: pgctldata.StartReplicationRequest
	(*StartReplicationResponse)(nil), // 4: pgctldata.StartReplicationResponse
	(*StopReplicationRequest)(nil),   // 5: pgctldata.StopReplicationRequest
	(*StopReplicationResponse)(nil),  // 6: pgctldata.StopReplicationResponse
}
var file_pgctldata_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pgctldata_proto_init() }
func file_pgctldata_proto_init() {
	if File_pgctldata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pgctldata_proto_rawDesc), len(file_pgctldata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pgctldata_proto_goTypes,
		DependencyIndexes: file_pgctldata_proto_depIdxs,
		MessageInfos:      file_pgctldata_proto_msgTypes,
	}.Build()
	File_pgctldata_proto = out.File
	file_pgctldata_proto_goTypes = nil
	file_pgctldata_proto_depIdxs = nil
}
