#!/bin/bash

# Test script for Phase 3D JOIN functionality
# This tests if the parser can actually handle JOINs and CTEs

echo "Testing Phase 3D JOIN functionality..."

# Test 1: Basic INNER JOIN
echo "Test 1: Basic INNER JOIN"
echo "SELECT * FROM users INNER JOIN orders ON users.id = orders.user_id" | go run . -

# Test 2: LEFT JOIN
echo "Test 2: LEFT JOIN" 
echo "SELECT * FROM users LEFT JOIN orders ON users.id = orders.user_id" | go run . -

# Test 3: JOIN with USING clause
echo "Test 3: JOIN with USING"
echo "SELECT * FROM users JOIN orders USING (user_id)" | go run . -

# Test 4: CROSS JOIN
echo "Test 4: CROSS JOIN"
echo "SELECT * FROM users CROSS JOIN orders" | go run . -

# Test 5: WITH clause (CTE)
echo "Test 5: Basic CTE"
echo "WITH user_stats AS (SELECT user_id, COUNT(*) FROM orders GROUP BY user_id) SELECT * FROM user_stats" | go run . -

# Test 6: Recursive CTE
echo "Test 6: Recursive CTE" 
echo "WITH RECURSIVE t AS (SELECT 1 UNION ALL SELECT n+1 FROM t WHERE n < 10) SELECT * FROM t" | go run . -

# Test 7: Subquery in FROM
echo "Test 7: Subquery in FROM"
echo "SELECT * FROM (SELECT user_id, COUNT(*) FROM orders GROUP BY user_id) AS stats" | go run . -

# Test 8: LATERAL subquery
echo "Test 8: LATERAL subquery"
echo "SELECT * FROM users, LATERAL (SELECT * FROM orders WHERE orders.user_id = users.id) AS user_orders" | go run . -