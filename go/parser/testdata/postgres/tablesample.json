[
  {
    "comment": "tablesample - Statement 1",
    "query": "CREATE TABLE test_tablesample (id int, name text) WITH (fillfactor=10)"
  },
  {
    "comment": "tablesample - Statement 2",
    "query": "INSERT INTO test_tablesample SELECT i, repeat(i::text, 200) FROM generate_series(0, 9) s(i)"
  },
  {
    "comment": "tablesample - Statement 3",
    "query": "SELECT t.id FROM test_tablesample AS t TABLESAMPLE SYSTEM (50) REPEATABLE (0)"
  },
  {
    "comment": "tablesample - Statement 4",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (100.0/11) REPEATABLE (0)"
  },
  {
    "comment": "tablesample - Statement 5",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (50) REPEATABLE (0)"
  },
  {
    "comment": "tablesample - Statement 6",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE BERNOULLI (50) REPEATABLE (0)"
  },
  {
    "comment": "tablesample - Statement 7",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE BERNOULLI (5.5) REPEATABLE (0)"
  },
  {
    "comment": "tablesample - Statement 8",
    "query": "SELECT count(*) FROM test_tablesample TABLESAMPLE SYSTEM (100)"
  },
  {
    "comment": "tablesample - Statement 9",
    "query": "SELECT count(*) FROM test_tablesample TABLESAMPLE SYSTEM (100) REPEATABLE (1+2)"
  },
  {
    "comment": "tablesample - Statement 10",
    "query": "SELECT count(*) FROM test_tablesample TABLESAMPLE SYSTEM (100) REPEATABLE (0.4)"
  },
  {
    "comment": "tablesample - Statement 11",
    "query": "CREATE VIEW test_tablesample_v1 AS SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (10*2) REPEATABLE (2)"
  },
  {
    "comment": "tablesample - Statement 12",
    "query": "CREATE VIEW test_tablesample_v2 AS SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (99)"
  },
  {
    "comment": "tablesample - Statement 13",
    "query": "DECLARE tablesample_cur SCROLL CURSOR FOR SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (50) REPEATABLE (0)"
  },
  {
    "comment": "tablesample - Statement 14",
    "query": "FETCH FIRST FROM tablesample_cur"
  },
  {
    "comment": "tablesample - Statement 15",
    "query": "FETCH NEXT FROM tablesample_cur"
  },
  {
    "comment": "tablesample - Statement 16",
    "query": "CLOSE tablesample_cur"
  },
  {
    "comment": "tablesample - Statement 17",
    "query": "END"
  },
  {
    "comment": "tablesample - Statement 18",
    "query": "EXPLAIN (COSTS OFF) SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (50) REPEATABLE (2)"
  },
  {
    "comment": "tablesample - Statement 19",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM test_tablesample_v1"
  },
  {
    "comment": "tablesample - Statement 20",
    "query": "explain (costs off) select count(*) from person tablesample bernoulli (100)"
  },
  {
    "comment": "tablesample - Statement 21",
    "query": "select count(*) from person tablesample bernoulli (100)"
  },
  {
    "comment": "tablesample - Statement 22",
    "query": "select count(*) from person"
  },
  {
    "comment": "tablesample - Statement 23",
    "query": "SELECT count(*) FROM test_tablesample TABLESAMPLE bernoulli (('1'::text < '0'::text)::int)"
  },
  {
    "comment": "tablesample - Statement 24",
    "query": "select * from (values (0),(100)) v(pct), lateral (select count(*) from tenk1 tablesample bernoulli (pct)) ss"
  },
  {
    "comment": "tablesample - Statement 25",
    "query": "select * from (values (0),(100)) v(pct), lateral (select count(*) from tenk1 tablesample system (pct)) ss"
  },
  {
    "comment": "tablesample - Statement 26",
    "query": "explain (costs off) select pct, count(unique1) from (values (0),(100)) v(pct), lateral (select * from tenk1 tablesample bernoulli (pct)) ss group by pct"
  },
  {
    "comment": "tablesample - Statement 27",
    "query": "select pct, count(unique1) from (values (0),(100)) v(pct), lateral (select * from tenk1 tablesample bernoulli (pct)) ss group by pct"
  },
  {
    "comment": "tablesample - Statement 28",
    "query": "select pct, count(unique1) from (values (0),(100)) v(pct), lateral (select * from tenk1 tablesample system (pct)) ss group by pct"
  },
  {
    "comment": "tablesample - Statement 29",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE FOOBAR (1)"
  },
  {
    "comment": "tablesample - Statement 30",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (NULL)"
  },
  {
    "comment": "tablesample - Statement 31",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (50) REPEATABLE (NULL)"
  },
  {
    "comment": "tablesample - Statement 32",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE BERNOULLI (-1)"
  },
  {
    "comment": "tablesample - Statement 33",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE BERNOULLI (200)"
  },
  {
    "comment": "tablesample - Statement 34",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (-1)"
  },
  {
    "comment": "tablesample - Statement 35",
    "query": "SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (200)"
  },
  {
    "comment": "tablesample - Statement 36",
    "query": "SELECT id FROM test_tablesample_v1 TABLESAMPLE BERNOULLI (1)"
  },
  {
    "comment": "tablesample - Statement 37",
    "query": "INSERT INTO test_tablesample_v1 VALUES(1)"
  },
  {
    "comment": "tablesample - Statement 38",
    "query": "WITH query_select AS (SELECT * FROM test_tablesample) SELECT * FROM query_select TABLESAMPLE BERNOULLI (5.5) REPEATABLE (1)"
  },
  {
    "comment": "tablesample - Statement 39",
    "query": "SELECT q.* FROM (SELECT * FROM test_tablesample) as q TABLESAMPLE BERNOULLI (5)"
  },
  {
    "comment": "tablesample - Statement 40",
    "query": "create table parted_sample (a int) partition by list (a)"
  },
  {
    "comment": "tablesample - Statement 41",
    "query": "create table parted_sample_1 partition of parted_sample for values in (1)"
  },
  {
    "comment": "tablesample - Statement 42",
    "query": "create table parted_sample_2 partition of parted_sample for values in (2)"
  },
  {
    "comment": "tablesample - Statement 43",
    "query": "explain (costs off) select * from parted_sample tablesample bernoulli (100)"
  },
  {
    "comment": "tablesample - Statement 44",
    "query": "drop table parted_sample, parted_sample_1, parted_sample_2"
  }
]