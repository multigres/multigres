[
  {
    "comment": "point - Statement 1",
    "query": "SET extra_float_digits = 0"
  },
  {
    "comment": "point - Statement 2",
    "query": "INSERT INTO POINT_TBL(f1) VALUES ('asdfasdf')",
    "expected": "INSERT INTO point_tbl (f1) VALUES ('asdfasdf')"
  },
  {
    "comment": "point - Statement 3",
    "query": "INSERT INTO POINT_TBL(f1) VALUES ('(10.0 10.0)')",
    "expected": "INSERT INTO point_tbl (f1) VALUES ('(10.0 10.0)')"
  },
  {
    "comment": "point - Statement 4",
    "query": "INSERT INTO POINT_TBL(f1) VALUES ('(10.0, 10.0) x')",
    "expected": "INSERT INTO point_tbl (f1) VALUES ('(10.0, 10.0) x')"
  },
  {
    "comment": "point - Statement 5",
    "query": "INSERT INTO POINT_TBL(f1) VALUES ('(10.0,10.0')",
    "expected": "INSERT INTO point_tbl (f1) VALUES ('(10.0,10.0')"
  },
  {
    "comment": "point - Statement 6",
    "query": "INSERT INTO POINT_TBL(f1) VALUES ('(10.0, 1e+500)')",
    "expected": "INSERT INTO point_tbl (f1) VALUES ('(10.0, 1e+500)')"
  },
  {
    "comment": "point - Statement 7",
    "query": "SELECT * FROM POINT_TBL",
    "expected": "SELECT * FROM point_tbl"
  },
  {
    "comment": "point - Statement 8",
    "query": "SELECT p.* FROM POINT_TBL p WHERE p.f1 \u003c\u003c '(0.0, 0.0)'",
    "expected": "SELECT p.* FROM point_tbl AS p WHERE p.f1 \u003c\u003c '(0.0, 0.0)'"
  },
  {
    "comment": "point - Statement 9",
    "query": "SELECT p.* FROM POINT_TBL p WHERE '(0.0,0.0)' \u003e\u003e p.f1",
    "expected": "SELECT p.* FROM point_tbl AS p WHERE '(0.0,0.0)' \u003e\u003e p.f1"
  },
  {
    "comment": "point - Statement 10",
    "query": "SELECT p.* FROM POINT_TBL p WHERE '(0.0,0.0)' |\u003e\u003e p.f1",
    "expected": "SELECT p.* FROM point_tbl AS p WHERE '(0.0,0.0)' |\u003e\u003e p.f1"
  },
  {
    "comment": "point - Statement 11",
    "query": "SELECT p.* FROM POINT_TBL p WHERE p.f1 \u003c\u003c| '(0.0, 0.0)'",
    "expected": "SELECT p.* FROM point_tbl AS p WHERE p.f1 \u003c\u003c| '(0.0, 0.0)'"
  },
  {
    "comment": "point - Statement 12",
    "query": "SELECT p.* FROM POINT_TBL p WHERE p.f1 ~= '(5.1, 34.5)'",
    "expected": "SELECT p.* FROM point_tbl AS p WHERE p.f1 ~= '(5.1, 34.5)'"
  },
  {
    "comment": "point - Statement 13",
    "query": "SELECT p.* FROM POINT_TBL p WHERE p.f1 \u003c@ box '(0,0,100,100)'",
    "expected": "SELECT p.* FROM point_tbl AS p WHERE p.f1 \u003c@ CAST('(0,0,100,100)' AS box)"
  },
  {
    "comment": "point - Statement 14",
    "query": "SELECT p.* FROM POINT_TBL p WHERE box '(0,0,100,100)' @\u003e p.f1",
    "expected": "SELECT p.* FROM point_tbl AS p WHERE CAST('(0,0,100,100)' AS box) @\u003e p.f1"
  },
  {
    "comment": "point - Statement 15",
    "query": "SELECT p.* FROM POINT_TBL p WHERE not p.f1 \u003c@ box '(0,0,100,100)'",
    "expected": "SELECT p.* FROM point_tbl AS p WHERE NOT p.f1 \u003c@ CAST('(0,0,100,100)' AS box)"
  },
  {
    "comment": "point - Statement 16",
    "query": "SELECT p.* FROM POINT_TBL p WHERE p.f1 \u003c@ path '[(0,0),(-10,0),(-10,10)]'",
    "expected": "SELECT p.* FROM point_tbl AS p WHERE p.f1 \u003c@ CAST('[(0,0),(-10,0),(-10,10)]' AS path)"
  },
  {
    "comment": "point - Statement 17",
    "query": "SELECT p.* FROM POINT_TBL p WHERE not box '(0,0,100,100)' @\u003e p.f1",
    "expected": "SELECT p.* FROM point_tbl AS p WHERE NOT CAST('(0,0,100,100)' AS box) @\u003e p.f1"
  },
  {
    "comment": "point - Statement 18",
    "query": "SELECT p.f1, p.f1 \u003c-\u003e point '(0,0)' AS dist FROM POINT_TBL p ORDER BY dist",
    "expected": "SELECT p.f1, p.f1 \u003c-\u003e CAST('(0,0)' AS point) AS dist FROM point_tbl AS p ORDER BY dist"
  },
  {
    "comment": "point - Statement 19",
    "query": "SELECT p1.f1 AS point1, p2.f1 AS point2, p1.f1 \u003c-\u003e p2.f1 AS dist FROM POINT_TBL p1, POINT_TBL p2 ORDER BY dist, p1.f1[0], p2.f1[0]",
    "expected": "SELECT p1.f1 AS point1, p2.f1 AS point2, p1.f1 \u003c-\u003e p2.f1 AS dist FROM point_tbl AS p1, point_tbl AS p2 ORDER BY dist, p1.f1[0], p2.f1[0]"
  },
  {
    "comment": "point - Statement 20",
    "query": "SELECT p1.f1 AS point1, p2.f1 AS point2 FROM POINT_TBL p1, POINT_TBL p2 WHERE (p1.f1 \u003c-\u003e p2.f1) \u003e 3",
    "expected": "SELECT p1.f1 AS point1, p2.f1 AS point2 FROM point_tbl AS p1, point_tbl AS p2 WHERE (p1.f1 \u003c-\u003e p2.f1) \u003e 3"
  },
  {
    "comment": "point - Statement 21",
    "query": "SELECT p1.f1 AS point1, p2.f1 AS point2, (p1.f1 \u003c-\u003e p2.f1) AS distance FROM POINT_TBL p1, POINT_TBL p2 WHERE (p1.f1 \u003c-\u003e p2.f1) \u003e 3 and p1.f1 \u003c\u003c p2.f1 ORDER BY distance, p1.f1[0], p2.f1[0]",
    "expected": "SELECT p1.f1 AS point1, p2.f1 AS point2, (p1.f1 \u003c-\u003e p2.f1) AS distance FROM point_tbl AS p1, point_tbl AS p2 WHERE (p1.f1 \u003c-\u003e p2.f1) \u003e 3 AND p1.f1 \u003c\u003c p2.f1 ORDER BY distance, p1.f1[0], p2.f1[0]"
  },
  {
    "comment": "point - Statement 22",
    "query": "SELECT p1.f1 AS point1, p2.f1 AS point2, (p1.f1 \u003c-\u003e p2.f1) AS distance FROM POINT_TBL p1, POINT_TBL p2 WHERE (p1.f1 \u003c-\u003e p2.f1) \u003e 3 and p1.f1 \u003c\u003c p2.f1 and p1.f1 |\u003e\u003e p2.f1 ORDER BY distance",
    "expected": "SELECT p1.f1 AS point1, p2.f1 AS point2, (p1.f1 \u003c-\u003e p2.f1) AS distance FROM point_tbl AS p1, point_tbl AS p2 WHERE (p1.f1 \u003c-\u003e p2.f1) \u003e 3 AND p1.f1 \u003c\u003c p2.f1 AND p1.f1 |\u003e\u003e p2.f1 ORDER BY distance"
  },
  {
    "comment": "point - Statement 23",
    "query": "CREATE TEMP TABLE point_gist_tbl(f1 point)",
    "expected": "CREATE TEMPORARY TABLE point_gist_tbl (f1 point)"
  },
  {
    "comment": "point - Statement 24",
    "query": "INSERT INTO point_gist_tbl SELECT '(0,0)' FROM generate_series(0,1000)",
    "expected": "INSERT INTO point_gist_tbl SELECT '(0,0)' FROM generate_series(0, 1000)"
  },
  {
    "comment": "point - Statement 25",
    "query": "CREATE INDEX point_gist_tbl_index ON point_gist_tbl USING gist (f1)",
    "expected": "CREATE INDEX point_gist_tbl_index ON point_gist_tbl USING gist ( f1 )"
  },
  {
    "comment": "point - Statement 26",
    "query": "INSERT INTO point_gist_tbl VALUES ('(0.0000009,0.0000009)')"
  },
  {
    "comment": "point - Statement 27",
    "query": "SET enable_seqscan TO true",
    "expected": "SET enable_seqscan = true"
  },
  {
    "comment": "point - Statement 28",
    "query": "SET enable_indexscan TO false",
    "expected": "SET enable_indexscan = false"
  },
  {
    "comment": "point - Statement 29",
    "query": "SET enable_bitmapscan TO false",
    "expected": "SET enable_bitmapscan = false"
  },
  {
    "comment": "point - Statement 30",
    "query": "SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= '(0.0000009,0.0000009)'::point",
    "expected": "SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= CAST('(0.0000009,0.0000009)' AS point)"
  },
  {
    "comment": "point - Statement 31",
    "query": "SELECT COUNT(*) FROM point_gist_tbl WHERE f1 \u003c@ '(0.0000009,0.0000009),(0.0000009,0.0000009)'::box",
    "expected": "SELECT COUNT(*) FROM point_gist_tbl WHERE f1 \u003c@ CAST('(0.0000009,0.0000009),(0.0000009,0.0000009)' AS box)"
  },
  {
    "comment": "point - Statement 32",
    "query": "SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= '(0.0000018,0.0000018)'::point",
    "expected": "SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= CAST('(0.0000018,0.0000018)' AS point)"
  },
  {
    "comment": "point - Statement 33",
    "query": "SET enable_seqscan TO false",
    "expected": "SET enable_seqscan = false"
  },
  {
    "comment": "point - Statement 34",
    "query": "SET enable_indexscan TO true",
    "expected": "SET enable_indexscan = true"
  },
  {
    "comment": "point - Statement 35",
    "query": "SET enable_bitmapscan TO true",
    "expected": "SET enable_bitmapscan = true"
  },
  {
    "comment": "point - Statement 36",
    "query": "RESET enable_seqscan"
  },
  {
    "comment": "point - Statement 37",
    "query": "RESET enable_indexscan"
  },
  {
    "comment": "point - Statement 38",
    "query": "RESET enable_bitmapscan"
  },
  {
    "comment": "point - Statement 39",
    "query": "SELECT pg_input_is_valid('1,y', 'point')"
  },
  {
    "comment": "point - Statement 40",
    "query": "SELECT * FROM pg_input_error_info('1,y', 'point')"
  }
]
