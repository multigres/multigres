[
  {
    "comment": "identity - Statement 1",
    "query": "SELECT attrelid, attname, attidentity FROM pg_attribute WHERE attidentity NOT IN ('', 'a', 'd')"
  },
  {
    "comment": "identity - Statement 2",
    "query": "CREATE TABLE itest1 (a int generated by default as identity, b text)",
    "expected": "CREATE TABLE itest1 (a INT GENERATED BY DEFAULT AS IDENTITY, b TEXT)"
  },
  {
    "comment": "identity - Statement 3",
    "query": "CREATE TABLE itest2 (a bigint generated always as identity, b text)",
    "expected": "CREATE TABLE itest2 (a BIGINT GENERATED ALWAYS AS IDENTITY, b TEXT)"
  },
  {
    "comment": "identity - Statement 4",
    "query": "CREATE TABLE itest3 (a smallint generated by default as identity (start with 7 increment by 5), b text)",
    "expected": "CREATE TABLE itest3 (a SMALLINT GENERATED BY DEFAULT AS IDENTITY (START WITH 7 INCREMENT BY 5), b TEXT)"
  },
  {
    "comment": "identity - Statement 5",
    "query": "ALTER TABLE itest3 ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 6",
    "query": "SELECT table_name, column_name, column_default, is_nullable, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle FROM information_schema.columns WHERE table_name LIKE 'itest_' ORDER BY 1, 2"
  },
  {
    "comment": "identity - Statement 7",
    "query": "SELECT sequence_name FROM information_schema.sequences WHERE sequence_name LIKE 'itest%'"
  },
  {
    "comment": "identity - Statement 8",
    "query": "SELECT pg_get_serial_sequence('itest1', 'a')"
  },
  {
    "comment": "identity - Statement 9",
    "query": "ALTER TABLE itest4 ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 10",
    "query": "ALTER TABLE itest4 ALTER COLUMN a SET NOT NULL"
  },
  {
    "comment": "identity - Statement 11",
    "query": "ALTER TABLE itest4 ALTER COLUMN a DROP NOT NULL"
  },
  {
    "comment": "identity - Statement 12",
    "query": "ALTER TABLE itest4 ALTER COLUMN b ADD GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 13",
    "query": "ALTER TABLE itest4 ALTER COLUMN b SET DEFAULT ''"
  },
  {
    "comment": "identity - Statement 14",
    "query": "CREATE TABLE itest_err_1 (a text generated by default as identity)",
    "expected": "CREATE TABLE itest_err_1 (a TEXT GENERATED BY DEFAULT AS IDENTITY)"
  },
  {
    "comment": "identity - Statement 15",
    "query": "CREATE TABLE itest_err_2 (a int generated always as identity generated by default as identity)",
    "expected": "CREATE TABLE itest_err_2 (a INT GENERATED ALWAYS AS IDENTITY GENERATED BY DEFAULT AS IDENTITY)"
  },
  {
    "comment": "identity - Statement 16",
    "query": "CREATE TABLE itest_err_3 (a int default 5 generated by default as identity)",
    "expected": "CREATE TABLE itest_err_3 (a INT DEFAULT 5 GENERATED BY DEFAULT AS IDENTITY)"
  },
  {
    "comment": "identity - Statement 17",
    "query": "CREATE TABLE itest_err_4 (a serial generated by default as identity)",
    "expected": "CREATE TABLE itest_err_4 (a serial GENERATED BY DEFAULT AS IDENTITY)"
  },
  {
    "comment": "identity - Statement 18",
    "query": "INSERT INTO itest1 DEFAULT VALUES"
  },
  {
    "comment": "identity - Statement 19",
    "query": "INSERT INTO itest2 DEFAULT VALUES"
  },
  {
    "comment": "identity - Statement 20",
    "query": "INSERT INTO itest3 DEFAULT VALUES"
  },
  {
    "comment": "identity - Statement 21",
    "query": "INSERT INTO itest4 DEFAULT VALUES"
  },
  {
    "comment": "identity - Statement 22",
    "query": "SELECT * FROM itest1"
  },
  {
    "comment": "identity - Statement 23",
    "query": "SELECT * FROM itest2"
  },
  {
    "comment": "identity - Statement 24",
    "query": "SELECT * FROM itest3"
  },
  {
    "comment": "identity - Statement 25",
    "query": "SELECT * FROM itest4"
  },
  {
    "comment": "identity - Statement 26",
    "query": "CREATE TABLE itest5 (a int generated always as identity, b text)",
    "expected": "CREATE TABLE itest5 (a INT GENERATED ALWAYS AS IDENTITY, b TEXT)"
  },
  {
    "comment": "identity - Statement 27",
    "query": "INSERT INTO itest5 VALUES (1, 'a')"
  },
  {
    "comment": "identity - Statement 28",
    "query": "INSERT INTO itest5 VALUES (DEFAULT, 'a')"
  },
  {
    "comment": "identity - Statement 29",
    "query": "INSERT INTO itest5 VALUES (2, 'b'), (3, 'c')"
  },
  {
    "comment": "identity - Statement 30",
    "query": "INSERT INTO itest5 VALUES (DEFAULT, 'b'), (3, 'c')"
  },
  {
    "comment": "identity - Statement 31",
    "query": "INSERT INTO itest5 VALUES (2, 'b'), (DEFAULT, 'c')"
  },
  {
    "comment": "identity - Statement 32",
    "query": "INSERT INTO itest5 VALUES (DEFAULT, 'b'), (DEFAULT, 'c')"
  },
  {
    "comment": "identity - Statement 33",
    "query": "INSERT INTO itest5 OVERRIDING SYSTEM VALUE VALUES (-1, 'aa')",
    "expected": "INSERT INTO itest5 VALUES (-1, 'aa')"
  },
  {
    "comment": "identity - Statement 34",
    "query": "INSERT INTO itest5 OVERRIDING SYSTEM VALUE VALUES (-2, 'bb'), (-3, 'cc')",
    "expected": "INSERT INTO itest5 VALUES (-2, 'bb'), (-3, 'cc')"
  },
  {
    "comment": "identity - Statement 35",
    "query": "INSERT INTO itest5 OVERRIDING SYSTEM VALUE VALUES (DEFAULT, 'dd'), (-4, 'ee')",
    "expected": "INSERT INTO itest5 VALUES (DEFAULT, 'dd'), (-4, 'ee')"
  },
  {
    "comment": "identity - Statement 36",
    "query": "INSERT INTO itest5 OVERRIDING SYSTEM VALUE VALUES (-5, 'ff'), (DEFAULT, 'gg')",
    "expected": "INSERT INTO itest5 VALUES (-5, 'ff'), (DEFAULT, 'gg')"
  },
  {
    "comment": "identity - Statement 37",
    "query": "INSERT INTO itest5 OVERRIDING SYSTEM VALUE VALUES (DEFAULT, 'hh'), (DEFAULT, 'ii')",
    "expected": "INSERT INTO itest5 VALUES (DEFAULT, 'hh'), (DEFAULT, 'ii')"
  },
  {
    "comment": "identity - Statement 38",
    "query": "INSERT INTO itest5 OVERRIDING USER VALUE VALUES (-1, 'aaa')",
    "expected": "INSERT INTO itest5 VALUES (-1, 'aaa')"
  },
  {
    "comment": "identity - Statement 39",
    "query": "INSERT INTO itest5 OVERRIDING USER VALUE VALUES (-2, 'bbb'), (-3, 'ccc')",
    "expected": "INSERT INTO itest5 VALUES (-2, 'bbb'), (-3, 'ccc')"
  },
  {
    "comment": "identity - Statement 40",
    "query": "INSERT INTO itest5 OVERRIDING USER VALUE VALUES (DEFAULT, 'ddd'), (-4, 'eee')",
    "expected": "INSERT INTO itest5 VALUES (DEFAULT, 'ddd'), (-4, 'eee')"
  },
  {
    "comment": "identity - Statement 41",
    "query": "INSERT INTO itest5 OVERRIDING USER VALUE VALUES (-5, 'fff'), (DEFAULT, 'ggg')",
    "expected": "INSERT INTO itest5 VALUES (-5, 'fff'), (DEFAULT, 'ggg')"
  },
  {
    "comment": "identity - Statement 42",
    "query": "INSERT INTO itest5 OVERRIDING USER VALUE VALUES (DEFAULT, 'hhh'), (DEFAULT, 'iii')",
    "expected": "INSERT INTO itest5 VALUES (DEFAULT, 'hhh'), (DEFAULT, 'iii')"
  },
  {
    "comment": "identity - Statement 43",
    "query": "SELECT * FROM itest5"
  },
  {
    "comment": "identity - Statement 44",
    "query": "DROP TABLE itest5"
  },
  {
    "comment": "identity - Statement 45",
    "query": "INSERT INTO itest3 VALUES (DEFAULT, 'a')"
  },
  {
    "comment": "identity - Statement 46",
    "query": "INSERT INTO itest3 VALUES (DEFAULT, 'b'), (DEFAULT, 'c')"
  },
  {
    "comment": "identity - Statement 47",
    "query": "INSERT INTO itest1 VALUES (10, 'xyz')"
  },
  {
    "comment": "identity - Statement 48",
    "query": "INSERT INTO itest1 OVERRIDING SYSTEM VALUE VALUES (20, 'xyz')",
    "expected": "INSERT INTO itest1 VALUES (20, 'xyz')"
  },
  {
    "comment": "identity - Statement 49",
    "query": "INSERT INTO itest1 OVERRIDING USER VALUE VALUES (30, 'xyz')",
    "expected": "INSERT INTO itest1 VALUES (30, 'xyz')"
  },
  {
    "comment": "identity - Statement 50",
    "query": "INSERT INTO itest2 VALUES (10, 'xyz')"
  },
  {
    "comment": "identity - Statement 51",
    "query": "INSERT INTO itest2 OVERRIDING SYSTEM VALUE VALUES (20, 'xyz')",
    "expected": "INSERT INTO itest2 VALUES (20, 'xyz')"
  },
  {
    "comment": "identity - Statement 52",
    "query": "INSERT INTO itest2 OVERRIDING USER VALUE VALUES (30, 'xyz')",
    "expected": "INSERT INTO itest2 VALUES (30, 'xyz')"
  },
  {
    "comment": "identity - Statement 53",
    "query": "UPDATE itest1 SET a = 101 WHERE a = 1"
  },
  {
    "comment": "identity - Statement 54",
    "query": "UPDATE itest1 SET a = DEFAULT WHERE a = 2"
  },
  {
    "comment": "identity - Statement 55",
    "query": "UPDATE itest2 SET a = 101 WHERE a = 1"
  },
  {
    "comment": "identity - Statement 56",
    "query": "UPDATE itest2 SET a = DEFAULT WHERE a = 2"
  },
  {
    "comment": "identity - Statement 57",
    "query": "CREATE TABLE itest9 (a int GENERATED ALWAYS AS IDENTITY, b text, c bigint)",
    "expected": "CREATE TABLE itest9 (a INT GENERATED ALWAYS AS IDENTITY, b TEXT, c BIGINT)"
  },
  {
    "comment": "identity - Statement 58",
    "query": "COPY itest9 FROM stdin",
    "expected": "COPY itest9 FROM STDIN"
  },
  {
    "comment": "identity - Statement 59",
    "query": "COPY itest9 (b, c) FROM stdin",
    "expected": "COPY itest9 (b, c) FROM STDIN"
  },
  {
    "comment": "identity - Statement 60",
    "query": "SELECT * FROM itest9 ORDER BY c"
  },
  {
    "comment": "identity - Statement 61",
    "query": "ALTER TABLE itest4 ALTER COLUMN a DROP IDENTITY"
  },
  {
    "comment": "identity - Statement 62",
    "query": "ALTER TABLE itest4 ALTER COLUMN a DROP IDENTITY IF EXISTS",
    "expected": "ALTER TABLE itest4 ALTER COLUMN a DROP IDENTITY"
  },
  {
    "comment": "identity - Statement 63",
    "query": "SELECT sequence_name FROM itest4_a_seq"
  },
  {
    "comment": "identity - Statement 64",
    "query": "CREATE TABLE itest10 (a int generated by default as identity, b text)",
    "expected": "CREATE TABLE itest10 (a INT GENERATED BY DEFAULT AS IDENTITY, b TEXT)"
  },
  {
    "comment": "identity - Statement 65",
    "query": "CREATE TABLE itest11 (a int generated always as identity, b text)",
    "expected": "CREATE TABLE itest11 (a INT GENERATED ALWAYS AS IDENTITY, b TEXT)"
  },
  {
    "comment": "identity - Statement 66",
    "query": "CREATE VIEW itestv10 AS SELECT * FROM itest10"
  },
  {
    "comment": "identity - Statement 67",
    "query": "CREATE VIEW itestv11 AS SELECT * FROM itest11"
  },
  {
    "comment": "identity - Statement 68",
    "query": "INSERT INTO itestv10 DEFAULT VALUES"
  },
  {
    "comment": "identity - Statement 69",
    "query": "INSERT INTO itestv11 DEFAULT VALUES"
  },
  {
    "comment": "identity - Statement 70",
    "query": "SELECT * FROM itestv10"
  },
  {
    "comment": "identity - Statement 71",
    "query": "SELECT * FROM itestv11"
  },
  {
    "comment": "identity - Statement 72",
    "query": "INSERT INTO itestv10 VALUES (10, 'xyz')"
  },
  {
    "comment": "identity - Statement 73",
    "query": "INSERT INTO itestv10 OVERRIDING USER VALUE VALUES (11, 'xyz')",
    "expected": "INSERT INTO itestv10 VALUES (11, 'xyz')"
  },
  {
    "comment": "identity - Statement 74",
    "query": "INSERT INTO itestv11 VALUES (10, 'xyz')"
  },
  {
    "comment": "identity - Statement 75",
    "query": "INSERT INTO itestv11 OVERRIDING SYSTEM VALUE VALUES (11, 'xyz')",
    "expected": "INSERT INTO itestv11 VALUES (11, 'xyz')"
  },
  {
    "comment": "identity - Statement 76",
    "query": "DROP VIEW itestv10, itestv11"
  },
  {
    "comment": "identity - Statement 77",
    "query": "CREATE TABLE itest13 (a int)",
    "expected": "CREATE TABLE itest13 (a INT)"
  },
  {
    "comment": "identity - Statement 78",
    "query": "ALTER TABLE itest13 ADD COLUMN b int GENERATED BY DEFAULT AS IDENTITY",
    "expected": "ALTER TABLE itest13 ADD COLUMN b INT GENERATED BY DEFAULT AS IDENTITY"
  },
  {
    "comment": "identity - Statement 79",
    "query": "INSERT INTO itest13 VALUES (1), (2), (3)"
  },
  {
    "comment": "identity - Statement 80",
    "query": "ALTER TABLE itest13 ADD COLUMN c int GENERATED BY DEFAULT AS IDENTITY",
    "expected": "ALTER TABLE itest13 ADD COLUMN c INT GENERATED BY DEFAULT AS IDENTITY"
  },
  {
    "comment": "identity - Statement 81",
    "query": "SELECT * FROM itest13"
  },
  {
    "comment": "identity - Statement 82",
    "query": "ALTER TABLE itest1 ALTER COLUMN a SET DEFAULT 1"
  },
  {
    "comment": "identity - Statement 83",
    "query": "CREATE TABLE itest5 (a serial, b text)",
    "expected": "CREATE TABLE itest5 (a serial, b TEXT)"
  },
  {
    "comment": "identity - Statement 84",
    "query": "ALTER TABLE itest5 ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 85",
    "query": "ALTER TABLE itest3 ALTER COLUMN a TYPE int",
    "expected": "ALTER TABLE itest3 ALTER COLUMN a TYPE INT"
  },
  {
    "comment": "identity - Statement 86",
    "query": "SELECT seqtypid::regtype FROM pg_sequence WHERE seqrelid = 'itest3_a_seq'::regclass",
    "expected": "SELECT CAST(seqtypid AS regtype) FROM pg_sequence WHERE seqrelid = CAST('itest3_a_seq' AS regclass)"
  },
  {
    "comment": "identity - Statement 87",
    "query": "CREATE UNLOGGED TABLE itest17 (a int NOT NULL, b text)",
    "expected": "CREATE UNLOGGED TABLE itest17 (a INT NOT NULL, b TEXT)"
  },
  {
    "comment": "identity - Statement 88",
    "query": "ALTER TABLE itest17 ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 89",
    "query": "ALTER TABLE itest17 ADD COLUMN c int GENERATED ALWAYS AS IDENTITY",
    "expected": "ALTER TABLE itest17 ADD COLUMN c INT GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 90",
    "query": "ALTER TABLE itest18 SET UNLOGGED, ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 91",
    "query": "INSERT INTO itest6 DEFAULT VALUES"
  },
  {
    "comment": "identity - Statement 92",
    "query": "ALTER TABLE itest6 ALTER COLUMN a SET GENERATED BY DEFAULT SET INCREMENT BY 2 SET START WITH 100 RESTART"
  },
  {
    "comment": "identity - Statement 93",
    "query": "SELECT * FROM itest6"
  },
  {
    "comment": "identity - Statement 94",
    "query": "SELECT table_name, column_name, is_identity, identity_generation FROM information_schema.columns WHERE table_name = 'itest6' ORDER BY 1, 2"
  },
  {
    "comment": "identity - Statement 95",
    "query": "ALTER TABLE itest6 ALTER COLUMN b SET INCREMENT BY 2",
    "expected": "ALTER TABLE itest6 ALTER COLUMN b SET GENERATED BY DEFAULT SET INCREMENT BY 2"
  },
  {
    "comment": "identity - Statement 96",
    "query": "ALTER SEQUENCE itest6_a_seq OWNED BY NONE",
    "expected": "ALTER SEQUENCE itest6_a_seq OWNED BY none"
  },
  {
    "comment": "identity - Statement 97",
    "query": "CREATE TABLE itest7 (a int GENERATED ALWAYS AS IDENTITY)",
    "expected": "CREATE TABLE itest7 (a INT GENERATED ALWAYS AS IDENTITY)"
  },
  {
    "comment": "identity - Statement 98",
    "query": "INSERT INTO itest7 DEFAULT VALUES"
  },
  {
    "comment": "identity - Statement 99",
    "query": "SELECT * FROM itest7"
  },
  {
    "comment": "identity - Statement 100",
    "query": "CREATE TABLE itest7a (b text) INHERITS (itest7)",
    "expected": "CREATE TABLE itest7a (b TEXT) INHERITS (itest7)"
  },
  {
    "comment": "identity - Statement 101",
    "query": "CREATE TABLE itest7b (a int)",
    "expected": "CREATE TABLE itest7b (a INT)"
  },
  {
    "comment": "identity - Statement 102",
    "query": "CREATE TABLE itest7c (a int GENERATED ALWAYS AS IDENTITY) INHERITS (itest7b)",
    "expected": "CREATE TABLE itest7c (a INT GENERATED ALWAYS AS IDENTITY) INHERITS (itest7b)"
  },
  {
    "comment": "identity - Statement 103",
    "query": "INSERT INTO itest7c DEFAULT VALUES"
  },
  {
    "comment": "identity - Statement 104",
    "query": "SELECT * FROM itest7c"
  },
  {
    "comment": "identity - Statement 105",
    "query": "CREATE TABLE itest7d (a int not null)",
    "expected": "CREATE TABLE itest7d (a INT NOT NULL)"
  },
  {
    "comment": "identity - Statement 106",
    "query": "CREATE TABLE itest7e () INHERITS (itest7d)"
  },
  {
    "comment": "identity - Statement 107",
    "query": "ALTER TABLE itest7d ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 108",
    "query": "ALTER TABLE itest7d ADD COLUMN b int GENERATED ALWAYS AS IDENTITY",
    "expected": "ALTER TABLE itest7d ADD COLUMN b INT GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 109",
    "query": "SELECT table_name, column_name, is_nullable, is_identity, identity_generation FROM information_schema.columns WHERE table_name LIKE 'itest7%' ORDER BY 1, 2"
  },
  {
    "comment": "identity - Statement 110",
    "query": "ALTER TABLE itest7 ALTER COLUMN a SET GENERATED BY DEFAULT"
  },
  {
    "comment": "identity - Statement 111",
    "query": "ALTER TABLE itest7 ALTER COLUMN a RESTART",
    "expected": "ALTER TABLE itest7 ALTER COLUMN a SET GENERATED BY DEFAULT RESTART"
  },
  {
    "comment": "identity - Statement 112",
    "query": "ALTER TABLE itest7 ALTER COLUMN a DROP IDENTITY"
  },
  {
    "comment": "identity - Statement 113",
    "query": "CREATE USER regress_identity_user1"
  },
  {
    "comment": "identity - Statement 114",
    "query": "CREATE TABLE itest8 (a int GENERATED ALWAYS AS IDENTITY, b text)",
    "expected": "CREATE TABLE itest8 (a INT GENERATED ALWAYS AS IDENTITY, b TEXT)"
  },
  {
    "comment": "identity - Statement 115",
    "query": "GRANT SELECT, INSERT ON itest8 TO regress_identity_user1"
  },
  {
    "comment": "identity - Statement 116",
    "query": "SET ROLE regress_identity_user1",
    "expected": "SET ROLE 'regress_identity_user1'"
  },
  {
    "comment": "identity - Statement 117",
    "query": "INSERT INTO itest8 DEFAULT VALUES"
  },
  {
    "comment": "identity - Statement 118",
    "query": "SELECT * FROM itest8"
  },
  {
    "comment": "identity - Statement 119",
    "query": "RESET ROLE",
    "expected": "RESET role"
  },
  {
    "comment": "identity - Statement 120",
    "query": "DROP TABLE itest8"
  },
  {
    "comment": "identity - Statement 121",
    "query": "DROP USER regress_identity_user1",
    "expected": "DROP ROLE regress_identity_user1"
  },
  {
    "comment": "identity - Statement 122",
    "query": "CREATE TABLE itest8 (f1 int)",
    "expected": "CREATE TABLE itest8 (f1 INT)"
  },
  {
    "comment": "identity - Statement 123",
    "query": "ALTER TABLE itest8 ADD COLUMN f2 int NOT NULL, ALTER COLUMN f2 ADD GENERATED ALWAYS AS IDENTITY",
    "expected": "ALTER TABLE itest8 ADD COLUMN f2 INT NOT NULL, ALTER COLUMN f2 ADD GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 124",
    "query": "ALTER TABLE itest8 ADD COLUMN f3 int NOT NULL, ALTER COLUMN f3 ADD GENERATED ALWAYS AS IDENTITY, ALTER COLUMN f3 SET GENERATED BY DEFAULT SET INCREMENT 10",
    "expected": "ALTER TABLE itest8 ADD COLUMN f3 INT NOT NULL, ALTER COLUMN f3 ADD GENERATED ALWAYS AS IDENTITY, ALTER COLUMN f3 SET GENERATED BY DEFAULT SET INCREMENT BY 10"
  },
  {
    "comment": "identity - Statement 125",
    "query": "ALTER TABLE itest8 ADD COLUMN f4 int",
    "expected": "ALTER TABLE itest8 ADD COLUMN f4 INT"
  },
  {
    "comment": "identity - Statement 126",
    "query": "ALTER TABLE itest8 ALTER COLUMN f4 SET NOT NULL, ALTER COLUMN f4 ADD GENERATED ALWAYS AS IDENTITY, ALTER COLUMN f4 SET DATA TYPE bigint",
    "expected": "ALTER TABLE itest8 ALTER COLUMN f4 SET NOT NULL, ALTER COLUMN f4 ADD GENERATED ALWAYS AS IDENTITY, ALTER COLUMN f4 TYPE BIGINT"
  },
  {
    "comment": "identity - Statement 127",
    "query": "ALTER TABLE itest8 ADD COLUMN f5 int GENERATED ALWAYS AS IDENTITY",
    "expected": "ALTER TABLE itest8 ADD COLUMN f5 INT GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 128",
    "query": "ALTER TABLE itest8 ALTER COLUMN f5 DROP IDENTITY, ALTER COLUMN f5 DROP NOT NULL, ALTER COLUMN f5 SET DATA TYPE bigint",
    "expected": "ALTER TABLE itest8 ALTER COLUMN f5 DROP IDENTITY, ALTER COLUMN f5 DROP NOT NULL, ALTER COLUMN f5 TYPE BIGINT"
  },
  {
    "comment": "identity - Statement 129",
    "query": "INSERT INTO itest8 VALUES(0), (1)",
    "expected": "INSERT INTO itest8 VALUES (0), (1)"
  },
  {
    "comment": "identity - Statement 130",
    "query": "ALTER TABLE itest8 ADD COLUMN f22 int NOT NULL, ALTER COLUMN f22 ADD GENERATED ALWAYS AS IDENTITY",
    "expected": "ALTER TABLE itest8 ADD COLUMN f22 INT NOT NULL, ALTER COLUMN f22 ADD GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 131",
    "query": "TABLE itest8",
    "expected": "SELECT * FROM itest8"
  },
  {
    "comment": "identity - Statement 132",
    "query": "CREATE TYPE itest_type AS (f1 integer, f2 text, f3 bigint)",
    "expected": "CREATE TYPE itest_type AS (f1 INT, f2 TEXT, f3 BIGINT)"
  },
  {
    "comment": "identity - Statement 133",
    "query": "CREATE TABLE itest12 OF itest_type (f1 WITH OPTIONS GENERATED ALWAYS AS IDENTITY)",
    "expected": "CREATE TABLE itest12 OF itest_type"
  },
  {
    "comment": "identity - Statement 134",
    "query": "DROP TYPE itest_type CASCADE"
  },
  {
    "comment": "identity - Statement 135",
    "query": "CREATE TABLE pitest1 (f1 date NOT NULL, f2 text, f3 bigint generated always as identity) PARTITION BY RANGE (f1)",
    "expected": "CREATE TABLE pitest1 (f1 DATE NOT NULL, f2 TEXT, f3 BIGINT GENERATED ALWAYS AS IDENTITY) PARTITION BY range (f1)"
  },
  {
    "comment": "identity - Statement 136",
    "query": "CREATE TABLE pitest1_p1 PARTITION OF pitest1 FOR VALUES FROM ('2016-07-01') TO ('2016-08-01')"
  },
  {
    "comment": "identity - Statement 137",
    "query": "INSERT into pitest1(f1, f2) VALUES ('2016-07-2', 'from pitest1')",
    "expected": "INSERT INTO pitest1 (f1, f2) VALUES ('2016-07-2', 'from pitest1')"
  },
  {
    "comment": "identity - Statement 138",
    "query": "INSERT into pitest1_p1 (f1, f2) VALUES ('2016-07-3', 'from pitest1_p1')",
    "expected": "INSERT INTO pitest1_p1 (f1, f2) VALUES ('2016-07-3', 'from pitest1_p1')"
  },
  {
    "comment": "identity - Statement 139",
    "query": "CREATE TABLE pitest1_p2 (f3 bigint, f2 text, f1 date NOT NULL)",
    "expected": "CREATE TABLE pitest1_p2 (f3 BIGINT, f2 TEXT, f1 DATE NOT NULL)"
  },
  {
    "comment": "identity - Statement 140",
    "query": "INSERT INTO pitest1_p2 (f1, f2, f3) VALUES ('2016-08-2', 'before attaching', 100)"
  },
  {
    "comment": "identity - Statement 141",
    "query": "ALTER TABLE pitest1 ATTACH PARTITION pitest1_p2 FOR VALUES FROM ('2016-08-01') TO ('2016-09-01')"
  },
  {
    "comment": "identity - Statement 142",
    "query": "ALTER TABLE pitest1_p2 ALTER COLUMN f3 SET NOT NULL"
  },
  {
    "comment": "identity - Statement 143",
    "query": "INSERT INTO pitest1_p2 (f1, f2) VALUES ('2016-08-3', 'from pitest1_p2')"
  },
  {
    "comment": "identity - Statement 144",
    "query": "INSERT INTO pitest1 (f1, f2) VALUES ('2016-08-4', 'from pitest1')"
  },
  {
    "comment": "identity - Statement 145",
    "query": "CREATE TABLE pitest1_p1_like (LIKE pitest1_p1 INCLUDING IDENTITY)"
  },
  {
    "comment": "identity - Statement 146",
    "query": "INSERT into pitest1_p1_like(f1, f2) VALUES ('2016-07-2', 'from pitest1_p1_like')",
    "expected": "INSERT INTO pitest1_p1_like (f1, f2) VALUES ('2016-07-2', 'from pitest1_p1_like')"
  },
  {
    "comment": "identity - Statement 147",
    "query": "SELECT tableoid::regclass, f1, f2, f3 FROM pitest1",
    "expected": "SELECT CAST(tableoid AS regclass), f1, f2, f3 FROM pitest1"
  },
  {
    "comment": "identity - Statement 148",
    "query": "SELECT tableoid::regclass, f1, f2, f3 FROM pitest1_p1_like",
    "expected": "SELECT CAST(tableoid AS regclass), f1, f2, f3 FROM pitest1_p1_like"
  },
  {
    "comment": "identity - Statement 149",
    "query": "ALTER TABLE pitest1 ALTER COLUMN f3 SET DATA TYPE bigint",
    "expected": "ALTER TABLE pitest1 ALTER COLUMN f3 TYPE BIGINT"
  },
  {
    "comment": "identity - Statement 150",
    "query": "SELECT tableoid::regclass, f1, f2, f3, pg_typeof(f3) FROM pitest1",
    "expected": "SELECT CAST(tableoid AS regclass), f1, f2, f3, pg_typeof(f3) FROM pitest1"
  },
  {
    "comment": "identity - Statement 151",
    "query": "SELECT tableoid::regclass, f1, f2, f3, pg_typeof(f3) FROM pitest1_p2",
    "expected": "SELECT CAST(tableoid AS regclass), f1, f2, f3, pg_typeof(f3) FROM pitest1_p2"
  },
  {
    "comment": "identity - Statement 152",
    "query": "CREATE TABLE pitest2 (f1 date NOT NULL, f2 text) PARTITION BY RANGE (f1)",
    "expected": "CREATE TABLE pitest2 (f1 DATE NOT NULL, f2 TEXT) PARTITION BY range (f1)"
  },
  {
    "comment": "identity - Statement 153",
    "query": "CREATE TABLE pitest2_p1 PARTITION OF pitest2 FOR VALUES FROM ('2016-07-01') TO ('2016-08-01')"
  },
  {
    "comment": "identity - Statement 154",
    "query": "CREATE TABLE pitest2_p2 PARTITION OF pitest2 FOR VALUES FROM ('2016-08-01') TO ('2016-09-01')"
  },
  {
    "comment": "identity - Statement 155",
    "query": "INSERT into pitest2(f1, f2) VALUES ('2016-07-2', 'from pitest2')",
    "expected": "INSERT INTO pitest2 (f1, f2) VALUES ('2016-07-2', 'from pitest2')"
  },
  {
    "comment": "identity - Statement 156",
    "query": "INSERT INTO pitest2 (f1, f2) VALUES ('2016-08-2', 'from pitest2')"
  },
  {
    "comment": "identity - Statement 157",
    "query": "ALTER TABLE pitest2 ADD COLUMN f3 int GENERATED ALWAYS AS IDENTITY",
    "expected": "ALTER TABLE pitest2 ADD COLUMN f3 INT GENERATED ALWAYS AS IDENTITY"
  },
  {
    "comment": "identity - Statement 158",
    "query": "INSERT into pitest2_p1 (f1, f2) VALUES ('2016-07-3', 'from pitest2_p1')",
    "expected": "INSERT INTO pitest2_p1 (f1, f2) VALUES ('2016-07-3', 'from pitest2_p1')"
  },
  {
    "comment": "identity - Statement 159",
    "query": "INSERT INTO pitest2_p2 (f1, f2) VALUES ('2016-08-3', 'from pitest2_p2')"
  },
  {
    "comment": "identity - Statement 160",
    "query": "INSERT into pitest2(f1, f2) VALUES ('2016-07-4', 'from pitest2')",
    "expected": "INSERT INTO pitest2 (f1, f2) VALUES ('2016-07-4', 'from pitest2')"
  },
  {
    "comment": "identity - Statement 161",
    "query": "INSERT INTO pitest2 (f1, f2) VALUES ('2016-08-4', 'from pitest2')"
  },
  {
    "comment": "identity - Statement 162",
    "query": "SELECT tableoid::regclass, f1, f2, f3 FROM pitest2",
    "expected": "SELECT CAST(tableoid AS regclass), f1, f2, f3 FROM pitest2"
  },
  {
    "comment": "identity - Statement 163",
    "query": "ALTER TABLE pitest2_p1 ALTER COLUMN f3 SET GENERATED BY DEFAULT"
  },
  {
    "comment": "identity - Statement 164",
    "query": "ALTER TABLE pitest2_p1 ALTER COLUMN f3 SET INCREMENT BY 2",
    "expected": "ALTER TABLE pitest2_p1 ALTER COLUMN f3 SET GENERATED BY DEFAULT SET INCREMENT BY 2"
  },
  {
    "comment": "identity - Statement 165",
    "query": "ALTER TABLE ONLY pitest2 ALTER COLUMN f3 SET GENERATED BY DEFAULT SET INCREMENT BY 2 SET START WITH 1000 RESTART"
  },
  {
    "comment": "identity - Statement 166",
    "query": "ALTER TABLE pitest2 ALTER COLUMN f3 SET GENERATED BY DEFAULT SET INCREMENT BY 2 SET START WITH 1000 RESTART"
  },
  {
    "comment": "identity - Statement 167",
    "query": "INSERT into pitest2(f1, f2, f3) VALUES ('2016-07-5', 'from pitest2', 200)",
    "expected": "INSERT INTO pitest2 (f1, f2, f3) VALUES ('2016-07-5', 'from pitest2', 200)"
  },
  {
    "comment": "identity - Statement 168",
    "query": "INSERT INTO pitest2(f1, f2) VALUES ('2016-08-5', 'from pitest2')",
    "expected": "INSERT INTO pitest2 (f1, f2) VALUES ('2016-08-5', 'from pitest2')"
  },
  {
    "comment": "identity - Statement 169",
    "query": "INSERT into pitest2_p1 (f1, f2) VALUES ('2016-07-6', 'from pitest2_p1')",
    "expected": "INSERT INTO pitest2_p1 (f1, f2) VALUES ('2016-07-6', 'from pitest2_p1')"
  },
  {
    "comment": "identity - Statement 170",
    "query": "INSERT INTO pitest2_p2 (f1, f2, f3) VALUES ('2016-08-6', 'from pitest2_p2', 300)"
  },
  {
    "comment": "identity - Statement 171",
    "query": "ALTER TABLE pitest2 DETACH PARTITION pitest2_p1"
  },
  {
    "comment": "identity - Statement 172",
    "query": "INSERT into pitest2(f1, f2) VALUES ('2016-08-7', 'from pitest2')",
    "expected": "INSERT INTO pitest2 (f1, f2) VALUES ('2016-08-7', 'from pitest2')"
  },
  {
    "comment": "identity - Statement 173",
    "query": "INSERT into pitest2_p1 (f1, f2) VALUES ('2016-07-7', 'from pitest2_p1')",
    "expected": "INSERT INTO pitest2_p1 (f1, f2) VALUES ('2016-07-7', 'from pitest2_p1')"
  },
  {
    "comment": "identity - Statement 174",
    "query": "INSERT into pitest2_p1 (f1, f2, f3) VALUES ('2016-07-7', 'from pitest2_p1', 2000)",
    "expected": "INSERT INTO pitest2_p1 (f1, f2, f3) VALUES ('2016-07-7', 'from pitest2_p1', 2000)"
  },
  {
    "comment": "identity - Statement 175",
    "query": "SELECT tableoid::regclass, f1, f2, f3 FROM pitest2_p1",
    "expected": "SELECT CAST(tableoid AS regclass), f1, f2, f3 FROM pitest2_p1"
  },
  {
    "comment": "identity - Statement 176",
    "query": "DROP TABLE pitest2_p1"
  },
  {
    "comment": "identity - Statement 177",
    "query": "CREATE TABLE pitest3 (f1 date NOT NULL, f2 text, f3 int) PARTITION BY RANGE (f1)",
    "expected": "CREATE TABLE pitest3 (f1 DATE NOT NULL, f2 TEXT, f3 INT) PARTITION BY range (f1)"
  },
  {
    "comment": "identity - Statement 178",
    "query": "CREATE TABLE pitest3_p1 PARTITION OF pitest3 FOR VALUES FROM ('2016-07-01') TO ('2016-08-01')"
  },
  {
    "comment": "identity - Statement 179",
    "query": "INSERT into pitest3 VALUES ('2016-07-2', 'from pitest3', 1)",
    "expected": "INSERT INTO pitest3 VALUES ('2016-07-2', 'from pitest3', 1)"
  },
  {
    "comment": "identity - Statement 180",
    "query": "INSERT into pitest3_p1 VALUES ('2016-07-3', 'from pitest3_p1', 2)",
    "expected": "INSERT INTO pitest3_p1 VALUES ('2016-07-3', 'from pitest3_p1', 2)"
  },
  {
    "comment": "identity - Statement 181",
    "query": "ALTER TABLE pitest3_p1 ALTER COLUMN f3 SET NOT NULL, ALTER COLUMN f3 ADD GENERATED ALWAYS AS IDENTITY (START WITH 3)"
  },
  {
    "comment": "identity - Statement 182",
    "query": "BEGIN"
  },
  {
    "comment": "identity - Statement 183",
    "query": "ALTER TABLE pitest3_p1 ALTER COLUMN f3 SET NOT NULL"
  },
  {
    "comment": "identity - Statement 184",
    "query": "ALTER TABLE ONLY pitest3 ALTER COLUMN f3 ADD GENERATED ALWAYS AS IDENTITY (START WITH 3)"
  },
  {
    "comment": "identity - Statement 185",
    "query": "ROLLBACK"
  },
  {
    "comment": "identity - Statement 186",
    "query": "ALTER TABLE pitest3 ALTER COLUMN f3 SET NOT NULL, ALTER COLUMN f3 ADD GENERATED ALWAYS AS IDENTITY (START WITH 3)"
  },
  {
    "comment": "identity - Statement 187",
    "query": "INSERT into pitest3(f1, f2) VALUES ('2016-07-4', 'from pitest3')",
    "expected": "INSERT INTO pitest3 (f1, f2) VALUES ('2016-07-4', 'from pitest3')"
  },
  {
    "comment": "identity - Statement 188",
    "query": "INSERT into pitest3_p1 (f1, f2) VALUES ('2016-07-5', 'from pitest3_p1')",
    "expected": "INSERT INTO pitest3_p1 (f1, f2) VALUES ('2016-07-5', 'from pitest3_p1')"
  },
  {
    "comment": "identity - Statement 189",
    "query": "SELECT tableoid::regclass, f1, f2, f3 FROM pitest3",
    "expected": "SELECT CAST(tableoid AS regclass), f1, f2, f3 FROM pitest3"
  },
  {
    "comment": "identity - Statement 190",
    "query": "ALTER TABLE pitest3_p1 ALTER COLUMN f3 DROP IDENTITY"
  },
  {
    "comment": "identity - Statement 191",
    "query": "ALTER TABLE ONLY pitest3 ALTER COLUMN f3 DROP IDENTITY"
  },
  {
    "comment": "identity - Statement 192",
    "query": "ALTER TABLE pitest3 ALTER COLUMN f3 DROP IDENTITY"
  },
  {
    "comment": "identity - Statement 193",
    "query": "INSERT into pitest3(f1, f2, f3) VALUES ('2016-07-6', 'from pitest3', 5)",
    "expected": "INSERT INTO pitest3 (f1, f2, f3) VALUES ('2016-07-6', 'from pitest3', 5)"
  },
  {
    "comment": "identity - Statement 194",
    "query": "INSERT into pitest3_p1 (f1, f2, f3) VALUES ('2016-07-7', 'from pitest3_p1', 6)",
    "expected": "INSERT INTO pitest3_p1 (f1, f2, f3) VALUES ('2016-07-7', 'from pitest3_p1', 6)"
  },
  {
    "comment": "identity - Statement 195",
    "query": "ALTER TABLE pitest1_p1 ALTER COLUMN f3 DROP NOT NULL"
  },
  {
    "comment": "identity - Statement 196",
    "query": "ALTER TABLE pitest1 ALTER COLUMN f3 DROP NOT NULL"
  },
  {
    "comment": "identity - Statement 197",
    "query": "ALTER TABLE pitest1_p2 ALTER COLUMN f3 SET DEFAULT 10000"
  },
  {
    "comment": "identity - Statement 198",
    "query": "ALTER TABLE pitest1 ALTER COLUMN f3 SET DEFAULT 10000"
  },
  {
    "comment": "identity - Statement 199",
    "query": "ALTER TABLE pitest1_p2 ALTER COLUMN f3 ADD GENERATED BY DEFAULT AS IDENTITY"
  },
  {
    "comment": "identity - Statement 200",
    "query": "ALTER TABLE pitest1 ALTER COLUMN f3 ADD GENERATED BY DEFAULT AS IDENTITY"
  },
  {
    "comment": "identity - Statement 201",
    "query": "CREATE TABLE pitest1_pfail PARTITION OF pitest1 ( f3 WITH OPTIONS GENERATED ALWAYS AS IDENTITY ) FOR VALUES FROM ('2016-11-01') TO ('2016-12-01')",
    "expected": "CREATE TABLE pitest1_pfail PARTITION OF pitest1 ( f3 GENERATED ALWAYS AS IDENTITY ) FOR VALUES FROM ('2016-11-01') TO ('2016-12-01')"
  },
  {
    "comment": "identity - Statement 202",
    "query": "CREATE TABLE pitest_pfail PARTITION OF pitest3 ( f3 WITH OPTIONS GENERATED ALWAYS AS IDENTITY ) FOR VALUES FROM ('2016-07-01') TO ('2016-08-01')",
    "expected": "CREATE TABLE pitest_pfail PARTITION OF pitest3 ( f3 GENERATED ALWAYS AS IDENTITY ) FOR VALUES FROM ('2016-07-01') TO ('2016-08-01')"
  },
  {
    "comment": "identity - Statement 203",
    "query": "CREATE TABLE pitest1_pfail (f1 date NOT NULL, f2 text, f3 bigint GENERATED ALWAYS AS IDENTITY)",
    "expected": "CREATE TABLE pitest1_pfail (f1 DATE NOT NULL, f2 TEXT, f3 BIGINT GENERATED ALWAYS AS IDENTITY)"
  },
  {
    "comment": "identity - Statement 204",
    "query": "ALTER TABLE pitest1 ATTACH PARTITION pitest1_pfail FOR VALUES FROM ('2016-11-01') TO ('2016-12-01')"
  },
  {
    "comment": "identity - Statement 205",
    "query": "ALTER TABLE pitest3 ATTACH PARTITION pitest1_pfail FOR VALUES FROM ('2016-11-01') TO ('2016-12-01')"
  },
  {
    "comment": "identity - Statement 206",
    "query": "DROP TABLE pitest1_pfail"
  },
  {
    "comment": "identity - Statement 207",
    "query": "DROP TABLE pitest3"
  },
  {
    "comment": "identity - Statement 208",
    "query": "CREATE TABLE itest14 (id serial)"
  },
  {
    "comment": "identity - Statement 209",
    "query": "ALTER TABLE itest14 ALTER id DROP DEFAULT",
    "expected": "ALTER TABLE itest14 ALTER COLUMN id DROP DEFAULT"
  },
  {
    "comment": "identity - Statement 210",
    "query": "ALTER TABLE itest14 ALTER id ADD GENERATED BY DEFAULT AS IDENTITY",
    "expected": "ALTER TABLE itest14 ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY"
  },
  {
    "comment": "identity - Statement 211",
    "query": "INSERT INTO itest14 (id) VALUES (DEFAULT)"
  },
  {
    "comment": "identity - Statement 212",
    "query": "CREATE TABLE itest15 (id integer GENERATED ALWAYS AS IDENTITY NULL)",
    "expected": "CREATE TABLE itest15 (id INT GENERATED ALWAYS AS IDENTITY NULL)"
  },
  {
    "comment": "identity - Statement 213",
    "query": "CREATE TABLE itest15 (id integer NULL GENERATED ALWAYS AS IDENTITY)",
    "expected": "CREATE TABLE itest15 (id INT NULL GENERATED ALWAYS AS IDENTITY)"
  },
  {
    "comment": "identity - Statement 214",
    "query": "CREATE TABLE itest15 (id integer GENERATED ALWAYS AS IDENTITY NOT NULL)",
    "expected": "CREATE TABLE itest15 (id INT GENERATED ALWAYS AS IDENTITY NOT NULL)"
  },
  {
    "comment": "identity - Statement 215",
    "query": "DROP TABLE itest15"
  },
  {
    "comment": "identity - Statement 216",
    "query": "CREATE TABLE itest15 (id integer NOT NULL GENERATED ALWAYS AS IDENTITY)",
    "expected": "CREATE TABLE itest15 (id INT NOT NULL GENERATED ALWAYS AS IDENTITY)"
  },
  {
    "comment": "identity - Statement 217",
    "query": "CREATE TABLE itest15 (a int GENERATED ALWAYS AS IDENTITY, b text)",
    "expected": "CREATE TABLE itest15 (a INT GENERATED ALWAYS AS IDENTITY, b TEXT)"
  },
  {
    "comment": "identity - Statement 218",
    "query": "CREATE TABLE itest16 (a int GENERATED BY DEFAULT AS IDENTITY, b text)",
    "expected": "CREATE TABLE itest16 (a INT GENERATED BY DEFAULT AS IDENTITY, b TEXT)"
  },
  {
    "comment": "identity - Statement 219",
    "query": "MERGE INTO itest15 t USING (SELECT 10 AS s_a, 'inserted by merge' AS s_b) s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) VALUES (s.s_a, s.s_b)",
    "expected": "MERGE INTO itest15 AS t USING (SELECT 10 AS s_a, 'inserted by merge' AS s_b) AS s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) VALUES (s.s_a, s.s_b)"
  },
  {
    "comment": "identity - Statement 220",
    "query": "MERGE INTO itest15 t USING (SELECT 20 AS s_a, 'inserted by merge' AS s_b) s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) OVERRIDING USER VALUE VALUES (s.s_a, s.s_b)",
    "expected": "MERGE INTO itest15 AS t USING (SELECT 20 AS s_a, 'inserted by merge' AS s_b) AS s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) OVERRIDING USER VALUE VALUES (s.s_a, s.s_b)"
  },
  {
    "comment": "identity - Statement 221",
    "query": "MERGE INTO itest15 t USING (SELECT 30 AS s_a, 'inserted by merge' AS s_b) s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) OVERRIDING SYSTEM VALUE VALUES (s.s_a, s.s_b)",
    "expected": "MERGE INTO itest15 AS t USING (SELECT 30 AS s_a, 'inserted by merge' AS s_b) AS s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) OVERRIDING SYSTEM VALUE VALUES (s.s_a, s.s_b)"
  },
  {
    "comment": "identity - Statement 222",
    "query": "MERGE INTO itest16 t USING (SELECT 10 AS s_a, 'inserted by merge' AS s_b) s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) VALUES (s.s_a, s.s_b)",
    "expected": "MERGE INTO itest16 AS t USING (SELECT 10 AS s_a, 'inserted by merge' AS s_b) AS s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) VALUES (s.s_a, s.s_b)"
  },
  {
    "comment": "identity - Statement 223",
    "query": "MERGE INTO itest16 t USING (SELECT 20 AS s_a, 'inserted by merge' AS s_b) s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) OVERRIDING USER VALUE VALUES (s.s_a, s.s_b)",
    "expected": "MERGE INTO itest16 AS t USING (SELECT 20 AS s_a, 'inserted by merge' AS s_b) AS s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) OVERRIDING USER VALUE VALUES (s.s_a, s.s_b)"
  },
  {
    "comment": "identity - Statement 224",
    "query": "MERGE INTO itest16 t USING (SELECT 30 AS s_a, 'inserted by merge' AS s_b) s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) OVERRIDING SYSTEM VALUE VALUES (s.s_a, s.s_b)",
    "expected": "MERGE INTO itest16 AS t USING (SELECT 30 AS s_a, 'inserted by merge' AS s_b) AS s ON t.a = s.s_a WHEN NOT MATCHED THEN INSERT (a, b) OVERRIDING SYSTEM VALUE VALUES (s.s_a, s.s_b)"
  },
  {
    "comment": "identity - Statement 225",
    "query": "SELECT * FROM itest15"
  },
  {
    "comment": "identity - Statement 226",
    "query": "SELECT * FROM itest16"
  },
  {
    "comment": "identity - Statement 227",
    "query": "DROP TABLE itest16"
  },
  {
    "comment": "identity - Statement 228",
    "query": "CREATE TABLE identity_dump_logged (a INT GENERATED ALWAYS AS IDENTITY)"
  },
  {
    "comment": "identity - Statement 229",
    "query": "ALTER SEQUENCE identity_dump_logged_a_seq SET UNLOGGED"
  },
  {
    "comment": "identity - Statement 230",
    "query": "CREATE UNLOGGED TABLE identity_dump_unlogged (a INT GENERATED ALWAYS AS IDENTITY)"
  },
  {
    "comment": "identity - Statement 231",
    "query": "ALTER SEQUENCE identity_dump_unlogged_a_seq SET LOGGED"
  },
  {
    "comment": "identity - Statement 232",
    "query": "SELECT relname, relpersistence FROM pg_class WHERE relname ~ '^identity_dump_' ORDER BY 1"
  }
]
