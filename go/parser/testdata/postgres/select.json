[
  {
    "comment": "select - Statement 1",
    "query": "SELECT * FROM onek WHERE onek.unique1 \u003c 10 ORDER BY onek.unique1"
  },
  {
    "comment": "select - Statement 2",
    "query": "SELECT onek.unique1, onek.stringu1 FROM onek WHERE onek.unique1 \u003c 20 ORDER BY unique1 using \u003e",
    "expected": "SELECT onek.unique1, onek.stringu1 FROM onek WHERE onek.unique1 \u003c 20 ORDER BY unique1 USING \u003e"
  },
  {
    "comment": "select - Statement 3",
    "query": "SELECT onek.unique1, onek.stringu1 FROM onek WHERE onek.unique1 \u003e 980 ORDER BY stringu1 using \u003c",
    "expected": "SELECT onek.unique1, onek.stringu1 FROM onek WHERE onek.unique1 \u003e 980 ORDER BY stringu1 USING \u003c"
  },
  {
    "comment": "select - Statement 4",
    "query": "SELECT onek.unique1, onek.string4 FROM onek WHERE onek.unique1 \u003e 980 ORDER BY string4 using \u003c, unique1 using \u003e",
    "expected": "SELECT onek.unique1, onek.string4 FROM onek WHERE onek.unique1 \u003e 980 ORDER BY string4 USING \u003c, unique1 USING \u003e"
  },
  {
    "comment": "select - Statement 5",
    "query": "SELECT onek.unique1, onek.string4 FROM onek WHERE onek.unique1 \u003e 980 ORDER BY string4 using \u003e, unique1 using \u003c",
    "expected": "SELECT onek.unique1, onek.string4 FROM onek WHERE onek.unique1 \u003e 980 ORDER BY string4 USING \u003e, unique1 USING \u003c"
  },
  {
    "comment": "select - Statement 6",
    "query": "SELECT onek.unique1, onek.string4 FROM onek WHERE onek.unique1 \u003c 20 ORDER BY unique1 using \u003e, string4 using \u003c",
    "expected": "SELECT onek.unique1, onek.string4 FROM onek WHERE onek.unique1 \u003c 20 ORDER BY unique1 USING \u003e, string4 USING \u003c"
  },
  {
    "comment": "select - Statement 7",
    "query": "SELECT onek.unique1, onek.string4 FROM onek WHERE onek.unique1 \u003c 20 ORDER BY unique1 using \u003c, string4 using \u003e",
    "expected": "SELECT onek.unique1, onek.string4 FROM onek WHERE onek.unique1 \u003c 20 ORDER BY unique1 USING \u003c, string4 USING \u003e"
  },
  {
    "comment": "select - Statement 8",
    "query": "ANALYZE onek2"
  },
  {
    "comment": "select - Statement 9",
    "query": "SET enable_seqscan TO off",
    "expected": "SET enable_seqscan = off"
  },
  {
    "comment": "select - Statement 10",
    "query": "SET enable_bitmapscan TO off",
    "expected": "SET enable_bitmapscan = off"
  },
  {
    "comment": "select - Statement 11",
    "query": "SET enable_sort TO off",
    "expected": "SET enable_sort = off"
  },
  {
    "comment": "select - Statement 12",
    "query": "SELECT onek2.* FROM onek2 WHERE onek2.unique1 \u003c 10"
  },
  {
    "comment": "select - Statement 13",
    "query": "SELECT onek2.unique1, onek2.stringu1 FROM onek2 WHERE onek2.unique1 \u003c 20 ORDER BY unique1 using \u003e",
    "expected": "SELECT onek2.unique1, onek2.stringu1 FROM onek2 WHERE onek2.unique1 \u003c 20 ORDER BY unique1 USING \u003e"
  },
  {
    "comment": "select - Statement 14",
    "query": "SELECT onek2.unique1, onek2.stringu1 FROM onek2 WHERE onek2.unique1 \u003e 980"
  },
  {
    "comment": "select - Statement 15",
    "query": "RESET enable_seqscan"
  },
  {
    "comment": "select - Statement 16",
    "query": "RESET enable_bitmapscan"
  },
  {
    "comment": "select - Statement 17",
    "query": "RESET enable_sort"
  },
  {
    "comment": "select - Statement 18",
    "query": "SELECT p.name, p.age FROM person* p",
    "expected": "SELECT p.name, p.age FROM person AS p"
  },
  {
    "comment": "select - Statement 19",
    "query": "SELECT p.name, p.age FROM person* p ORDER BY age using \u003e, name",
    "expected": "SELECT p.name, p.age FROM person AS p ORDER BY age USING \u003e, name"
  },
  {
    "comment": "select - Statement 20",
    "query": "select foo from (select 1 offset 0) as foo",
    "expected": "SELECT foo FROM (SELECT 1 OFFSET 0) AS foo"
  },
  {
    "comment": "select - Statement 21",
    "query": "select foo from (select null offset 0) as foo",
    "expected": "SELECT foo FROM (SELECT NULL OFFSET 0) AS foo"
  },
  {
    "comment": "select - Statement 22",
    "query": "select foo from (select 'xyzzy',1,null offset 0) as foo",
    "expected": "SELECT foo FROM (SELECT 'xyzzy', 1, NULL OFFSET 0) AS foo"
  },
  {
    "comment": "select - Statement 23",
    "query": "select * from onek, (values(147, 'RFAAAA'), (931, 'VJAAAA')) as v (i, j) WHERE onek.unique1 = v.i and onek.stringu1 = v.j",
    "expected": "SELECT * FROM onek, (VALUES (147, 'RFAAAA'), (931, 'VJAAAA')) AS v(i, j) WHERE onek.unique1 = v.i AND onek.stringu1 = v.j"
  },
  {
    "comment": "select - Statement 24",
    "query": "select * from onek, (values ((select i from (values(10000), (2), (389), (1000), (2000), ((select 10029))) as foo(i) order by i asc limit 1))) bar (i) where onek.unique1 = bar.i",
    "expected": "SELECT * FROM onek, (VALUES ((SELECT i FROM (VALUES (10000), (2), (389), (1000), (2000), ((SELECT 10029))) AS foo(i) ORDER BY i ASC LIMIT 1))) AS bar(i) WHERE onek.unique1 = bar.i"
  },
  {
    "comment": "select - Statement 25",
    "query": "select * from onek where (unique1,ten) in (values (1,1), (20,0), (99,9), (17,99)) order by unique1",
    "expected": "SELECT * FROM onek WHERE (unique1, ten) IN (VALUES (1, 1), (20, 0), (99, 9), (17, 99)) ORDER BY unique1"
  },
  {
    "comment": "select - Statement 26",
    "query": "VALUES (1,2), (3,4+4), (7,77.7)",
    "expected": "VALUES (1, 2), (3, 4 + 4), (7, 77.7)"
  },
  {
    "comment": "select - Statement 27",
    "query": "VALUES (1,2), (3,4+4), (7,77.7) UNION ALL SELECT 2+2, 57 UNION ALL TABLE int8_tbl",
    "expected": "(VALUES (1, 2), (3, 4 + 4), (7, 77.7) UNION ALL SELECT 2 + 2, 57) UNION ALL SELECT * FROM int8_tbl"
  },
  {
    "comment": "select - Statement 28",
    "query": "CREATE TEMP TABLE nocols()",
    "expected": "CREATE TEMPORARY TABLE nocols ()"
  },
  {
    "comment": "select - Statement 29",
    "query": "INSERT INTO nocols DEFAULT VALUES"
  },
  {
    "comment": "select - Statement 30",
    "query": "SELECT * FROM nocols n, LATERAL (VALUES(n.*)) v",
    "expected": "SELECT * FROM nocols AS n, LATERAL (VALUES (n.*)) AS v"
  },
  {
    "comment": "select - Statement 31",
    "query": "CREATE TEMP TABLE foo (f1 int)",
    "expected": "CREATE TEMPORARY TABLE foo (f1 INT)"
  },
  {
    "comment": "select - Statement 32",
    "query": "INSERT INTO foo VALUES (42),(3),(10),(7),(null),(null),(1)",
    "expected": "INSERT INTO foo VALUES (42), (3), (10), (7), (NULL), (NULL), (1)"
  },
  {
    "comment": "select - Statement 33",
    "query": "SELECT * FROM foo ORDER BY f1"
  },
  {
    "comment": "select - Statement 34",
    "query": "SELECT * FROM foo ORDER BY f1 ASC"
  },
  {
    "comment": "select - Statement 35",
    "query": "SELECT * FROM foo ORDER BY f1 NULLS FIRST"
  },
  {
    "comment": "select - Statement 36",
    "query": "SELECT * FROM foo ORDER BY f1 DESC"
  },
  {
    "comment": "select - Statement 37",
    "query": "SELECT * FROM foo ORDER BY f1 DESC NULLS LAST"
  },
  {
    "comment": "select - Statement 38",
    "query": "CREATE INDEX fooi ON foo (f1)",
    "expected": "CREATE INDEX fooi ON foo USING btree ( f1 )"
  },
  {
    "comment": "select - Statement 39",
    "query": "SET enable_sort = false"
  },
  {
    "comment": "select - Statement 40",
    "query": "DROP INDEX fooi"
  },
  {
    "comment": "select - Statement 41",
    "query": "CREATE INDEX fooi ON foo (f1 DESC)",
    "expected": "CREATE INDEX fooi ON foo USING btree ( f1 desc )"
  },
  {
    "comment": "select - Statement 42",
    "query": "CREATE INDEX fooi ON foo (f1 DESC NULLS LAST)",
    "expected": "CREATE INDEX fooi ON foo USING btree ( f1 desc nulls last )"
  },
  {
    "comment": "select - Statement 43",
    "query": "explain (costs off) select * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA'",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM onek2 WHERE unique2 = 11 AND stringu1 = 'ATAAAA'"
  },
  {
    "comment": "select - Statement 44",
    "query": "select * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA'",
    "expected": "SELECT * FROM onek2 WHERE unique2 = 11 AND stringu1 = 'ATAAAA'"
  },
  {
    "comment": "select - Statement 45",
    "query": "explain (costs off, analyze on, timing off, summary off) select * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA'",
    "expected": "EXPLAIN (COSTS false, ANALYZE true, TIMING false, SUMMARY false) SELECT * FROM onek2 WHERE unique2 = 11 AND stringu1 = 'ATAAAA'"
  },
  {
    "comment": "select - Statement 46",
    "query": "explain (costs off) select unique2 from onek2 where unique2 = 11 and stringu1 = 'ATAAAA'",
    "expected": "EXPLAIN (COSTS false) SELECT unique2 FROM onek2 WHERE unique2 = 11 AND stringu1 = 'ATAAAA'"
  },
  {
    "comment": "select - Statement 47",
    "query": "select unique2 from onek2 where unique2 = 11 and stringu1 = 'ATAAAA'",
    "expected": "SELECT unique2 FROM onek2 WHERE unique2 = 11 AND stringu1 = 'ATAAAA'"
  },
  {
    "comment": "select - Statement 48",
    "query": "explain (costs off) select * from onek2 where unique2 = 11 and stringu1 \u003c 'B'",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM onek2 WHERE unique2 = 11 AND stringu1 \u003c 'B'"
  },
  {
    "comment": "select - Statement 49",
    "query": "select * from onek2 where unique2 = 11 and stringu1 \u003c 'B'",
    "expected": "SELECT * FROM onek2 WHERE unique2 = 11 AND stringu1 \u003c 'B'"
  },
  {
    "comment": "select - Statement 50",
    "query": "explain (costs off) select unique2 from onek2 where unique2 = 11 and stringu1 \u003c 'B'",
    "expected": "EXPLAIN (COSTS false) SELECT unique2 FROM onek2 WHERE unique2 = 11 AND stringu1 \u003c 'B'"
  },
  {
    "comment": "select - Statement 51",
    "query": "select unique2 from onek2 where unique2 = 11 and stringu1 \u003c 'B'",
    "expected": "SELECT unique2 FROM onek2 WHERE unique2 = 11 AND stringu1 \u003c 'B'"
  },
  {
    "comment": "select - Statement 52",
    "query": "explain (costs off) select unique2 from onek2 where unique2 = 11 and stringu1 \u003c 'B' for update",
    "expected": "EXPLAIN (COSTS false) SELECT unique2 FROM onek2 WHERE unique2 = 11 AND stringu1 \u003c 'B' FOR UPDATE"
  },
  {
    "comment": "select - Statement 53",
    "query": "select unique2 from onek2 where unique2 = 11 and stringu1 \u003c 'B' for update",
    "expected": "SELECT unique2 FROM onek2 WHERE unique2 = 11 AND stringu1 \u003c 'B' FOR UPDATE"
  },
  {
    "comment": "select - Statement 54",
    "query": "explain (costs off) select unique2 from onek2 where unique2 = 11 and stringu1 \u003c 'C'",
    "expected": "EXPLAIN (COSTS false) SELECT unique2 FROM onek2 WHERE unique2 = 11 AND stringu1 \u003c 'C'"
  },
  {
    "comment": "select - Statement 55",
    "query": "select unique2 from onek2 where unique2 = 11 and stringu1 \u003c 'C'",
    "expected": "SELECT unique2 FROM onek2 WHERE unique2 = 11 AND stringu1 \u003c 'C'"
  },
  {
    "comment": "select - Statement 56",
    "query": "SET enable_indexscan TO off",
    "expected": "SET enable_indexscan = off"
  },
  {
    "comment": "select - Statement 57",
    "query": "RESET enable_indexscan"
  },
  {
    "comment": "select - Statement 58",
    "query": "explain (costs off) select unique1, unique2 from onek2 where (unique2 = 11 or unique1 = 0) and stringu1 \u003c 'B'",
    "expected": "EXPLAIN (COSTS false) SELECT unique1, unique2 FROM onek2 WHERE (unique2 = 11 OR unique1 = 0) AND stringu1 \u003c 'B'"
  },
  {
    "comment": "select - Statement 59",
    "query": "select unique1, unique2 from onek2 where (unique2 = 11 or unique1 = 0) and stringu1 \u003c 'B'",
    "expected": "SELECT unique1, unique2 FROM onek2 WHERE (unique2 = 11 OR unique1 = 0) AND stringu1 \u003c 'B'"
  },
  {
    "comment": "select - Statement 60",
    "query": "explain (costs off) select unique1, unique2 from onek2 where (unique2 = 11 and stringu1 \u003c 'B') or unique1 = 0",
    "expected": "EXPLAIN (COSTS false) SELECT unique1, unique2 FROM onek2 WHERE (unique2 = 11 AND stringu1 \u003c 'B') OR unique1 = 0"
  },
  {
    "comment": "select - Statement 61",
    "query": "select unique1, unique2 from onek2 where (unique2 = 11 and stringu1 \u003c 'B') or unique1 = 0",
    "expected": "SELECT unique1, unique2 FROM onek2 WHERE (unique2 = 11 AND stringu1 \u003c 'B') OR unique1 = 0"
  },
  {
    "comment": "select - Statement 62",
    "query": "SELECT 1 AS x ORDER BY x"
  },
  {
    "comment": "select - Statement 63",
    "query": "create function sillysrf(int) returns setof int as 'values (1),(10),(2),($1)' language sql immutable",
    "expected": "CREATE FUNCTION sillysrf (INT) RETURNS SETOF INT AS $$values (1),(10),(2),($1)$$ LANGUAGE sql IMMUTABLE"
  },
  {
    "comment": "select - Statement 64",
    "query": "select sillysrf(42)",
    "expected": "SELECT sillysrf(42)"
  },
  {
    "comment": "select - Statement 65",
    "query": "select sillysrf(-1) order by 1",
    "expected": "SELECT sillysrf(-1) ORDER BY 1"
  },
  {
    "comment": "select - Statement 66",
    "query": "drop function sillysrf(int)",
    "expected": "DROP FUNCTION sillysrf(INT)"
  },
  {
    "comment": "select - Statement 67",
    "query": "select * from (values (2),(null),(1)) v(k) where k = k order by k",
    "expected": "SELECT * FROM (VALUES (2), (NULL), (1)) AS v(k) WHERE k = k ORDER BY k"
  },
  {
    "comment": "select - Statement 68",
    "query": "select * from (values (2),(null),(1)) v(k) where k = k",
    "expected": "SELECT * FROM (VALUES (2), (NULL), (1)) AS v(k) WHERE k = k"
  },
  {
    "comment": "select - Statement 69",
    "query": "create table list_parted_tbl (a int,b int) partition by list (a)",
    "expected": "CREATE TABLE list_parted_tbl (a INT, b INT) PARTITION BY list (a)"
  },
  {
    "comment": "select - Statement 70",
    "query": "create table list_parted_tbl1 partition of list_parted_tbl for values in (1) partition by list(b)",
    "expected": "CREATE TABLE list_parted_tbl1 PARTITION OF list_parted_tbl FOR VALUES IN (1) PARTITION BY list (b)"
  },
  {
    "comment": "select - Statement 71",
    "query": "explain (costs off) select * from list_parted_tbl",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM list_parted_tbl"
  },
  {
    "comment": "select - Statement 72",
    "query": "drop table list_parted_tbl",
    "expected": "DROP TABLE list_parted_tbl"
  }
]
