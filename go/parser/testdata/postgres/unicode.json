[
  {
    "comment": "unicode - Statement 1",
    "query": "SELECT getdatabaseencoding() <> 'UTF8' AS skip_test"
  },
  {
    "comment": "unicode - Statement 2",
    "query": "SELECT unicode_version() IS NOT NULL"
  },
  {
    "comment": "unicode - Statement 3",
    "query": "SELECT unicode_assigned(U&'abc')"
  },
  {
    "comment": "unicode - Statement 4",
    "query": "SELECT unicode_assigned(U&'abc\\+10FFFF')"
  },
  {
    "comment": "unicode - Statement 5",
    "query": "SELECT normalize('')"
  },
  {
    "comment": "unicode - Statement 6",
    "query": "SELECT normalize(U&'\\0061\\0308\\24D1c') = U&'\\00E4\\24D1c' COLLATE \"C\" AS test_default"
  },
  {
    "comment": "unicode - Statement 7",
    "query": "SELECT normalize(U&'\\0061\\0308\\24D1c', NFC) = U&'\\00E4\\24D1c' COLLATE \"C\" AS test_nfc"
  },
  {
    "comment": "unicode - Statement 8",
    "query": "SELECT normalize(U&'\\00E4bc', NFC) = U&'\\00E4bc' COLLATE \"C\" AS test_nfc_idem"
  },
  {
    "comment": "unicode - Statement 9",
    "query": "SELECT normalize(U&'\\00E4\\24D1c', NFD) = U&'\\0061\\0308\\24D1c' COLLATE \"C\" AS test_nfd"
  },
  {
    "comment": "unicode - Statement 10",
    "query": "SELECT normalize(U&'\\0061\\0308\\24D1c', NFKC) = U&'\\00E4bc' COLLATE \"C\" AS test_nfkc"
  },
  {
    "comment": "unicode - Statement 11",
    "query": "SELECT normalize(U&'\\00E4\\24D1c', NFKD) = U&'\\0061\\0308bc' COLLATE \"C\" AS test_nfkd"
  },
  {
    "comment": "unicode - Statement 12",
    "query": "SELECT \"normalize\"('abc', 'def')"
  },
  {
    "comment": "unicode - Statement 13",
    "query": "SELECT U&'\\00E4\\24D1c' IS NORMALIZED AS test_default"
  },
  {
    "comment": "unicode - Statement 14",
    "query": "SELECT U&'\\00E4\\24D1c' IS NFC NORMALIZED AS test_nfc"
  },
  {
    "comment": "unicode - Statement 15",
    "query": "SELECT num, val, val IS NFC NORMALIZED AS NFC, val IS NFD NORMALIZED AS NFD, val IS NFKC NORMALIZED AS NFKC, val IS NFKD NORMALIZED AS NFKD FROM (VALUES (1, U&'\\00E4bc'), (2, U&'\\0061\\0308bc'), (3, U&'\\00E4\\24D1c'), (4, U&'\\0061\\0308\\24D1c'), (5, '')) vals (num, val) ORDER BY num"
  },
  {
    "comment": "unicode - Statement 16",
    "query": "SELECT is_normalized('abc', 'def')"
  }
]