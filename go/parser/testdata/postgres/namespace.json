[
  {
    "comment": "namespace - Statement 1",
    "query": "SELECT pg_catalog.set_config('search_path', ' ', false)",
    "expected": "SELECT set_config('search_path', ' ', FALSE)"
  },
  {
    "comment": "namespace - Statement 2",
    "query": "CREATE SCHEMA test_ns_schema_1 CREATE UNIQUE INDEX abc_a_idx ON abc (a) CREATE VIEW abc_view AS SELECT a+1 AS a, b+1 AS b FROM abc CREATE TABLE abc ( a serial, b int UNIQUE )",
    "expected": "CREATE SCHEMA test_ns_schema_1 CREATE UNIQUE INDEX abc_a_idx ON abc USING btree ( a ) CREATE VIEW abc_view AS SELECT a + 1 AS a, b + 1 AS b FROM abc CREATE TABLE abc (a serial, b INT UNIQUE)"
  },
  {
    "comment": "namespace - Statement 3",
    "query": "SET search_path to public",
    "expected": "SET SCHEMA 'public'"
  },
  {
    "comment": "namespace - Statement 4",
    "query": "BEGIN"
  },
  {
    "comment": "namespace - Statement 5",
    "query": "SET search_path to public, test_ns_schema_1",
    "expected": "SET search_path = 'public', 'test_ns_schema_1'"
  },
  {
    "comment": "namespace - Statement 6",
    "query": "CREATE SCHEMA test_ns_schema_2 CREATE VIEW abc_view AS SELECT c FROM abc"
  },
  {
    "comment": "namespace - Statement 7",
    "query": "COMMIT"
  },
  {
    "comment": "namespace - Statement 8",
    "query": "SHOW search_path"
  },
  {
    "comment": "namespace - Statement 9",
    "query": "CREATE SCHEMA test_ns_schema_2 CREATE VIEW abc_view AS SELECT a FROM abc"
  },
  {
    "comment": "namespace - Statement 10",
    "query": "DROP SCHEMA test_ns_schema_2 CASCADE"
  },
  {
    "comment": "namespace - Statement 11",
    "query": "SELECT COUNT(*) FROM pg_class WHERE relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'test_ns_schema_1')"
  },
  {
    "comment": "namespace - Statement 12",
    "query": "INSERT INTO test_ns_schema_1.abc DEFAULT VALUES"
  },
  {
    "comment": "namespace - Statement 13",
    "query": "SELECT * FROM test_ns_schema_1.abc"
  },
  {
    "comment": "namespace - Statement 14",
    "query": "SELECT * FROM test_ns_schema_1.abc_view"
  },
  {
    "comment": "namespace - Statement 15",
    "query": "ALTER SCHEMA test_ns_schema_1 RENAME TO test_ns_schema_renamed"
  },
  {
    "comment": "namespace - Statement 16",
    "query": "CREATE SCHEMA test_ns_schema_renamed"
  },
  {
    "comment": "namespace - Statement 17",
    "query": "CREATE SCHEMA IF NOT EXISTS test_ns_schema_renamed"
  },
  {
    "comment": "namespace - Statement 18",
    "query": "CREATE SCHEMA IF NOT EXISTS test_ns_schema_renamed CREATE TABLE abc ( a serial, b int UNIQUE )",
    "expected": "CREATE SCHEMA IF NOT EXISTS test_ns_schema_renamed CREATE TABLE abc (a serial, b INT UNIQUE)"
  },
  {
    "comment": "namespace - Statement 19",
    "query": "DROP SCHEMA test_ns_schema_renamed CASCADE"
  },
  {
    "comment": "namespace - Statement 20",
    "query": "SELECT COUNT(*) FROM pg_class WHERE relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'test_ns_schema_renamed')"
  },
  {
    "comment": "namespace - Statement 21",
    "query": "CREATE SCHEMA test_maint_search_path"
  },
  {
    "comment": "namespace - Statement 22",
    "query": "SET search_path = test_maint_search_path",
    "expected": "SET SCHEMA 'test_maint_search_path'"
  },
  {
    "comment": "namespace - Statement 23",
    "query": "CREATE FUNCTION fn(INT) RETURNS INT IMMUTABLE LANGUAGE plpgsql AS $$ BEGIN RAISE NOTICE 'current search_path: %', current_setting('search_path'); RETURN $1; END; $$",
    "expected": "CREATE FUNCTION fn (INT) RETURNS INT IMMUTABLE LANGUAGE plpgsql AS $$ BEGIN RAISE NOTICE 'current search_path: %', current_setting('search_path'); RETURN $1; END; $$"
  },
  {
    "comment": "namespace - Statement 27",
    "query": "CREATE TABLE test_maint(i INT)",
    "expected": "CREATE TABLE test_maint (i INT)"
  },
  {
    "comment": "namespace - Statement 28",
    "query": "INSERT INTO test_maint VALUES (1), (2)"
  },
  {
    "comment": "namespace - Statement 29",
    "query": "CREATE MATERIALIZED VIEW test_maint_mv AS SELECT fn(i) FROM test_maint"
  },
  {
    "comment": "namespace - Statement 30",
    "query": "CREATE INDEX test_maint_idx ON test_maint_search_path.test_maint (fn(i))",
    "expected": "CREATE INDEX test_maint_idx ON test_maint_search_path.test_maint USING btree ( (fn(i)) )"
  },
  {
    "comment": "namespace - Statement 31",
    "query": "REINDEX TABLE test_maint_search_path.test_maint",
    "expected": "REINDEX TABLE test_maint"
  },
  {
    "comment": "namespace - Statement 32",
    "query": "ANALYZE test_maint_search_path.test_maint"
  },
  {
    "comment": "namespace - Statement 33",
    "query": "VACUUM FULL test_maint_search_path.test_maint",
    "expected": "VACUUM (FULL) test_maint_search_path.test_maint"
  },
  {
    "comment": "namespace - Statement 34",
    "query": "CLUSTER test_maint_search_path.test_maint USING test_maint_idx"
  },
  {
    "comment": "namespace - Statement 35",
    "query": "REFRESH MATERIALIZED VIEW test_maint_search_path.test_maint_mv"
  },
  {
    "comment": "namespace - Statement 36",
    "query": "RESET search_path"
  },
  {
    "comment": "namespace - Statement 37",
    "query": "DROP SCHEMA test_maint_search_path CASCADE"
  }
]
