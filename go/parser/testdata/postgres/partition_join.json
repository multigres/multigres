[
  {
    "comment": "partition_join - Statement 1",
    "query": "SET enable_partitionwise_join to true",
    "expected": "SET enable_partitionwise_join = true"
  },
  {
    "comment": "partition_join - Statement 2",
    "query": "CREATE TABLE prt1 (a int, b int, c varchar) PARTITION BY RANGE(a)",
    "expected": "CREATE TABLE prt1 (a INT, b INT, c VARCHAR) PARTITION BY range (a)"
  },
  {
    "comment": "partition_join - Statement 3",
    "query": "CREATE TABLE prt1_p1 PARTITION OF prt1 FOR VALUES FROM (0) TO (250)"
  },
  {
    "comment": "partition_join - Statement 4",
    "query": "CREATE TABLE prt1_p3 PARTITION OF prt1 FOR VALUES FROM (500) TO (600)"
  },
  {
    "comment": "partition_join - Statement 5",
    "query": "CREATE TABLE prt1_p2 PARTITION OF prt1 FOR VALUES FROM (250) TO (500)"
  },
  {
    "comment": "partition_join - Statement 6",
    "query": "INSERT INTO prt1 SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(0, 599) i WHERE i % 2 = 0",
    "expected": "INSERT INTO prt1 (SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(0, 599) AS i WHERE i % 2 = 0)"
  },
  {
    "comment": "partition_join - Statement 7",
    "query": "CREATE INDEX iprt1_p1_a on prt1_p1(a)",
    "expected": "CREATE INDEX iprt1_p1_a ON prt1_p1 USING btree ( a )"
  },
  {
    "comment": "partition_join - Statement 8",
    "query": "CREATE INDEX iprt1_p2_a on prt1_p2(a)",
    "expected": "CREATE INDEX iprt1_p2_a ON prt1_p2 USING btree ( a )"
  },
  {
    "comment": "partition_join - Statement 9",
    "query": "CREATE INDEX iprt1_p3_a on prt1_p3(a)",
    "expected": "CREATE INDEX iprt1_p3_a ON prt1_p3 USING btree ( a )"
  },
  {
    "comment": "partition_join - Statement 10",
    "query": "ANALYZE prt1"
  },
  {
    "comment": "partition_join - Statement 11",
    "query": "CREATE TABLE prt2 (a int, b int, c varchar) PARTITION BY RANGE(b)",
    "expected": "CREATE TABLE prt2 (a INT, b INT, c VARCHAR) PARTITION BY range (b)"
  },
  {
    "comment": "partition_join - Statement 12",
    "query": "CREATE TABLE prt2_p1 PARTITION OF prt2 FOR VALUES FROM (0) TO (250)"
  },
  {
    "comment": "partition_join - Statement 13",
    "query": "CREATE TABLE prt2_p2 PARTITION OF prt2 FOR VALUES FROM (250) TO (500)"
  },
  {
    "comment": "partition_join - Statement 14",
    "query": "CREATE TABLE prt2_p3 PARTITION OF prt2 FOR VALUES FROM (500) TO (600)"
  },
  {
    "comment": "partition_join - Statement 15",
    "query": "INSERT INTO prt2 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(0, 599) i WHERE i % 3 = 0",
    "expected": "INSERT INTO prt2 (SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(0, 599) AS i WHERE i % 3 = 0)"
  },
  {
    "comment": "partition_join - Statement 16",
    "query": "CREATE INDEX iprt2_p1_b on prt2_p1(b)",
    "expected": "CREATE INDEX iprt2_p1_b ON prt2_p1 USING btree ( b )"
  },
  {
    "comment": "partition_join - Statement 17",
    "query": "CREATE INDEX iprt2_p2_b on prt2_p2(b)",
    "expected": "CREATE INDEX iprt2_p2_b ON prt2_p2 USING btree ( b )"
  },
  {
    "comment": "partition_join - Statement 18",
    "query": "CREATE INDEX iprt2_p3_b on prt2_p3(b)",
    "expected": "CREATE INDEX iprt2_p3_b ON prt2_p3 USING btree ( b )"
  },
  {
    "comment": "partition_join - Statement 19",
    "query": "ANALYZE prt2"
  },
  {
    "comment": "partition_join - Statement 20",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 AS t1, prt2 AS t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 21",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 AS t1, prt2 AS t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 22",
    "query": "EXPLAIN (COSTS OFF) SELECT COUNT(*) FROM prt1 t1 LEFT JOIN prt1 t2 ON t1.a = t2.a LEFT JOIN prt1 t3 ON t2.a = t3.a",
    "expected": "EXPLAIN (COSTS false) SELECT COUNT(*) FROM prt1 AS t1 LEFT OUTER JOIN prt1 AS t2 ON t1.a = t2.a LEFT OUTER JOIN prt1 AS t3 ON t2.a = t3.a"
  },
  {
    "comment": "partition_join - Statement 23",
    "query": "SELECT COUNT(*) FROM prt1 t1 LEFT JOIN prt1 t2 ON t1.a = t2.a LEFT JOIN prt1 t3 ON t2.a = t3.a",
    "expected": "SELECT COUNT(*) FROM prt1 AS t1 LEFT OUTER JOIN prt1 AS t2 ON t1.a = t2.a LEFT OUTER JOIN prt1 AS t3 ON t2.a = t3.a"
  },
  {
    "comment": "partition_join - Statement 24",
    "query": "EXPLAIN (COSTS OFF) SELECT t1, t2 FROM prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1, t2 FROM prt1 AS t1 LEFT OUTER JOIN prt2 AS t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 25",
    "query": "SELECT t1, t2 FROM prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1, t2 FROM prt1 AS t1 LEFT OUTER JOIN prt2 AS t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 26",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b WHERE t2.a = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 AS t1 RIGHT OUTER JOIN prt2 AS t2 ON t1.a = t2.b WHERE t2.a = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 27",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b WHERE t2.a = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 AS t1 RIGHT OUTER JOIN prt2 AS t2 ON t1.a = t2.b WHERE t2.a = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 28",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 50 phv, * FROM prt1 WHERE prt1.b = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.a = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 50 AS phv, * FROM prt1 WHERE prt1.b = 0) AS t1 FULL OUTER JOIN (SELECT 75 AS phv, * FROM prt2 WHERE prt2.a = 0) AS t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 29",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 50 phv, * FROM prt1 WHERE prt1.b = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.a = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 50 AS phv, * FROM prt1 WHERE prt1.b = 0) AS t1 FULL OUTER JOIN (SELECT 75 AS phv, * FROM prt2 WHERE prt2.a = 0) AS t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 30",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a \u003c 450 AND t2.b \u003e 250 AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 AS t1, prt2 AS t2 WHERE t1.a = t2.b AND t1.a \u003c 450 AND t2.b \u003e 250 AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 31",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a \u003c 450 AND t2.b \u003e 250 AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 AS t1, prt2 AS t2 WHERE t1.a = t2.b AND t1.a \u003c 450 AND t2.b \u003e 250 AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 32",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a \u003c 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b \u003e 250) t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a \u003c 450) AS t1 LEFT OUTER JOIN (SELECT * FROM prt2 WHERE b \u003e 250) AS t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 33",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a \u003c 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b \u003e 250) t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a \u003c 450) AS t1 LEFT OUTER JOIN (SELECT * FROM prt2 WHERE b \u003e 250) AS t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 34",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a \u003c 450) t1 FULL JOIN (SELECT * FROM prt2 WHERE b \u003e 250) t2 ON t1.a = t2.b WHERE t1.b = 0 OR t2.a = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a \u003c 450) AS t1 FULL OUTER JOIN (SELECT * FROM prt2 WHERE b \u003e 250) AS t2 ON t1.a = t2.b WHERE t1.b = 0 OR t2.a = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 35",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a \u003c 450) t1 FULL JOIN (SELECT * FROM prt2 WHERE b \u003e 250) t2 ON t1.a = t2.b WHERE t1.b = 0 OR t2.a = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a \u003c 450) AS t1 FULL OUTER JOIN (SELECT * FROM prt2 WHERE b \u003e 250) AS t2 ON t1.a = t2.b WHERE t1.b = 0 OR t2.a = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 36",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t2.b FROM prt2 t2 WHERE t2.a = 0) AND t1.b = 0 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.* FROM prt1 AS t1 WHERE t1.a IN (SELECT t2.b FROM prt2 AS t2 WHERE t2.a = 0) AND t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 37",
    "query": "SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t2.b FROM prt2 t2 WHERE t2.a = 0) AND t1.b = 0 ORDER BY t1.a",
    "expected": "SELECT t1.* FROM prt1 AS t1 WHERE t1.a IN (SELECT t2.b FROM prt2 AS t2 WHERE t2.a = 0) AND t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 38",
    "query": "EXPLAIN (COSTS OFF) SELECT sum(t1.a), avg(t1.a), sum(t1.b), avg(t1.b) FROM prt1 t1 WHERE NOT EXISTS (SELECT 1 FROM prt2 t2 WHERE t1.a = t2.b)",
    "expected": "EXPLAIN (COSTS false) SELECT SUM(t1.a), AVG(t1.a), SUM(t1.b), AVG(t1.b) FROM prt1 AS t1 WHERE NOT EXISTS (SELECT 1 FROM prt2 AS t2 WHERE t1.a = t2.b)"
  },
  {
    "comment": "partition_join - Statement 39",
    "query": "SELECT sum(t1.a), avg(t1.a), sum(t1.b), avg(t1.b) FROM prt1 t1 WHERE NOT EXISTS (SELECT 1 FROM prt2 t2 WHERE t1.a = t2.b)",
    "expected": "SELECT SUM(t1.a), AVG(t1.a), SUM(t1.b), AVG(t1.b) FROM prt1 AS t1 WHERE NOT EXISTS (SELECT 1 FROM prt2 AS t2 WHERE t1.a = t2.b)"
  },
  {
    "comment": "partition_join - Statement 40",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM prt1 t1 LEFT JOIN LATERAL (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.b) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss ON t1.a = ss.t2a WHERE t1.b = 0 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM prt1 AS t1 LEFT OUTER JOIN LATERAL (SELECT t2.a AS t2a, t3.a AS t3a, LEAST(t1.a, t2.a, t3.b) FROM prt1 AS t2 INNER JOIN prt2 AS t3 ON (t2.a = t3.b)) AS ss ON t1.a = ss.t2a WHERE t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 41",
    "query": "SELECT * FROM prt1 t1 LEFT JOIN LATERAL (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.b) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss ON t1.a = ss.t2a WHERE t1.b = 0 ORDER BY t1.a",
    "expected": "SELECT * FROM prt1 AS t1 LEFT OUTER JOIN LATERAL (SELECT t2.a AS t2a, t3.a AS t3a, LEAST(t1.a, t2.a, t3.b) FROM prt1 AS t2 INNER JOIN prt2 AS t3 ON (t2.a = t3.b)) AS ss ON t1.a = ss.t2a WHERE t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 42",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, ss.t2a, ss.t2c FROM prt1 t1 LEFT JOIN LATERAL (SELECT t2.a AS t2a, t3.a AS t3a, t2.b t2b, t2.c t2c, least(t1.a,t2.a,t3.b) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss ON t1.c = ss.t2c WHERE (t1.b + coalesce(ss.t2b, 0)) = 0 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, ss.t2a, ss.t2c FROM prt1 AS t1 LEFT OUTER JOIN LATERAL (SELECT t2.a AS t2a, t3.a AS t3a, t2.b AS t2b, t2.c AS t2c, LEAST(t1.a, t2.a, t3.b) FROM prt1 AS t2 INNER JOIN prt2 AS t3 ON (t2.a = t3.b)) AS ss ON t1.c = ss.t2c WHERE (t1.b + COALESCE(ss.t2b, 0)) = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 43",
    "query": "SELECT t1.a, ss.t2a, ss.t2c FROM prt1 t1 LEFT JOIN LATERAL (SELECT t2.a AS t2a, t3.a AS t3a, t2.b t2b, t2.c t2c, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss ON t1.c = ss.t2c WHERE (t1.b + coalesce(ss.t2b, 0)) = 0 ORDER BY t1.a",
    "expected": "SELECT t1.a, ss.t2a, ss.t2c FROM prt1 AS t1 LEFT OUTER JOIN LATERAL (SELECT t2.a AS t2a, t3.a AS t3a, t2.b AS t2b, t2.c AS t2c, LEAST(t1.a, t2.a, t3.a) FROM prt1 AS t2 INNER JOIN prt2 AS t3 ON (t2.a = t3.b)) AS ss ON t1.c = ss.t2c WHERE (t1.b + COALESCE(ss.t2b, 0)) = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 44",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM prt1 t1 JOIN LATERAL (SELECT * FROM prt1 t2 TABLESAMPLE SYSTEM (t1.a) REPEATABLE(t1.b)) s ON t1.a = s.a",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM prt1 AS t1 INNER JOIN LATERAL (SELECT * FROM prt1 AS t2 TABLESAMPLE system (t1.a) REPEATABLE (t1.b)) AS s ON t1.a = s.a"
  },
  {
    "comment": "partition_join - Statement 45",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM prt1 t1 LEFT JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2 t2) s ON t1.a = s.b WHERE s.t1b = s.a",
    "expected": "EXPLAIN (COSTS false) SELECT COUNT(*) FROM prt1 AS t1 LEFT OUTER JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2 AS t2) AS s ON t1.a = s.b WHERE s.t1b = s.a"
  },
  {
    "comment": "partition_join - Statement 46",
    "query": "SELECT count(*) FROM prt1 t1 LEFT JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2 t2) s ON t1.a = s.b WHERE s.t1b = s.a",
    "expected": "SELECT COUNT(*) FROM prt1 AS t1 LEFT OUTER JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2 AS t2) AS s ON t1.a = s.b WHERE s.t1b = s.a"
  },
  {
    "comment": "partition_join - Statement 47",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM prt1 t1 LEFT JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2 t2) s ON t1.a = s.b WHERE s.t1b = s.b",
    "expected": "EXPLAIN (COSTS false) SELECT COUNT(*) FROM prt1 AS t1 LEFT OUTER JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2 AS t2) AS s ON t1.a = s.b WHERE s.t1b = s.b"
  },
  {
    "comment": "partition_join - Statement 48",
    "query": "SELECT count(*) FROM prt1 t1 LEFT JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2 t2) s ON t1.a = s.b WHERE s.t1b = s.b",
    "expected": "SELECT COUNT(*) FROM prt1 AS t1 LEFT OUTER JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2 AS t2) AS s ON t1.a = s.b WHERE s.t1b = s.b"
  },
  {
    "comment": "partition_join - Statement 49",
    "query": "SET enable_partitionwise_aggregate TO true",
    "expected": "SET enable_partitionwise_aggregate = true"
  },
  {
    "comment": "partition_join - Statement 50",
    "query": "SET enable_hashjoin TO false",
    "expected": "SET enable_hashjoin = false"
  },
  {
    "comment": "partition_join - Statement 51",
    "query": "EXPLAIN (COSTS OFF) SELECT a, b FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b) WHERE a BETWEEN 490 AND 510 GROUP BY 1, 2 ORDER BY 1, 2",
    "expected": "EXPLAIN (COSTS false) SELECT a, b FROM prt1 FULL OUTER JOIN prt2 AS p2(b, a, c) USING (a, b) WHERE a BETWEEN 490 AND 510 GROUP BY 1, 2 ORDER BY 1, 2"
  },
  {
    "comment": "partition_join - Statement 52",
    "query": "SELECT a, b FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b) WHERE a BETWEEN 490 AND 510 GROUP BY 1, 2 ORDER BY 1, 2",
    "expected": "SELECT a, b FROM prt1 FULL OUTER JOIN prt2 AS p2(b, a, c) USING (a, b) WHERE a BETWEEN 490 AND 510 GROUP BY 1, 2 ORDER BY 1, 2"
  },
  {
    "comment": "partition_join - Statement 53",
    "query": "RESET enable_partitionwise_aggregate"
  },
  {
    "comment": "partition_join - Statement 54",
    "query": "RESET enable_hashjoin"
  },
  {
    "comment": "partition_join - Statement 55",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM prt1 t1 JOIN prt1 t2 ON t1.a = t2.a WHERE t1.a IN (SELECT a FROM prt1 t3)",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM prt1 AS t1 INNER JOIN prt1 AS t2 ON t1.a = t2.a WHERE t1.a IN (SELECT a FROM prt1 AS t3)"
  },
  {
    "comment": "partition_join - Statement 56",
    "query": "CREATE TABLE prt1_e (a int, b int, c int) PARTITION BY RANGE(((a + b)/2))",
    "expected": "CREATE TABLE prt1_e (a INT, b INT, c INT) PARTITION BY range (((a + b) / 2))"
  },
  {
    "comment": "partition_join - Statement 57",
    "query": "CREATE TABLE prt1_e_p1 PARTITION OF prt1_e FOR VALUES FROM (0) TO (250)"
  },
  {
    "comment": "partition_join - Statement 58",
    "query": "CREATE TABLE prt1_e_p2 PARTITION OF prt1_e FOR VALUES FROM (250) TO (500)"
  },
  {
    "comment": "partition_join - Statement 59",
    "query": "CREATE TABLE prt1_e_p3 PARTITION OF prt1_e FOR VALUES FROM (500) TO (600)"
  },
  {
    "comment": "partition_join - Statement 60",
    "query": "INSERT INTO prt1_e SELECT i, i, i % 25 FROM generate_series(0, 599, 2) i",
    "expected": "INSERT INTO prt1_e SELECT i, i, i % 25 FROM generate_series(0, 599, 2) AS i"
  },
  {
    "comment": "partition_join - Statement 61",
    "query": "CREATE INDEX iprt1_e_p1_ab2 on prt1_e_p1(((a+b)/2))",
    "expected": "CREATE INDEX iprt1_e_p1_ab2 ON prt1_e_p1 USING btree ( ((a + b) / 2) )"
  },
  {
    "comment": "partition_join - Statement 62",
    "query": "CREATE INDEX iprt1_e_p2_ab2 on prt1_e_p2(((a+b)/2))",
    "expected": "CREATE INDEX iprt1_e_p2_ab2 ON prt1_e_p2 USING btree ( ((a + b) / 2) )"
  },
  {
    "comment": "partition_join - Statement 63",
    "query": "CREATE INDEX iprt1_e_p3_ab2 on prt1_e_p3(((a+b)/2))",
    "expected": "CREATE INDEX iprt1_e_p3_ab2 ON prt1_e_p3 USING btree ( ((a + b) / 2) )"
  },
  {
    "comment": "partition_join - Statement 64",
    "query": "ANALYZE prt1_e"
  },
  {
    "comment": "partition_join - Statement 65",
    "query": "CREATE TABLE prt2_e (a int, b int, c int) PARTITION BY RANGE(((b + a)/2))",
    "expected": "CREATE TABLE prt2_e (a INT, b INT, c INT) PARTITION BY range (((b + a) / 2))"
  },
  {
    "comment": "partition_join - Statement 66",
    "query": "CREATE TABLE prt2_e_p1 PARTITION OF prt2_e FOR VALUES FROM (0) TO (250)"
  },
  {
    "comment": "partition_join - Statement 67",
    "query": "CREATE TABLE prt2_e_p2 PARTITION OF prt2_e FOR VALUES FROM (250) TO (500)"
  },
  {
    "comment": "partition_join - Statement 68",
    "query": "CREATE TABLE prt2_e_p3 PARTITION OF prt2_e FOR VALUES FROM (500) TO (600)"
  },
  {
    "comment": "partition_join - Statement 69",
    "query": "INSERT INTO prt2_e SELECT i, i, i % 25 FROM generate_series(0, 599, 3) i",
    "expected": "INSERT INTO prt2_e SELECT i, i, i % 25 FROM generate_series(0, 599, 3) AS i"
  },
  {
    "comment": "partition_join - Statement 70",
    "query": "ANALYZE prt2_e"
  },
  {
    "comment": "partition_join - Statement 71",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e t1, prt2_e t2 WHERE (t1.a + t1.b)/2 = (t2.b + t2.a)/2 AND t1.c = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e AS t1, prt2_e AS t2 WHERE (t1.a + t1.b) / 2 = (t2.b + t2.a) / 2 AND t1.c = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 72",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e t1, prt2_e t2 WHERE (t1.a + t1.b)/2 = (t2.b + t2.a)/2 AND t1.c = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e AS t1, prt2_e AS t2 WHERE (t1.a + t1.b) / 2 = (t2.b + t2.a) / 2 AND t1.c = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 73",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM prt1 t1, prt2 t2, prt1_e t3 WHERE t1.a = t2.b AND t1.a = (t3.a + t3.b)/2 AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM prt1 AS t1, prt2 AS t2, prt1_e AS t3 WHERE t1.a = t2.b AND t1.a = (t3.a + t3.b) / 2 AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 74",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM prt1 t1, prt2 t2, prt1_e t3 WHERE t1.a = t2.b AND t1.a = (t3.a + t3.b)/2 AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM prt1 AS t1, prt2 AS t2, prt1_e AS t3 WHERE t1.a = t2.b AND t1.a = (t3.a + t3.b) / 2 AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 75",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) LEFT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a + t3.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 AS t1 LEFT OUTER JOIN prt2 AS t2 ON t1.a = t2.b) LEFT OUTER JOIN prt1_e AS t3 ON (t1.a = (t3.a + t3.b) / 2) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a + t3.b"
  },
  {
    "comment": "partition_join - Statement 76",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) LEFT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a + t3.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 AS t1 LEFT OUTER JOIN prt2 AS t2 ON t1.a = t2.b) LEFT OUTER JOIN prt1_e AS t3 ON (t1.a = (t3.a + t3.b) / 2) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a + t3.b"
  },
  {
    "comment": "partition_join - Statement 77",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.c = 0 ORDER BY t1.a, t2.b, t3.a + t3.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 AS t1 LEFT OUTER JOIN prt2 AS t2 ON t1.a = t2.b) RIGHT OUTER JOIN prt1_e AS t3 ON (t1.a = (t3.a + t3.b) / 2) WHERE t3.c = 0 ORDER BY t1.a, t2.b, t3.a + t3.b"
  },
  {
    "comment": "partition_join - Statement 78",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.c = 0 ORDER BY t1.a, t2.b, t3.a + t3.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 AS t1 LEFT OUTER JOIN prt2 AS t2 ON t1.a = t2.b) RIGHT OUTER JOIN prt1_e AS t3 ON (t1.a = (t3.a + t3.b) / 2) WHERE t3.c = 0 ORDER BY t1.a, t2.b, t3.a + t3.b"
  },
  {
    "comment": "partition_join - Statement 79",
    "query": "EXPLAIN (COSTS OFF) SELECT COUNT(*) FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b) FULL JOIN prt2 p3(b,a,c) USING (a, b) WHERE a BETWEEN 490 AND 510",
    "expected": "EXPLAIN (COSTS false) SELECT COUNT(*) FROM prt1 FULL OUTER JOIN prt2 AS p2(b, a, c) USING (a, b) FULL OUTER JOIN prt2 AS p3(b, a, c) USING (a, b) WHERE a BETWEEN 490 AND 510"
  },
  {
    "comment": "partition_join - Statement 80",
    "query": "SELECT COUNT(*) FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b) FULL JOIN prt2 p3(b,a,c) USING (a, b) WHERE a BETWEEN 490 AND 510",
    "expected": "SELECT COUNT(*) FROM prt1 FULL OUTER JOIN prt2 AS p2(b, a, c) USING (a, b) FULL OUTER JOIN prt2 AS p3(b, a, c) USING (a, b) WHERE a BETWEEN 490 AND 510"
  },
  {
    "comment": "partition_join - Statement 81",
    "query": "EXPLAIN (COSTS OFF) SELECT COUNT(*) FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b) FULL JOIN prt2 p3(b,a,c) USING (a, b) FULL JOIN prt1 p4 (a,b,c) USING (a, b) WHERE a BETWEEN 490 AND 510",
    "expected": "EXPLAIN (COSTS false) SELECT COUNT(*) FROM prt1 FULL OUTER JOIN prt2 AS p2(b, a, c) USING (a, b) FULL OUTER JOIN prt2 AS p3(b, a, c) USING (a, b) FULL OUTER JOIN prt1 AS p4(a, b, c) USING (a, b) WHERE a BETWEEN 490 AND 510"
  },
  {
    "comment": "partition_join - Statement 82",
    "query": "SELECT COUNT(*) FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b) FULL JOIN prt2 p3(b,a,c) USING (a, b) FULL JOIN prt1 p4 (a,b,c) USING (a, b) WHERE a BETWEEN 490 AND 510",
    "expected": "SELECT COUNT(*) FROM prt1 FULL OUTER JOIN prt2 AS p2(b, a, c) USING (a, b) FULL OUTER JOIN prt2 AS p3(b, a, c) USING (a, b) FULL OUTER JOIN prt1 AS p4(a, b, c) USING (a, b) WHERE a BETWEEN 490 AND 510"
  },
  {
    "comment": "partition_join - Statement 83",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.phv, t2.b, t2.phv, t3.a + t3.b, t3.phv FROM ((SELECT 50 phv, * FROM prt1 WHERE prt1.b = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.a = 0) t2 ON (t1.a = t2.b)) FULL JOIN (SELECT 50 phv, * FROM prt1_e WHERE prt1_e.c = 0) t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.a = t1.phv OR t2.b = t2.phv OR (t3.a + t3.b)/2 = t3.phv ORDER BY t1.a, t2.b, t3.a + t3.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.phv, t2.b, t2.phv, t3.a + t3.b, t3.phv FROM ((SELECT 50 AS phv, * FROM prt1 WHERE prt1.b = 0) AS t1 FULL OUTER JOIN (SELECT 75 AS phv, * FROM prt2 WHERE prt2.a = 0) AS t2 ON (t1.a = t2.b)) FULL OUTER JOIN (SELECT 50 AS phv, * FROM prt1_e WHERE prt1_e.c = 0) AS t3 ON (t1.a = (t3.a + t3.b) / 2) WHERE t1.a = t1.phv OR t2.b = t2.phv OR (t3.a + t3.b) / 2 = t3.phv ORDER BY t1.a, t2.b, t3.a + t3.b"
  },
  {
    "comment": "partition_join - Statement 84",
    "query": "SELECT t1.a, t1.phv, t2.b, t2.phv, t3.a + t3.b, t3.phv FROM ((SELECT 50 phv, * FROM prt1 WHERE prt1.b = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.a = 0) t2 ON (t1.a = t2.b)) FULL JOIN (SELECT 50 phv, * FROM prt1_e WHERE prt1_e.c = 0) t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.a = t1.phv OR t2.b = t2.phv OR (t3.a + t3.b)/2 = t3.phv ORDER BY t1.a, t2.b, t3.a + t3.b",
    "expected": "SELECT t1.a, t1.phv, t2.b, t2.phv, t3.a + t3.b, t3.phv FROM ((SELECT 50 AS phv, * FROM prt1 WHERE prt1.b = 0) AS t1 FULL OUTER JOIN (SELECT 75 AS phv, * FROM prt2 WHERE prt2.a = 0) AS t2 ON (t1.a = t2.b)) FULL OUTER JOIN (SELECT 50 AS phv, * FROM prt1_e WHERE prt1_e.c = 0) AS t3 ON (t1.a = (t3.a + t3.b) / 2) WHERE t1.a = t1.phv OR t2.b = t2.phv OR (t3.a + t3.b) / 2 = t3.phv ORDER BY t1.a, t2.b, t3.a + t3.b"
  },
  {
    "comment": "partition_join - Statement 85",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1, prt1_e t2 WHERE t1.a = 0 AND t1.b = (t2.a + t2.b)/2) AND t1.b = 0 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.* FROM prt1 AS t1 WHERE t1.a IN (SELECT t1.b FROM prt2 AS t1, prt1_e AS t2 WHERE t1.a = 0 AND t1.b = (t2.a + t2.b) / 2) AND t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 86",
    "query": "SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1, prt1_e t2 WHERE t1.a = 0 AND t1.b = (t2.a + t2.b)/2) AND t1.b = 0 ORDER BY t1.a",
    "expected": "SELECT t1.* FROM prt1 AS t1 WHERE t1.a IN (SELECT t1.b FROM prt2 AS t1, prt1_e AS t2 WHERE t1.a = 0 AND t1.b = (t2.a + t2.b) / 2) AND t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 87",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.c = 0)) AND t1.b = 0 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.* FROM prt1 AS t1 WHERE t1.a IN (SELECT t1.b FROM prt2 AS t1 WHERE t1.b IN (SELECT (t1.a + t1.b) / 2 FROM prt1_e AS t1 WHERE t1.c = 0)) AND t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 88",
    "query": "SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.c = 0)) AND t1.b = 0 ORDER BY t1.a",
    "expected": "SELECT t1.* FROM prt1 AS t1 WHERE t1.a IN (SELECT t1.b FROM prt2 AS t1 WHERE t1.b IN (SELECT (t1.a + t1.b) / 2 FROM prt1_e AS t1 WHERE t1.c = 0)) AND t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 89",
    "query": "SET enable_hashjoin TO off",
    "expected": "SET enable_hashjoin = off"
  },
  {
    "comment": "partition_join - Statement 90",
    "query": "SET enable_nestloop TO off",
    "expected": "SET enable_nestloop = off"
  },
  {
    "comment": "partition_join - Statement 91",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t2.b FROM (SELECT * FROM prt1 WHERE a \u003c 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b \u003e 250) t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t2.b FROM (SELECT * FROM prt1 WHERE a \u003c 450) AS t1 LEFT OUTER JOIN (SELECT * FROM prt2 WHERE b \u003e 250) AS t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 92",
    "query": "SELECT t1.a, t2.b FROM (SELECT * FROM prt1 WHERE a \u003c 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b \u003e 250) t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t2.b FROM (SELECT * FROM prt1 WHERE a \u003c 450) AS t1 LEFT OUTER JOIN (SELECT * FROM prt2 WHERE b \u003e 250) AS t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 93",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t2.b FROM prt1 t1, prt2 t2 WHERE t1::text = t2::text AND t1.a = t2.b ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t2.b FROM prt1 AS t1, prt2 AS t2 WHERE CAST(t1 AS TEXT) = CAST(t2 AS TEXT) AND t1.a = t2.b ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 94",
    "query": "SELECT t1.a, t2.b FROM prt1 t1, prt2 t2 WHERE t1::text = t2::text AND t1.a = t2.b ORDER BY t1.a",
    "expected": "SELECT t1.a, t2.b FROM prt1 AS t1, prt2 AS t2 WHERE CAST(t1 AS TEXT) = CAST(t2 AS TEXT) AND t1.a = t2.b ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 95",
    "query": "RESET enable_nestloop"
  },
  {
    "comment": "partition_join - Statement 96",
    "query": "CREATE TABLE prt1_m (a int, b int, c int) PARTITION BY RANGE(a, ((a + b)/2))",
    "expected": "CREATE TABLE prt1_m (a INT, b INT, c INT) PARTITION BY range (a, ((a + b) / 2))"
  },
  {
    "comment": "partition_join - Statement 97",
    "query": "CREATE TABLE prt1_m_p1 PARTITION OF prt1_m FOR VALUES FROM (0, 0) TO (250, 250)"
  },
  {
    "comment": "partition_join - Statement 98",
    "query": "CREATE TABLE prt1_m_p2 PARTITION OF prt1_m FOR VALUES FROM (250, 250) TO (500, 500)"
  },
  {
    "comment": "partition_join - Statement 99",
    "query": "CREATE TABLE prt1_m_p3 PARTITION OF prt1_m FOR VALUES FROM (500, 500) TO (600, 600)"
  },
  {
    "comment": "partition_join - Statement 100",
    "query": "INSERT INTO prt1_m SELECT i, i, i % 25 FROM generate_series(0, 599, 2) i",
    "expected": "INSERT INTO prt1_m SELECT i, i, i % 25 FROM generate_series(0, 599, 2) AS i"
  },
  {
    "comment": "partition_join - Statement 101",
    "query": "ANALYZE prt1_m"
  },
  {
    "comment": "partition_join - Statement 102",
    "query": "CREATE TABLE prt2_m (a int, b int, c int) PARTITION BY RANGE(((b + a)/2), b)",
    "expected": "CREATE TABLE prt2_m (a INT, b INT, c INT) PARTITION BY range (((b + a) / 2), b)"
  },
  {
    "comment": "partition_join - Statement 103",
    "query": "CREATE TABLE prt2_m_p1 PARTITION OF prt2_m FOR VALUES FROM (0, 0) TO (250, 250)"
  },
  {
    "comment": "partition_join - Statement 104",
    "query": "CREATE TABLE prt2_m_p2 PARTITION OF prt2_m FOR VALUES FROM (250, 250) TO (500, 500)"
  },
  {
    "comment": "partition_join - Statement 105",
    "query": "CREATE TABLE prt2_m_p3 PARTITION OF prt2_m FOR VALUES FROM (500, 500) TO (600, 600)"
  },
  {
    "comment": "partition_join - Statement 106",
    "query": "INSERT INTO prt2_m SELECT i, i, i % 25 FROM generate_series(0, 599, 3) i",
    "expected": "INSERT INTO prt2_m SELECT i, i, i % 25 FROM generate_series(0, 599, 3) AS i"
  },
  {
    "comment": "partition_join - Statement 107",
    "query": "ANALYZE prt2_m"
  },
  {
    "comment": "partition_join - Statement 108",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_m WHERE prt1_m.c = 0) t1 FULL JOIN (SELECT * FROM prt2_m WHERE prt2_m.c = 0) t2 ON (t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2) ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_m WHERE prt1_m.c = 0) AS t1 FULL OUTER JOIN (SELECT * FROM prt2_m WHERE prt2_m.c = 0) AS t2 ON (t1.a = (t2.b + t2.a) / 2 AND t2.b = (t1.a + t1.b) / 2) ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 109",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_m WHERE prt1_m.c = 0) t1 FULL JOIN (SELECT * FROM prt2_m WHERE prt2_m.c = 0) t2 ON (t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2) ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_m WHERE prt1_m.c = 0) AS t1 FULL OUTER JOIN (SELECT * FROM prt2_m WHERE prt2_m.c = 0) AS t2 ON (t1.a = (t2.b + t2.a) / 2 AND t2.b = (t1.a + t1.b) / 2) ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 110",
    "query": "CREATE TABLE plt1 (a int, b int, c text) PARTITION BY LIST(c)",
    "expected": "CREATE TABLE plt1 (a INT, b INT, c TEXT) PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 111",
    "query": "CREATE TABLE plt1_p1 PARTITION OF plt1 FOR VALUES IN ('0000', '0003', '0004', '0010')"
  },
  {
    "comment": "partition_join - Statement 112",
    "query": "CREATE TABLE plt1_p2 PARTITION OF plt1 FOR VALUES IN ('0001', '0005', '0002', '0009')"
  },
  {
    "comment": "partition_join - Statement 113",
    "query": "CREATE TABLE plt1_p3 PARTITION OF plt1 FOR VALUES IN ('0006', '0007', '0008', '0011')"
  },
  {
    "comment": "partition_join - Statement 114",
    "query": "INSERT INTO plt1 SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i",
    "expected": "INSERT INTO plt1 SELECT i, i, to_char(i / 50, 'FM0000') FROM generate_series(0, 599, 2) AS i"
  },
  {
    "comment": "partition_join - Statement 115",
    "query": "ANALYZE plt1"
  },
  {
    "comment": "partition_join - Statement 116",
    "query": "CREATE TABLE plt2 (a int, b int, c text) PARTITION BY LIST(c)",
    "expected": "CREATE TABLE plt2 (a INT, b INT, c TEXT) PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 117",
    "query": "CREATE TABLE plt2_p1 PARTITION OF plt2 FOR VALUES IN ('0000', '0003', '0004', '0010')"
  },
  {
    "comment": "partition_join - Statement 118",
    "query": "CREATE TABLE plt2_p2 PARTITION OF plt2 FOR VALUES IN ('0001', '0005', '0002', '0009')"
  },
  {
    "comment": "partition_join - Statement 119",
    "query": "CREATE TABLE plt2_p3 PARTITION OF plt2 FOR VALUES IN ('0006', '0007', '0008', '0011')"
  },
  {
    "comment": "partition_join - Statement 120",
    "query": "INSERT INTO plt2 SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 3) i",
    "expected": "INSERT INTO plt2 SELECT i, i, to_char(i / 50, 'FM0000') FROM generate_series(0, 599, 3) AS i"
  },
  {
    "comment": "partition_join - Statement 121",
    "query": "ANALYZE plt2"
  },
  {
    "comment": "partition_join - Statement 122",
    "query": "CREATE TABLE plt1_e (a int, b int, c text) PARTITION BY LIST(ltrim(c, 'A'))",
    "expected": "CREATE TABLE plt1_e (a INT, b INT, c TEXT) PARTITION BY list (ltrim(c, 'A'))"
  },
  {
    "comment": "partition_join - Statement 123",
    "query": "CREATE TABLE plt1_e_p1 PARTITION OF plt1_e FOR VALUES IN ('0000', '0003', '0004', '0010')"
  },
  {
    "comment": "partition_join - Statement 124",
    "query": "CREATE TABLE plt1_e_p2 PARTITION OF plt1_e FOR VALUES IN ('0001', '0005', '0002', '0009')"
  },
  {
    "comment": "partition_join - Statement 125",
    "query": "CREATE TABLE plt1_e_p3 PARTITION OF plt1_e FOR VALUES IN ('0006', '0007', '0008', '0011')"
  },
  {
    "comment": "partition_join - Statement 126",
    "query": "INSERT INTO plt1_e SELECT i, i, 'A' || to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i",
    "expected": "INSERT INTO plt1_e SELECT i, i, 'A' || to_char(i / 50, 'FM0000') FROM generate_series(0, 599, 2) AS i"
  },
  {
    "comment": "partition_join - Statement 127",
    "query": "ANALYZE plt1_e"
  },
  {
    "comment": "partition_join - Statement 128",
    "query": "EXPLAIN (COSTS OFF) SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM plt1 t1, plt2 t2, plt1_e t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c",
    "expected": "EXPLAIN (COSTS false) SELECT AVG(t1.a), AVG(t2.b), AVG(t3.a + t3.b), t1.c, t2.c, t3.c FROM plt1 AS t1, plt2 AS t2, plt1_e AS t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c"
  },
  {
    "comment": "partition_join - Statement 129",
    "query": "SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM plt1 t1, plt2 t2, plt1_e t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c",
    "expected": "SELECT AVG(t1.a), AVG(t2.b), AVG(t3.a + t3.b), t1.c, t2.c, t3.c FROM plt1 AS t1, plt2 AS t2, plt1_e AS t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c"
  },
  {
    "comment": "partition_join - Statement 130",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a = 1 AND t1.a = 2",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 AS t1, prt2 AS t2 WHERE t1.a = t2.b AND t1.a = 1 AND t1.a = 2"
  },
  {
    "comment": "partition_join - Statement 131",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) t1 LEFT JOIN prt2 t2 ON t1.a = t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) AS t1 LEFT OUTER JOIN prt2 AS t2 ON t1.a = t2.b"
  },
  {
    "comment": "partition_join - Statement 132",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b, prt1 t3 WHERE t2.b = t3.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) AS t1 RIGHT OUTER JOIN prt2 AS t2 ON t1.a = t2.b, prt1 AS t3 WHERE t2.b = t3.a"
  },
  {
    "comment": "partition_join - Statement 133",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) t1 FULL JOIN prt2 t2 ON t1.a = t2.b WHERE t2.a = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) AS t1 FULL OUTER JOIN prt2 AS t2 ON t1.a = t2.b WHERE t2.a = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 134",
    "query": "CREATE TABLE pht1 (a int, b int, c text) PARTITION BY HASH(c)",
    "expected": "CREATE TABLE pht1 (a INT, b INT, c TEXT) PARTITION BY hash (c)"
  },
  {
    "comment": "partition_join - Statement 135",
    "query": "CREATE TABLE pht1_p1 PARTITION OF pht1 FOR VALUES WITH (MODULUS 3, REMAINDER 0)",
    "expected": "CREATE TABLE pht1_p1 PARTITION OF pht1 FOR VALUES WITH (modulus 3, remainder 0)"
  },
  {
    "comment": "partition_join - Statement 136",
    "query": "CREATE TABLE pht1_p2 PARTITION OF pht1 FOR VALUES WITH (MODULUS 3, REMAINDER 1)",
    "expected": "CREATE TABLE pht1_p2 PARTITION OF pht1 FOR VALUES WITH (modulus 3, remainder 1)"
  },
  {
    "comment": "partition_join - Statement 137",
    "query": "CREATE TABLE pht1_p3 PARTITION OF pht1 FOR VALUES WITH (MODULUS 3, REMAINDER 2)",
    "expected": "CREATE TABLE pht1_p3 PARTITION OF pht1 FOR VALUES WITH (modulus 3, remainder 2)"
  },
  {
    "comment": "partition_join - Statement 138",
    "query": "INSERT INTO pht1 SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i",
    "expected": "INSERT INTO pht1 SELECT i, i, to_char(i / 50, 'FM0000') FROM generate_series(0, 599, 2) AS i"
  },
  {
    "comment": "partition_join - Statement 139",
    "query": "ANALYZE pht1"
  },
  {
    "comment": "partition_join - Statement 140",
    "query": "CREATE TABLE pht2 (a int, b int, c text) PARTITION BY HASH(c)",
    "expected": "CREATE TABLE pht2 (a INT, b INT, c TEXT) PARTITION BY hash (c)"
  },
  {
    "comment": "partition_join - Statement 141",
    "query": "CREATE TABLE pht2_p1 PARTITION OF pht2 FOR VALUES WITH (MODULUS 3, REMAINDER 0)",
    "expected": "CREATE TABLE pht2_p1 PARTITION OF pht2 FOR VALUES WITH (modulus 3, remainder 0)"
  },
  {
    "comment": "partition_join - Statement 142",
    "query": "CREATE TABLE pht2_p2 PARTITION OF pht2 FOR VALUES WITH (MODULUS 3, REMAINDER 1)",
    "expected": "CREATE TABLE pht2_p2 PARTITION OF pht2 FOR VALUES WITH (modulus 3, remainder 1)"
  },
  {
    "comment": "partition_join - Statement 143",
    "query": "CREATE TABLE pht2_p3 PARTITION OF pht2 FOR VALUES WITH (MODULUS 3, REMAINDER 2)",
    "expected": "CREATE TABLE pht2_p3 PARTITION OF pht2 FOR VALUES WITH (modulus 3, remainder 2)"
  },
  {
    "comment": "partition_join - Statement 144",
    "query": "INSERT INTO pht2 SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 3) i",
    "expected": "INSERT INTO pht2 SELECT i, i, to_char(i / 50, 'FM0000') FROM generate_series(0, 599, 3) AS i"
  },
  {
    "comment": "partition_join - Statement 145",
    "query": "ANALYZE pht2"
  },
  {
    "comment": "partition_join - Statement 146",
    "query": "CREATE TABLE pht1_e (a int, b int, c text) PARTITION BY HASH(ltrim(c, 'A'))",
    "expected": "CREATE TABLE pht1_e (a INT, b INT, c TEXT) PARTITION BY hash (ltrim(c, 'A'))"
  },
  {
    "comment": "partition_join - Statement 147",
    "query": "CREATE TABLE pht1_e_p1 PARTITION OF pht1_e FOR VALUES WITH (MODULUS 3, REMAINDER 0)",
    "expected": "CREATE TABLE pht1_e_p1 PARTITION OF pht1_e FOR VALUES WITH (modulus 3, remainder 0)"
  },
  {
    "comment": "partition_join - Statement 148",
    "query": "CREATE TABLE pht1_e_p2 PARTITION OF pht1_e FOR VALUES WITH (MODULUS 3, REMAINDER 1)",
    "expected": "CREATE TABLE pht1_e_p2 PARTITION OF pht1_e FOR VALUES WITH (modulus 3, remainder 1)"
  },
  {
    "comment": "partition_join - Statement 149",
    "query": "CREATE TABLE pht1_e_p3 PARTITION OF pht1_e FOR VALUES WITH (MODULUS 3, REMAINDER 2)",
    "expected": "CREATE TABLE pht1_e_p3 PARTITION OF pht1_e FOR VALUES WITH (modulus 3, remainder 2)"
  },
  {
    "comment": "partition_join - Statement 150",
    "query": "INSERT INTO pht1_e SELECT i, i, 'A' || to_char(i/50, 'FM0000') FROM generate_series(0, 299, 2) i",
    "expected": "INSERT INTO pht1_e SELECT i, i, 'A' || to_char(i / 50, 'FM0000') FROM generate_series(0, 299, 2) AS i"
  },
  {
    "comment": "partition_join - Statement 151",
    "query": "ANALYZE pht1_e"
  },
  {
    "comment": "partition_join - Statement 152",
    "query": "EXPLAIN (COSTS OFF) SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM pht1 t1, pht2 t2, pht1_e t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c",
    "expected": "EXPLAIN (COSTS false) SELECT AVG(t1.a), AVG(t2.b), AVG(t3.a + t3.b), t1.c, t2.c, t3.c FROM pht1 AS t1, pht2 AS t2, pht1_e AS t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c"
  },
  {
    "comment": "partition_join - Statement 153",
    "query": "SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM pht1 t1, pht2 t2, pht1_e t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c",
    "expected": "SELECT AVG(t1.a), AVG(t2.b), AVG(t3.a + t3.b), t1.c, t2.c, t3.c FROM pht1 AS t1, pht2 AS t2, pht1_e AS t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c"
  },
  {
    "comment": "partition_join - Statement 154",
    "query": "ALTER TABLE prt1 DETACH PARTITION prt1_p3"
  },
  {
    "comment": "partition_join - Statement 155",
    "query": "ALTER TABLE prt1 ATTACH PARTITION prt1_p3 DEFAULT"
  },
  {
    "comment": "partition_join - Statement 156",
    "query": "ALTER TABLE prt2 DETACH PARTITION prt2_p3"
  },
  {
    "comment": "partition_join - Statement 157",
    "query": "ALTER TABLE prt2 ATTACH PARTITION prt2_p3 DEFAULT"
  },
  {
    "comment": "partition_join - Statement 158",
    "query": "ALTER TABLE plt1 DETACH PARTITION plt1_p3"
  },
  {
    "comment": "partition_join - Statement 159",
    "query": "ALTER TABLE plt1 ATTACH PARTITION plt1_p3 DEFAULT"
  },
  {
    "comment": "partition_join - Statement 160",
    "query": "ALTER TABLE plt2 DETACH PARTITION plt2_p3"
  },
  {
    "comment": "partition_join - Statement 161",
    "query": "ALTER TABLE plt2 ATTACH PARTITION plt2_p3 DEFAULT"
  },
  {
    "comment": "partition_join - Statement 162",
    "query": "EXPLAIN (COSTS OFF) SELECT avg(t1.a), avg(t2.b), t1.c, t2.c FROM plt1 t1 RIGHT JOIN plt2 t2 ON t1.c = t2.c WHERE t1.a % 25 = 0 GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c",
    "expected": "EXPLAIN (COSTS false) SELECT AVG(t1.a), AVG(t2.b), t1.c, t2.c FROM plt1 AS t1 RIGHT OUTER JOIN plt2 AS t2 ON t1.c = t2.c WHERE t1.a % 25 = 0 GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c"
  },
  {
    "comment": "partition_join - Statement 163",
    "query": "CREATE TABLE prt1_l (a int, b int, c varchar) PARTITION BY RANGE(a)",
    "expected": "CREATE TABLE prt1_l (a INT, b INT, c VARCHAR) PARTITION BY range (a)"
  },
  {
    "comment": "partition_join - Statement 164",
    "query": "CREATE TABLE prt1_l_p1 PARTITION OF prt1_l FOR VALUES FROM (0) TO (250)"
  },
  {
    "comment": "partition_join - Statement 165",
    "query": "CREATE TABLE prt1_l_p2 PARTITION OF prt1_l FOR VALUES FROM (250) TO (500) PARTITION BY LIST (c)",
    "expected": "CREATE TABLE prt1_l_p2 PARTITION OF prt1_l FOR VALUES FROM (250) TO (500) PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 166",
    "query": "CREATE TABLE prt1_l_p2_p1 PARTITION OF prt1_l_p2 FOR VALUES IN ('0000', '0001')"
  },
  {
    "comment": "partition_join - Statement 167",
    "query": "CREATE TABLE prt1_l_p2_p2 PARTITION OF prt1_l_p2 FOR VALUES IN ('0002', '0003')"
  },
  {
    "comment": "partition_join - Statement 168",
    "query": "CREATE TABLE prt1_l_p3 PARTITION OF prt1_l FOR VALUES FROM (500) TO (600) PARTITION BY RANGE (b)",
    "expected": "CREATE TABLE prt1_l_p3 PARTITION OF prt1_l FOR VALUES FROM (500) TO (600) PARTITION BY range (b)"
  },
  {
    "comment": "partition_join - Statement 169",
    "query": "CREATE TABLE prt1_l_p3_p1 PARTITION OF prt1_l_p3 FOR VALUES FROM (0) TO (13)"
  },
  {
    "comment": "partition_join - Statement 170",
    "query": "CREATE TABLE prt1_l_p3_p2 PARTITION OF prt1_l_p3 FOR VALUES FROM (13) TO (25)"
  },
  {
    "comment": "partition_join - Statement 171",
    "query": "INSERT INTO prt1_l SELECT i, i % 25, to_char(i % 4, 'FM0000') FROM generate_series(0, 599, 2) i",
    "expected": "INSERT INTO prt1_l SELECT i, i % 25, to_char(i % 4, 'FM0000') FROM generate_series(0, 599, 2) AS i"
  },
  {
    "comment": "partition_join - Statement 172",
    "query": "ANALYZE prt1_l"
  },
  {
    "comment": "partition_join - Statement 173",
    "query": "CREATE TABLE prt2_l (a int, b int, c varchar) PARTITION BY RANGE(b)",
    "expected": "CREATE TABLE prt2_l (a INT, b INT, c VARCHAR) PARTITION BY range (b)"
  },
  {
    "comment": "partition_join - Statement 174",
    "query": "CREATE TABLE prt2_l_p1 PARTITION OF prt2_l FOR VALUES FROM (0) TO (250)"
  },
  {
    "comment": "partition_join - Statement 175",
    "query": "CREATE TABLE prt2_l_p2 PARTITION OF prt2_l FOR VALUES FROM (250) TO (500) PARTITION BY LIST (c)",
    "expected": "CREATE TABLE prt2_l_p2 PARTITION OF prt2_l FOR VALUES FROM (250) TO (500) PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 176",
    "query": "CREATE TABLE prt2_l_p2_p1 PARTITION OF prt2_l_p2 FOR VALUES IN ('0000', '0001')"
  },
  {
    "comment": "partition_join - Statement 177",
    "query": "CREATE TABLE prt2_l_p2_p2 PARTITION OF prt2_l_p2 FOR VALUES IN ('0002', '0003')"
  },
  {
    "comment": "partition_join - Statement 178",
    "query": "CREATE TABLE prt2_l_p3 PARTITION OF prt2_l FOR VALUES FROM (500) TO (600) PARTITION BY RANGE (a)",
    "expected": "CREATE TABLE prt2_l_p3 PARTITION OF prt2_l FOR VALUES FROM (500) TO (600) PARTITION BY range (a)"
  },
  {
    "comment": "partition_join - Statement 179",
    "query": "CREATE TABLE prt2_l_p3_p1 PARTITION OF prt2_l_p3 FOR VALUES FROM (0) TO (13)"
  },
  {
    "comment": "partition_join - Statement 180",
    "query": "CREATE TABLE prt2_l_p3_p2 PARTITION OF prt2_l_p3 FOR VALUES FROM (13) TO (25)"
  },
  {
    "comment": "partition_join - Statement 181",
    "query": "INSERT INTO prt2_l SELECT i % 25, i, to_char(i % 4, 'FM0000') FROM generate_series(0, 599, 3) i",
    "expected": "INSERT INTO prt2_l SELECT i % 25, i, to_char(i % 4, 'FM0000') FROM generate_series(0, 599, 3) AS i"
  },
  {
    "comment": "partition_join - Statement 182",
    "query": "ANALYZE prt2_l"
  },
  {
    "comment": "partition_join - Statement 183",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l AS t1, prt2_l AS t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 184",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l AS t1, prt2_l AS t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 185",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 LEFT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l AS t1 LEFT OUTER JOIN prt2_l AS t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 186",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 LEFT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l AS t1 LEFT OUTER JOIN prt2_l AS t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 187",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 RIGHT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.a = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l AS t1 RIGHT OUTER JOIN prt2_l AS t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.a = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 188",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 RIGHT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.a = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l AS t1 RIGHT OUTER JOIN prt2_l AS t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.a = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 189",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE prt1_l.b = 0) t1 FULL JOIN (SELECT * FROM prt2_l WHERE prt2_l.a = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE prt1_l.b = 0) AS t1 FULL OUTER JOIN (SELECT * FROM prt2_l WHERE prt2_l.a = 0) AS t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 190",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE prt1_l.b = 0) t1 FULL JOIN (SELECT * FROM prt2_l WHERE prt2_l.a = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE prt1_l.b = 0) AS t1 FULL OUTER JOIN (SELECT * FROM prt2_l WHERE prt2_l.a = 0) AS t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 191",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM prt1_l t1 LEFT JOIN LATERAL (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.b AS t3b, least(t1.a,t2.a,t3.b) FROM prt1_l t2 JOIN prt2_l t3 ON (t2.a = t3.b AND t2.c = t3.c)) ss ON t1.a = ss.t2a AND t1.c = ss.t2c WHERE t1.b = 0 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM prt1_l AS t1 LEFT OUTER JOIN LATERAL (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.b AS t3b, LEAST(t1.a, t2.a, t3.b) FROM prt1_l AS t2 INNER JOIN prt2_l AS t3 ON (t2.a = t3.b AND t2.c = t3.c)) AS ss ON t1.a = ss.t2a AND t1.c = ss.t2c WHERE t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 192",
    "query": "SELECT * FROM prt1_l t1 LEFT JOIN LATERAL (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.b AS t3b, least(t1.a,t2.a,t3.b) FROM prt1_l t2 JOIN prt2_l t3 ON (t2.a = t3.b AND t2.c = t3.c)) ss ON t1.a = ss.t2a AND t1.c = ss.t2c WHERE t1.b = 0 ORDER BY t1.a",
    "expected": "SELECT * FROM prt1_l AS t1 LEFT OUTER JOIN LATERAL (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.b AS t3b, LEAST(t1.a, t2.a, t3.b) FROM prt1_l AS t2 INNER JOIN prt2_l AS t3 ON (t2.a = t3.b AND t2.c = t3.c)) AS ss ON t1.a = ss.t2a AND t1.c = ss.t2c WHERE t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 193",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM prt1_l t1 JOIN LATERAL (SELECT * FROM prt1_l t2 TABLESAMPLE SYSTEM (t1.a) REPEATABLE(t1.b)) s ON t1.a = s.a AND t1.b = s.b AND t1.c = s.c",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM prt1_l AS t1 INNER JOIN LATERAL (SELECT * FROM prt1_l AS t2 TABLESAMPLE system (t1.a) REPEATABLE (t1.b)) AS s ON t1.a = s.a AND t1.b = s.b AND t1.c = s.c"
  },
  {
    "comment": "partition_join - Statement 194",
    "query": "EXPLAIN (COSTS OFF) SELECT COUNT(*) FROM prt1_l t1 LEFT JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2_l t2) s ON t1.a = s.b AND t1.b = s.a AND t1.c = s.c WHERE s.t1b = s.a",
    "expected": "EXPLAIN (COSTS false) SELECT COUNT(*) FROM prt1_l AS t1 LEFT OUTER JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2_l AS t2) AS s ON t1.a = s.b AND t1.b = s.a AND t1.c = s.c WHERE s.t1b = s.a"
  },
  {
    "comment": "partition_join - Statement 195",
    "query": "SELECT COUNT(*) FROM prt1_l t1 LEFT JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2_l t2) s ON t1.a = s.b AND t1.b = s.a AND t1.c = s.c WHERE s.t1b = s.a",
    "expected": "SELECT COUNT(*) FROM prt1_l AS t1 LEFT OUTER JOIN LATERAL (SELECT t1.b AS t1b, t2.* FROM prt2_l AS t2) AS s ON t1.a = s.b AND t1.b = s.a AND t1.c = s.c WHERE s.t1b = s.a"
  },
  {
    "comment": "partition_join - Statement 196",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a = 1 AND a = 2) t1 RIGHT JOIN prt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a = 1 AND a = 2) AS t1 RIGHT OUTER JOIN prt2_l AS t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c"
  },
  {
    "comment": "partition_join - Statement 197",
    "query": "EXPLAIN (COSTS OFF) DELETE FROM prt1_l WHERE EXISTS ( SELECT 1 FROM int4_tbl, LATERAL (SELECT int4_tbl.f1 FROM int8_tbl LIMIT 2) ss WHERE prt1_l.c IS NULL)",
    "expected": "EXPLAIN (COSTS false) DELETE FROM prt1_l WHERE EXISTS (SELECT 1 FROM int4_tbl, LATERAL (SELECT int4_tbl.f1 FROM int8_tbl LIMIT 2) AS ss WHERE prt1_l.c IS NULL)"
  },
  {
    "comment": "partition_join - Statement 198",
    "query": "CREATE TABLE prt1_n (a int, b int, c varchar) PARTITION BY RANGE(c)",
    "expected": "CREATE TABLE prt1_n (a INT, b INT, c VARCHAR) PARTITION BY range (c)"
  },
  {
    "comment": "partition_join - Statement 199",
    "query": "CREATE TABLE prt1_n_p1 PARTITION OF prt1_n FOR VALUES FROM ('0000') TO ('0250')"
  },
  {
    "comment": "partition_join - Statement 200",
    "query": "CREATE TABLE prt1_n_p2 PARTITION OF prt1_n FOR VALUES FROM ('0250') TO ('0500')"
  },
  {
    "comment": "partition_join - Statement 201",
    "query": "INSERT INTO prt1_n SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 499, 2) i",
    "expected": "INSERT INTO prt1_n SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 499, 2) AS i"
  },
  {
    "comment": "partition_join - Statement 202",
    "query": "ANALYZE prt1_n"
  },
  {
    "comment": "partition_join - Statement 203",
    "query": "CREATE TABLE prt2_n (a int, b int, c text) PARTITION BY LIST(c)",
    "expected": "CREATE TABLE prt2_n (a INT, b INT, c TEXT) PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 204",
    "query": "CREATE TABLE prt2_n_p1 PARTITION OF prt2_n FOR VALUES IN ('0000', '0003', '0004', '0010', '0006', '0007')"
  },
  {
    "comment": "partition_join - Statement 205",
    "query": "CREATE TABLE prt2_n_p2 PARTITION OF prt2_n FOR VALUES IN ('0001', '0005', '0002', '0009', '0008', '0011')"
  },
  {
    "comment": "partition_join - Statement 206",
    "query": "INSERT INTO prt2_n SELECT i, i, to_char(i/50, 'FM0000') FROM generate_series(0, 599, 2) i",
    "expected": "INSERT INTO prt2_n SELECT i, i, to_char(i / 50, 'FM0000') FROM generate_series(0, 599, 2) AS i"
  },
  {
    "comment": "partition_join - Statement 207",
    "query": "ANALYZE prt2_n"
  },
  {
    "comment": "partition_join - Statement 208",
    "query": "CREATE TABLE prt3_n (a int, b int, c text) PARTITION BY LIST(c)",
    "expected": "CREATE TABLE prt3_n (a INT, b INT, c TEXT) PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 209",
    "query": "CREATE TABLE prt3_n_p1 PARTITION OF prt3_n FOR VALUES IN ('0000', '0004', '0006', '0007')"
  },
  {
    "comment": "partition_join - Statement 210",
    "query": "CREATE TABLE prt3_n_p2 PARTITION OF prt3_n FOR VALUES IN ('0001', '0002', '0008', '0010')"
  },
  {
    "comment": "partition_join - Statement 211",
    "query": "CREATE TABLE prt3_n_p3 PARTITION OF prt3_n FOR VALUES IN ('0003', '0005', '0009', '0011')"
  },
  {
    "comment": "partition_join - Statement 212",
    "query": "ANALYZE prt3_n"
  },
  {
    "comment": "partition_join - Statement 213",
    "query": "CREATE TABLE prt4_n (a int, b int, c text) PARTITION BY RANGE(a)",
    "expected": "CREATE TABLE prt4_n (a INT, b INT, c TEXT) PARTITION BY range (a)"
  },
  {
    "comment": "partition_join - Statement 214",
    "query": "CREATE TABLE prt4_n_p1 PARTITION OF prt4_n FOR VALUES FROM (0) TO (300)"
  },
  {
    "comment": "partition_join - Statement 215",
    "query": "CREATE TABLE prt4_n_p2 PARTITION OF prt4_n FOR VALUES FROM (300) TO (500)"
  },
  {
    "comment": "partition_join - Statement 216",
    "query": "CREATE TABLE prt4_n_p3 PARTITION OF prt4_n FOR VALUES FROM (500) TO (600)"
  },
  {
    "comment": "partition_join - Statement 217",
    "query": "INSERT INTO prt4_n SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 2) i",
    "expected": "INSERT INTO prt4_n SELECT i, i, to_char(i, 'FM0000') FROM generate_series(0, 599, 2) AS i"
  },
  {
    "comment": "partition_join - Statement 218",
    "query": "ANALYZE prt4_n"
  },
  {
    "comment": "partition_join - Statement 219",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt4_n t2 WHERE t1.a = t2.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 AS t1, prt4_n AS t2 WHERE t1.a = t2.a"
  },
  {
    "comment": "partition_join - Statement 220",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt4_n t2, prt2 t3 WHERE t1.a = t2.a and t1.a = t3.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 AS t1, prt4_n AS t2, prt2 AS t3 WHERE t1.a = t2.a AND t1.a = t3.b"
  },
  {
    "comment": "partition_join - Statement 221",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 LEFT JOIN prt2 t2 ON (t1.a \u003c t2.b)",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 AS t1 LEFT OUTER JOIN prt2 AS t2 ON (t1.a \u003c t2.b)"
  },
  {
    "comment": "partition_join - Statement 222",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1, prt2_m t2 WHERE t1.a = (t2.b + t2.a)/2",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m AS t1, prt2_m AS t2 WHERE t1.a = (t2.b + t2.a) / 2"
  },
  {
    "comment": "partition_join - Statement 223",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 LEFT JOIN prt2_m t2 ON t1.a = t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m AS t1 LEFT OUTER JOIN prt2_m AS t2 ON t1.a = t2.b"
  },
  {
    "comment": "partition_join - Statement 224",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 LEFT JOIN prt2_m t2 ON t1.c = t2.c",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m AS t1 LEFT OUTER JOIN prt2_m AS t2 ON t1.c = t2.c"
  },
  {
    "comment": "partition_join - Statement 225",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n t1 LEFT JOIN prt2_n t2 ON (t1.c = t2.c)",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n AS t1 LEFT OUTER JOIN prt2_n AS t2 ON (t1.c = t2.c)"
  },
  {
    "comment": "partition_join - Statement 226",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n t1 JOIN prt2_n t2 ON (t1.c = t2.c) JOIN plt1 t3 ON (t1.c = t3.c)",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n AS t1 INNER JOIN prt2_n AS t2 ON (t1.c = t2.c) INNER JOIN plt1 AS t3 ON (t1.c = t3.c)"
  },
  {
    "comment": "partition_join - Statement 227",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n t1 FULL JOIN prt1 t2 ON (t1.c = t2.c)",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n AS t1 FULL OUTER JOIN prt1 AS t2 ON (t1.c = t2.c)"
  },
  {
    "comment": "partition_join - Statement 228",
    "query": "create temp table prtx1 (a integer, b integer, c integer) partition by range (a)",
    "expected": "CREATE TEMPORARY TABLE prtx1 (a INT, b INT, c INT) PARTITION BY range (a)"
  },
  {
    "comment": "partition_join - Statement 229",
    "query": "create temp table prtx1_1 partition of prtx1 for values from (1) to (11)",
    "expected": "CREATE TEMPORARY TABLE prtx1_1 PARTITION OF prtx1 FOR VALUES FROM (1) TO (11)"
  },
  {
    "comment": "partition_join - Statement 230",
    "query": "create temp table prtx1_2 partition of prtx1 for values from (11) to (21)",
    "expected": "CREATE TEMPORARY TABLE prtx1_2 PARTITION OF prtx1 FOR VALUES FROM (11) TO (21)"
  },
  {
    "comment": "partition_join - Statement 231",
    "query": "create temp table prtx1_3 partition of prtx1 for values from (21) to (31)",
    "expected": "CREATE TEMPORARY TABLE prtx1_3 PARTITION OF prtx1 FOR VALUES FROM (21) TO (31)"
  },
  {
    "comment": "partition_join - Statement 232",
    "query": "create temp table prtx2 (a integer, b integer, c integer) partition by range (a)",
    "expected": "CREATE TEMPORARY TABLE prtx2 (a INT, b INT, c INT) PARTITION BY range (a)"
  },
  {
    "comment": "partition_join - Statement 233",
    "query": "create temp table prtx2_1 partition of prtx2 for values from (1) to (11)",
    "expected": "CREATE TEMPORARY TABLE prtx2_1 PARTITION OF prtx2 FOR VALUES FROM (1) TO (11)"
  },
  {
    "comment": "partition_join - Statement 234",
    "query": "create temp table prtx2_2 partition of prtx2 for values from (11) to (21)",
    "expected": "CREATE TEMPORARY TABLE prtx2_2 PARTITION OF prtx2 FOR VALUES FROM (11) TO (21)"
  },
  {
    "comment": "partition_join - Statement 235",
    "query": "create temp table prtx2_3 partition of prtx2 for values from (21) to (31)",
    "expected": "CREATE TEMPORARY TABLE prtx2_3 PARTITION OF prtx2 FOR VALUES FROM (21) TO (31)"
  },
  {
    "comment": "partition_join - Statement 236",
    "query": "insert into prtx1 select 1 + i%30, i, i from generate_series(1,1000) i",
    "expected": "INSERT INTO prtx1 SELECT 1 + i % 30, i, i FROM generate_series(1, 1000) AS i"
  },
  {
    "comment": "partition_join - Statement 237",
    "query": "insert into prtx2 select 1 + i%30, i, i from generate_series(1,500) i, generate_series(1,10) j",
    "expected": "INSERT INTO prtx2 SELECT 1 + i % 30, i, i FROM generate_series(1, 500) AS i, generate_series(1, 10) AS j"
  },
  {
    "comment": "partition_join - Statement 238",
    "query": "create index on prtx2 (b)",
    "expected": "CREATE INDEX ON prtx2 USING btree ( b )"
  },
  {
    "comment": "partition_join - Statement 239",
    "query": "create index on prtx2 (c)",
    "expected": "CREATE INDEX ON prtx2 USING btree ( c )"
  },
  {
    "comment": "partition_join - Statement 240",
    "query": "analyze prtx1",
    "expected": "ANALYZE prtx1"
  },
  {
    "comment": "partition_join - Statement 241",
    "query": "analyze prtx2",
    "expected": "ANALYZE prtx2"
  },
  {
    "comment": "partition_join - Statement 242",
    "query": "explain (costs off) select * from prtx1 where not exists (select 1 from prtx2 where prtx2.a=prtx1.a and prtx2.b=prtx1.b and prtx2.c=123) and a\u003c20 and c=120",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM prtx1 WHERE NOT EXISTS (SELECT 1 FROM prtx2 WHERE prtx2.a = prtx1.a AND prtx2.b = prtx1.b AND prtx2.c = 123) AND a \u003c 20 AND c = 120"
  },
  {
    "comment": "partition_join - Statement 243",
    "query": "select * from prtx1 where not exists (select 1 from prtx2 where prtx2.a=prtx1.a and prtx2.b=prtx1.b and prtx2.c=123) and a\u003c20 and c=120",
    "expected": "SELECT * FROM prtx1 WHERE NOT EXISTS (SELECT 1 FROM prtx2 WHERE prtx2.a = prtx1.a AND prtx2.b = prtx1.b AND prtx2.c = 123) AND a \u003c 20 AND c = 120"
  },
  {
    "comment": "partition_join - Statement 244",
    "query": "explain (costs off) select * from prtx1 where not exists (select 1 from prtx2 where prtx2.a=prtx1.a and (prtx2.b=prtx1.b+1 or prtx2.c=99)) and a\u003c20 and c=91",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM prtx1 WHERE NOT EXISTS (SELECT 1 FROM prtx2 WHERE prtx2.a = prtx1.a AND (prtx2.b = prtx1.b + 1 OR prtx2.c = 99)) AND a \u003c 20 AND c = 91"
  },
  {
    "comment": "partition_join - Statement 245",
    "query": "select * from prtx1 where not exists (select 1 from prtx2 where prtx2.a=prtx1.a and (prtx2.b=prtx1.b+1 or prtx2.c=99)) and a\u003c20 and c=91",
    "expected": "SELECT * FROM prtx1 WHERE NOT EXISTS (SELECT 1 FROM prtx2 WHERE prtx2.a = prtx1.a AND (prtx2.b = prtx1.b + 1 OR prtx2.c = 99)) AND a \u003c 20 AND c = 91"
  },
  {
    "comment": "partition_join - Statement 246",
    "query": "CREATE TABLE prt1_adv (a int, b int, c varchar) PARTITION BY RANGE (a)",
    "expected": "CREATE TABLE prt1_adv (a INT, b INT, c VARCHAR) PARTITION BY range (a)"
  },
  {
    "comment": "partition_join - Statement 247",
    "query": "CREATE TABLE prt1_adv_p1 PARTITION OF prt1_adv FOR VALUES FROM (100) TO (200)"
  },
  {
    "comment": "partition_join - Statement 248",
    "query": "CREATE TABLE prt1_adv_p2 PARTITION OF prt1_adv FOR VALUES FROM (200) TO (300)"
  },
  {
    "comment": "partition_join - Statement 249",
    "query": "CREATE TABLE prt1_adv_p3 PARTITION OF prt1_adv FOR VALUES FROM (300) TO (400)"
  },
  {
    "comment": "partition_join - Statement 250",
    "query": "CREATE INDEX prt1_adv_a_idx ON prt1_adv (a)",
    "expected": "CREATE INDEX prt1_adv_a_idx ON prt1_adv USING btree ( a )"
  },
  {
    "comment": "partition_join - Statement 251",
    "query": "INSERT INTO prt1_adv SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(100, 399) i",
    "expected": "INSERT INTO prt1_adv SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(100, 399) AS i"
  },
  {
    "comment": "partition_join - Statement 252",
    "query": "ANALYZE prt1_adv"
  },
  {
    "comment": "partition_join - Statement 253",
    "query": "CREATE TABLE prt2_adv (a int, b int, c varchar) PARTITION BY RANGE (b)",
    "expected": "CREATE TABLE prt2_adv (a INT, b INT, c VARCHAR) PARTITION BY range (b)"
  },
  {
    "comment": "partition_join - Statement 254",
    "query": "CREATE TABLE prt2_adv_p1 PARTITION OF prt2_adv FOR VALUES FROM (100) TO (150)"
  },
  {
    "comment": "partition_join - Statement 255",
    "query": "CREATE TABLE prt2_adv_p2 PARTITION OF prt2_adv FOR VALUES FROM (200) TO (300)"
  },
  {
    "comment": "partition_join - Statement 256",
    "query": "CREATE TABLE prt2_adv_p3 PARTITION OF prt2_adv FOR VALUES FROM (350) TO (500)"
  },
  {
    "comment": "partition_join - Statement 257",
    "query": "CREATE INDEX prt2_adv_b_idx ON prt2_adv (b)",
    "expected": "CREATE INDEX prt2_adv_b_idx ON prt2_adv USING btree ( b )"
  },
  {
    "comment": "partition_join - Statement 258",
    "query": "INSERT INTO prt2_adv_p1 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(100, 149) i",
    "expected": "INSERT INTO prt2_adv_p1 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(100, 149) AS i"
  },
  {
    "comment": "partition_join - Statement 259",
    "query": "INSERT INTO prt2_adv_p2 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(200, 299) i",
    "expected": "INSERT INTO prt2_adv_p2 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(200, 299) AS i"
  },
  {
    "comment": "partition_join - Statement 260",
    "query": "INSERT INTO prt2_adv_p3 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(350, 499) i",
    "expected": "INSERT INTO prt2_adv_p3 SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(350, 499) AS i"
  },
  {
    "comment": "partition_join - Statement 261",
    "query": "ANALYZE prt2_adv"
  },
  {
    "comment": "partition_join - Statement 262",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv AS t1 INNER JOIN prt2_adv AS t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 263",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv AS t1 INNER JOIN prt2_adv AS t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 264",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.* FROM prt1_adv t1 WHERE EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.* FROM prt1_adv AS t1 WHERE EXISTS (SELECT 1 FROM prt2_adv AS t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 265",
    "query": "SELECT t1.* FROM prt1_adv t1 WHERE EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a",
    "expected": "SELECT t1.* FROM prt1_adv AS t1 WHERE EXISTS (SELECT 1 FROM prt2_adv AS t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 266",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv AS t1 LEFT OUTER JOIN prt2_adv AS t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 267",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv AS t1 LEFT OUTER JOIN prt2_adv AS t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 268",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.* FROM prt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.* FROM prt1_adv AS t1 WHERE NOT EXISTS (SELECT 1 FROM prt2_adv AS t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 269",
    "query": "SELECT t1.* FROM prt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a",
    "expected": "SELECT t1.* FROM prt1_adv AS t1 WHERE NOT EXISTS (SELECT 1 FROM prt2_adv AS t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 270",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 175 phv, * FROM prt1_adv WHERE prt1_adv.b = 0) t1 FULL JOIN (SELECT 425 phv, * FROM prt2_adv WHERE prt2_adv.a = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 175 AS phv, * FROM prt1_adv WHERE prt1_adv.b = 0) AS t1 FULL OUTER JOIN (SELECT 425 AS phv, * FROM prt2_adv WHERE prt2_adv.a = 0) AS t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 271",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 175 phv, * FROM prt1_adv WHERE prt1_adv.b = 0) t1 FULL JOIN (SELECT 425 phv, * FROM prt2_adv WHERE prt2_adv.a = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 175 AS phv, * FROM prt1_adv WHERE prt1_adv.b = 0) AS t1 FULL OUTER JOIN (SELECT 425 AS phv, * FROM prt2_adv WHERE prt2_adv.a = 0) AS t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 272",
    "query": "CREATE TABLE prt2_adv_extra PARTITION OF prt2_adv FOR VALUES FROM (500) TO (MAXVALUE)",
    "expected": "CREATE TABLE prt2_adv_extra PARTITION OF prt2_adv FOR VALUES FROM (500) TO (maxvalue)"
  },
  {
    "comment": "partition_join - Statement 273",
    "query": "INSERT INTO prt2_adv SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(500, 599) i",
    "expected": "INSERT INTO prt2_adv SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(500, 599) AS i"
  },
  {
    "comment": "partition_join - Statement 274",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.b, t1.c, t2.a, t2.c FROM prt2_adv t1 LEFT JOIN prt1_adv t2 ON (t1.b = t2.a) WHERE t1.a = 0 ORDER BY t1.b, t2.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.b, t1.c, t2.a, t2.c FROM prt2_adv AS t1 LEFT OUTER JOIN prt1_adv AS t2 ON (t1.b = t2.a) WHERE t1.a = 0 ORDER BY t1.b, t2.a"
  },
  {
    "comment": "partition_join - Statement 275",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.* FROM prt2_adv t1 WHERE NOT EXISTS (SELECT 1 FROM prt1_adv t2 WHERE t1.b = t2.a) AND t1.a = 0 ORDER BY t1.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.* FROM prt2_adv AS t1 WHERE NOT EXISTS (SELECT 1 FROM prt1_adv AS t2 WHERE t1.b = t2.a) AND t1.a = 0 ORDER BY t1.b"
  },
  {
    "comment": "partition_join - Statement 276",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.b, t1.c, t2.a, t2.c, t3.a, t3.c FROM prt2_adv t1 LEFT JOIN prt1_adv t2 ON (t1.b = t2.a) INNER JOIN prt1_adv t3 ON (t1.b = t3.a) WHERE t1.a = 0 ORDER BY t1.b, t2.a, t3.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.b, t1.c, t2.a, t2.c, t3.a, t3.c FROM prt2_adv AS t1 LEFT OUTER JOIN prt1_adv AS t2 ON (t1.b = t2.a) INNER JOIN prt1_adv AS t3 ON (t1.b = t3.a) WHERE t1.a = 0 ORDER BY t1.b, t2.a, t3.a"
  },
  {
    "comment": "partition_join - Statement 277",
    "query": "SELECT t1.b, t1.c, t2.a, t2.c, t3.a, t3.c FROM prt2_adv t1 LEFT JOIN prt1_adv t2 ON (t1.b = t2.a) INNER JOIN prt1_adv t3 ON (t1.b = t3.a) WHERE t1.a = 0 ORDER BY t1.b, t2.a, t3.a",
    "expected": "SELECT t1.b, t1.c, t2.a, t2.c, t3.a, t3.c FROM prt2_adv AS t1 LEFT OUTER JOIN prt1_adv AS t2 ON (t1.b = t2.a) INNER JOIN prt1_adv AS t3 ON (t1.b = t3.a) WHERE t1.a = 0 ORDER BY t1.b, t2.a, t3.a"
  },
  {
    "comment": "partition_join - Statement 278",
    "query": "DROP TABLE prt2_adv_extra"
  },
  {
    "comment": "partition_join - Statement 279",
    "query": "ALTER TABLE prt2_adv DETACH PARTITION prt2_adv_p3"
  },
  {
    "comment": "partition_join - Statement 280",
    "query": "CREATE TABLE prt2_adv_p3_1 PARTITION OF prt2_adv FOR VALUES FROM (350) TO (375)"
  },
  {
    "comment": "partition_join - Statement 281",
    "query": "CREATE TABLE prt2_adv_p3_2 PARTITION OF prt2_adv FOR VALUES FROM (375) TO (500)"
  },
  {
    "comment": "partition_join - Statement 282",
    "query": "INSERT INTO prt2_adv SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(350, 499) i",
    "expected": "INSERT INTO prt2_adv SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(350, 499) AS i"
  },
  {
    "comment": "partition_join - Statement 283",
    "query": "DROP TABLE prt2_adv_p3_1"
  },
  {
    "comment": "partition_join - Statement 284",
    "query": "DROP TABLE prt2_adv_p3_2"
  },
  {
    "comment": "partition_join - Statement 285",
    "query": "ALTER TABLE prt1_adv DETACH PARTITION prt1_adv_p1"
  },
  {
    "comment": "partition_join - Statement 286",
    "query": "ALTER TABLE prt1_adv ATTACH PARTITION prt1_adv_p1 DEFAULT"
  },
  {
    "comment": "partition_join - Statement 287",
    "query": "ALTER TABLE prt1_adv DETACH PARTITION prt1_adv_p3"
  },
  {
    "comment": "partition_join - Statement 288",
    "query": "ALTER TABLE prt1_adv ATTACH PARTITION prt1_adv_p3 FOR VALUES FROM (300) TO (400)"
  },
  {
    "comment": "partition_join - Statement 289",
    "query": "ALTER TABLE prt2_adv ATTACH PARTITION prt2_adv_p3 FOR VALUES FROM (350) TO (500)"
  },
  {
    "comment": "partition_join - Statement 290",
    "query": "ALTER TABLE prt2_adv ATTACH PARTITION prt2_adv_p3 DEFAULT"
  },
  {
    "comment": "partition_join - Statement 291",
    "query": "DROP TABLE prt1_adv_p3"
  },
  {
    "comment": "partition_join - Statement 292",
    "query": "DROP TABLE prt2_adv_p3"
  },
  {
    "comment": "partition_join - Statement 293",
    "query": "CREATE TABLE prt3_adv (a int, b int, c varchar) PARTITION BY RANGE (a)",
    "expected": "CREATE TABLE prt3_adv (a INT, b INT, c VARCHAR) PARTITION BY range (a)"
  },
  {
    "comment": "partition_join - Statement 294",
    "query": "CREATE TABLE prt3_adv_p1 PARTITION OF prt3_adv FOR VALUES FROM (200) TO (300)"
  },
  {
    "comment": "partition_join - Statement 295",
    "query": "CREATE TABLE prt3_adv_p2 PARTITION OF prt3_adv FOR VALUES FROM (300) TO (400)"
  },
  {
    "comment": "partition_join - Statement 296",
    "query": "CREATE INDEX prt3_adv_a_idx ON prt3_adv (a)",
    "expected": "CREATE INDEX prt3_adv_a_idx ON prt3_adv USING btree ( a )"
  },
  {
    "comment": "partition_join - Statement 297",
    "query": "INSERT INTO prt3_adv SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(200, 399) i",
    "expected": "INSERT INTO prt3_adv SELECT i, i % 25, to_char(i, 'FM0000') FROM generate_series(200, 399) AS i"
  },
  {
    "comment": "partition_join - Statement 298",
    "query": "ANALYZE prt3_adv"
  },
  {
    "comment": "partition_join - Statement 299",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c, t3.a, t3.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) LEFT JOIN prt3_adv t3 ON (t1.a = t3.a) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c, t3.a, t3.c FROM prt1_adv AS t1 LEFT OUTER JOIN prt2_adv AS t2 ON (t1.a = t2.b) LEFT OUTER JOIN prt3_adv AS t3 ON (t1.a = t3.a) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a"
  },
  {
    "comment": "partition_join - Statement 300",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c, t3.a, t3.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) LEFT JOIN prt3_adv t3 ON (t1.a = t3.a) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c, t3.a, t3.c FROM prt1_adv AS t1 LEFT OUTER JOIN prt2_adv AS t2 ON (t1.a = t2.b) LEFT OUTER JOIN prt3_adv AS t3 ON (t1.a = t3.a) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a"
  },
  {
    "comment": "partition_join - Statement 301",
    "query": "DROP TABLE prt1_adv"
  },
  {
    "comment": "partition_join - Statement 302",
    "query": "DROP TABLE prt2_adv"
  },
  {
    "comment": "partition_join - Statement 303",
    "query": "DROP TABLE prt3_adv"
  },
  {
    "comment": "partition_join - Statement 304",
    "query": "CREATE TABLE prt2_adv_p1 PARTITION OF prt2_adv FOR VALUES FROM (100) TO (200)"
  },
  {
    "comment": "partition_join - Statement 305",
    "query": "CREATE TABLE prt2_adv_p2 PARTITION OF prt2_adv FOR VALUES FROM (200) TO (400)"
  },
  {
    "comment": "partition_join - Statement 306",
    "query": "INSERT INTO prt2_adv SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(100, 399) i",
    "expected": "INSERT INTO prt2_adv SELECT i % 25, i, to_char(i, 'FM0000') FROM generate_series(100, 399) AS i"
  },
  {
    "comment": "partition_join - Statement 307",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.a \u003c 300 AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv AS t1 INNER JOIN prt2_adv AS t2 ON (t1.a = t2.b) WHERE t1.a \u003c 300 AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 308",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.a \u003c 300 AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv AS t1 INNER JOIN prt2_adv AS t2 ON (t1.a = t2.b) WHERE t1.a \u003c 300 AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 309",
    "query": "CREATE TABLE prt1_adv_default PARTITION OF prt1_adv DEFAULT"
  },
  {
    "comment": "partition_join - Statement 310",
    "query": "CREATE TABLE prt2_adv_default PARTITION OF prt2_adv DEFAULT"
  },
  {
    "comment": "partition_join - Statement 311",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.a \u003e= 100 AND t1.a \u003c 300 AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv AS t1 INNER JOIN prt2_adv AS t2 ON (t1.a = t2.b) WHERE t1.a \u003e= 100 AND t1.a \u003c 300 AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 312",
    "query": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.a \u003e= 100 AND t1.a \u003c 300 AND t1.b = 0 ORDER BY t1.a, t2.b",
    "expected": "SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv AS t1 INNER JOIN prt2_adv AS t2 ON (t1.a = t2.b) WHERE t1.a \u003e= 100 AND t1.a \u003c 300 AND t1.b = 0 ORDER BY t1.a, t2.b"
  },
  {
    "comment": "partition_join - Statement 313",
    "query": "CREATE TABLE plt1_adv (a int, b int, c text) PARTITION BY LIST (c)",
    "expected": "CREATE TABLE plt1_adv (a INT, b INT, c TEXT) PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 314",
    "query": "CREATE TABLE plt1_adv_p1 PARTITION OF plt1_adv FOR VALUES IN ('0001', '0003')"
  },
  {
    "comment": "partition_join - Statement 315",
    "query": "CREATE TABLE plt1_adv_p2 PARTITION OF plt1_adv FOR VALUES IN ('0004', '0006')"
  },
  {
    "comment": "partition_join - Statement 316",
    "query": "CREATE TABLE plt1_adv_p3 PARTITION OF plt1_adv FOR VALUES IN ('0008', '0009')"
  },
  {
    "comment": "partition_join - Statement 317",
    "query": "INSERT INTO plt1_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (1, 3, 4, 6, 8, 9)",
    "expected": "INSERT INTO plt1_adv (SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) AS i WHERE i % 10 IN (1, 3, 4, 6, 8, 9))"
  },
  {
    "comment": "partition_join - Statement 318",
    "query": "ANALYZE plt1_adv"
  },
  {
    "comment": "partition_join - Statement 319",
    "query": "CREATE TABLE plt2_adv (a int, b int, c text) PARTITION BY LIST (c)",
    "expected": "CREATE TABLE plt2_adv (a INT, b INT, c TEXT) PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 320",
    "query": "CREATE TABLE plt2_adv_p1 PARTITION OF plt2_adv FOR VALUES IN ('0002', '0003')"
  },
  {
    "comment": "partition_join - Statement 321",
    "query": "CREATE TABLE plt2_adv_p2 PARTITION OF plt2_adv FOR VALUES IN ('0004', '0006')"
  },
  {
    "comment": "partition_join - Statement 322",
    "query": "CREATE TABLE plt2_adv_p3 PARTITION OF plt2_adv FOR VALUES IN ('0007', '0009')"
  },
  {
    "comment": "partition_join - Statement 323",
    "query": "INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",
    "expected": "INSERT INTO plt2_adv (SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) AS i WHERE i % 10 IN (2, 3, 4, 6, 7, 9))"
  },
  {
    "comment": "partition_join - Statement 324",
    "query": "ANALYZE plt2_adv"
  },
  {
    "comment": "partition_join - Statement 325",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b \u003c 10 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv AS t1 INNER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 326",
    "query": "SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b \u003c 10 ORDER BY t1.a",
    "expected": "SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv AS t1 INNER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 327",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.* FROM plt1_adv t1 WHERE EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b \u003c 10 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.* FROM plt1_adv AS t1 WHERE EXISTS (SELECT 1 FROM plt2_adv AS t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 328",
    "query": "SELECT t1.* FROM plt1_adv t1 WHERE EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b \u003c 10 ORDER BY t1.a",
    "expected": "SELECT t1.* FROM plt1_adv AS t1 WHERE EXISTS (SELECT 1 FROM plt2_adv AS t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 329",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b \u003c 10 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv AS t1 LEFT OUTER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 330",
    "query": "SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b \u003c 10 ORDER BY t1.a",
    "expected": "SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv AS t1 LEFT OUTER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 331",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.* FROM plt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b \u003c 10 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.* FROM plt1_adv AS t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv AS t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 332",
    "query": "SELECT t1.* FROM plt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b \u003c 10 ORDER BY t1.a",
    "expected": "SELECT t1.* FROM plt1_adv AS t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv AS t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 333",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) \u003c 10 AND coalesce(t2.b, 0) \u003c 10 ORDER BY t1.a, t2.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv AS t1 FULL OUTER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE COALESCE(t1.b, 0) \u003c 10 AND COALESCE(t2.b, 0) \u003c 10 ORDER BY t1.a, t2.a"
  },
  {
    "comment": "partition_join - Statement 334",
    "query": "SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) \u003c 10 AND coalesce(t2.b, 0) \u003c 10 ORDER BY t1.a, t2.a",
    "expected": "SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv AS t1 FULL OUTER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE COALESCE(t1.b, 0) \u003c 10 AND COALESCE(t2.b, 0) \u003c 10 ORDER BY t1.a, t2.a"
  },
  {
    "comment": "partition_join - Statement 335",
    "query": "CREATE TABLE plt2_adv_extra PARTITION OF plt2_adv FOR VALUES IN ('0000')"
  },
  {
    "comment": "partition_join - Statement 336",
    "query": "INSERT INTO plt2_adv_extra VALUES (0, 0, '0000')"
  },
  {
    "comment": "partition_join - Statement 337",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.a, t2.c FROM plt2_adv t1 LEFT JOIN plt1_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b \u003c 10 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.a, t2.c FROM plt2_adv AS t1 LEFT OUTER JOIN plt1_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 338",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.* FROM plt2_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt1_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b \u003c 10 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.* FROM plt2_adv AS t1 WHERE NOT EXISTS (SELECT 1 FROM plt1_adv AS t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 339",
    "query": "DROP TABLE plt2_adv_extra"
  },
  {
    "comment": "partition_join - Statement 340",
    "query": "ALTER TABLE plt2_adv DETACH PARTITION plt2_adv_p2"
  },
  {
    "comment": "partition_join - Statement 341",
    "query": "CREATE TABLE plt2_adv_p2_1 PARTITION OF plt2_adv FOR VALUES IN ('0004')"
  },
  {
    "comment": "partition_join - Statement 342",
    "query": "CREATE TABLE plt2_adv_p2_2 PARTITION OF plt2_adv FOR VALUES IN ('0006')"
  },
  {
    "comment": "partition_join - Statement 343",
    "query": "INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (4, 6)",
    "expected": "INSERT INTO plt2_adv (SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) AS i WHERE i % 10 IN (4, 6))"
  },
  {
    "comment": "partition_join - Statement 344",
    "query": "DROP TABLE plt2_adv_p2_1"
  },
  {
    "comment": "partition_join - Statement 345",
    "query": "DROP TABLE plt2_adv_p2_2"
  },
  {
    "comment": "partition_join - Statement 346",
    "query": "ALTER TABLE plt2_adv ATTACH PARTITION plt2_adv_p2 FOR VALUES IN ('0004', '0006')"
  },
  {
    "comment": "partition_join - Statement 347",
    "query": "ALTER TABLE plt1_adv DETACH PARTITION plt1_adv_p1"
  },
  {
    "comment": "partition_join - Statement 348",
    "query": "CREATE TABLE plt1_adv_p1_null PARTITION OF plt1_adv FOR VALUES IN (NULL, '0001', '0003')"
  },
  {
    "comment": "partition_join - Statement 349",
    "query": "INSERT INTO plt1_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (1, 3)",
    "expected": "INSERT INTO plt1_adv (SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) AS i WHERE i % 10 IN (1, 3))"
  },
  {
    "comment": "partition_join - Statement 350",
    "query": "INSERT INTO plt1_adv VALUES (-1, -1, NULL)"
  },
  {
    "comment": "partition_join - Statement 351",
    "query": "ALTER TABLE plt2_adv DETACH PARTITION plt2_adv_p3"
  },
  {
    "comment": "partition_join - Statement 352",
    "query": "CREATE TABLE plt2_adv_p3_null PARTITION OF plt2_adv FOR VALUES IN (NULL, '0007', '0009')"
  },
  {
    "comment": "partition_join - Statement 353",
    "query": "INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (7, 9)",
    "expected": "INSERT INTO plt2_adv (SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) AS i WHERE i % 10 IN (7, 9))"
  },
  {
    "comment": "partition_join - Statement 354",
    "query": "INSERT INTO plt2_adv VALUES (-1, -1, NULL)"
  },
  {
    "comment": "partition_join - Statement 355",
    "query": "DROP TABLE plt1_adv_p1_null"
  },
  {
    "comment": "partition_join - Statement 356",
    "query": "ALTER TABLE plt1_adv ATTACH PARTITION plt1_adv_p1 FOR VALUES IN ('0001', '0003')"
  },
  {
    "comment": "partition_join - Statement 357",
    "query": "CREATE TABLE plt1_adv_extra PARTITION OF plt1_adv FOR VALUES IN (NULL)"
  },
  {
    "comment": "partition_join - Statement 358",
    "query": "DROP TABLE plt2_adv_p3_null"
  },
  {
    "comment": "partition_join - Statement 359",
    "query": "ALTER TABLE plt2_adv ATTACH PARTITION plt2_adv_p3 FOR VALUES IN ('0007', '0009')"
  },
  {
    "comment": "partition_join - Statement 360",
    "query": "CREATE TABLE plt2_adv_extra PARTITION OF plt2_adv FOR VALUES IN (NULL)"
  },
  {
    "comment": "partition_join - Statement 361",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT JOIN plt1_adv t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b \u003c 10 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv AS t1 LEFT OUTER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT OUTER JOIN plt1_adv AS t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 362",
    "query": "SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT JOIN plt1_adv t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b \u003c 10 ORDER BY t1.a",
    "expected": "SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv AS t1 LEFT OUTER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT OUTER JOIN plt1_adv AS t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 363",
    "query": "DROP TABLE plt1_adv_extra"
  },
  {
    "comment": "partition_join - Statement 364",
    "query": "ALTER TABLE plt1_adv ATTACH PARTITION plt1_adv_p1 DEFAULT"
  },
  {
    "comment": "partition_join - Statement 365",
    "query": "DROP TABLE plt1_adv_p3"
  },
  {
    "comment": "partition_join - Statement 366",
    "query": "DROP TABLE plt2_adv_p3"
  },
  {
    "comment": "partition_join - Statement 367",
    "query": "CREATE TABLE plt2_adv_p2_ext PARTITION OF plt2_adv FOR VALUES IN ('0004', '0005', '0006')"
  },
  {
    "comment": "partition_join - Statement 368",
    "query": "INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (4, 5, 6)",
    "expected": "INSERT INTO plt2_adv (SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) AS i WHERE i % 10 IN (4, 5, 6))"
  },
  {
    "comment": "partition_join - Statement 369",
    "query": "ALTER TABLE plt2_adv DETACH PARTITION plt2_adv_p2_ext"
  },
  {
    "comment": "partition_join - Statement 370",
    "query": "ALTER TABLE plt2_adv ATTACH PARTITION plt2_adv_p2_ext DEFAULT"
  },
  {
    "comment": "partition_join - Statement 371",
    "query": "DROP TABLE plt2_adv_p2_ext"
  },
  {
    "comment": "partition_join - Statement 372",
    "query": "CREATE TABLE plt3_adv (a int, b int, c text) PARTITION BY LIST (c)",
    "expected": "CREATE TABLE plt3_adv (a INT, b INT, c TEXT) PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 373",
    "query": "CREATE TABLE plt3_adv_p1 PARTITION OF plt3_adv FOR VALUES IN ('0004', '0006')"
  },
  {
    "comment": "partition_join - Statement 374",
    "query": "CREATE TABLE plt3_adv_p2 PARTITION OF plt3_adv FOR VALUES IN ('0007', '0009')"
  },
  {
    "comment": "partition_join - Statement 375",
    "query": "INSERT INTO plt3_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (4, 6, 7, 9)",
    "expected": "INSERT INTO plt3_adv (SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) AS i WHERE i % 10 IN (4, 6, 7, 9))"
  },
  {
    "comment": "partition_join - Statement 376",
    "query": "ANALYZE plt3_adv"
  },
  {
    "comment": "partition_join - Statement 377",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT JOIN plt3_adv t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b \u003c 10 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv AS t1 LEFT OUTER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT OUTER JOIN plt3_adv AS t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 378",
    "query": "SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT JOIN plt3_adv t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b \u003c 10 ORDER BY t1.a",
    "expected": "SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv AS t1 LEFT OUTER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT OUTER JOIN plt3_adv AS t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 379",
    "query": "DROP TABLE plt2_adv_p1"
  },
  {
    "comment": "partition_join - Statement 380",
    "query": "CREATE TABLE plt2_adv_p1_null PARTITION OF plt2_adv FOR VALUES IN (NULL, '0001', '0003')"
  },
  {
    "comment": "partition_join - Statement 381",
    "query": "INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (1, 3)",
    "expected": "INSERT INTO plt2_adv (SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) AS i WHERE i % 10 IN (1, 3))"
  },
  {
    "comment": "partition_join - Statement 382",
    "query": "DROP TABLE plt2_adv_p1_null"
  },
  {
    "comment": "partition_join - Statement 383",
    "query": "CREATE TABLE plt2_adv_p1_null PARTITION OF plt2_adv FOR VALUES IN (NULL)"
  },
  {
    "comment": "partition_join - Statement 384",
    "query": "DROP TABLE plt1_adv"
  },
  {
    "comment": "partition_join - Statement 385",
    "query": "DROP TABLE plt2_adv"
  },
  {
    "comment": "partition_join - Statement 386",
    "query": "DROP TABLE plt3_adv"
  },
  {
    "comment": "partition_join - Statement 387",
    "query": "CREATE TABLE plt1_adv_p1 PARTITION OF plt1_adv FOR VALUES IN ('0001')"
  },
  {
    "comment": "partition_join - Statement 388",
    "query": "CREATE TABLE plt1_adv_p2 PARTITION OF plt1_adv FOR VALUES IN ('0002')"
  },
  {
    "comment": "partition_join - Statement 389",
    "query": "CREATE TABLE plt1_adv_p3 PARTITION OF plt1_adv FOR VALUES IN ('0003')"
  },
  {
    "comment": "partition_join - Statement 390",
    "query": "CREATE TABLE plt1_adv_p4 PARTITION OF plt1_adv FOR VALUES IN (NULL, '0004', '0005')"
  },
  {
    "comment": "partition_join - Statement 391",
    "query": "INSERT INTO plt1_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (1, 2, 3, 4, 5)",
    "expected": "INSERT INTO plt1_adv (SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) AS i WHERE i % 10 IN (1, 2, 3, 4, 5))"
  },
  {
    "comment": "partition_join - Statement 392",
    "query": "CREATE TABLE plt2_adv_p1 PARTITION OF plt2_adv FOR VALUES IN ('0001', '0002')"
  },
  {
    "comment": "partition_join - Statement 393",
    "query": "CREATE TABLE plt2_adv_p2 PARTITION OF plt2_adv FOR VALUES IN (NULL)"
  },
  {
    "comment": "partition_join - Statement 394",
    "query": "CREATE TABLE plt2_adv_p3 PARTITION OF plt2_adv FOR VALUES IN ('0003')"
  },
  {
    "comment": "partition_join - Statement 395",
    "query": "CREATE TABLE plt2_adv_p4 PARTITION OF plt2_adv FOR VALUES IN ('0004', '0005')"
  },
  {
    "comment": "partition_join - Statement 396",
    "query": "INSERT INTO plt2_adv SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) i WHERE i % 10 IN (1, 2, 3, 4, 5)",
    "expected": "INSERT INTO plt2_adv (SELECT i, i, to_char(i % 10, 'FM0000') FROM generate_series(1, 299) AS i WHERE i % 10 IN (1, 2, 3, 4, 5))"
  },
  {
    "comment": "partition_join - Statement 397",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IN ('0003', '0004', '0005') AND t1.b \u003c 10 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv AS t1 INNER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IN ('0003', '0004', '0005') AND t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 398",
    "query": "SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IN ('0003', '0004', '0005') AND t1.b \u003c 10 ORDER BY t1.a",
    "expected": "SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv AS t1 INNER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IN ('0003', '0004', '0005') AND t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 399",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IS NULL AND t1.b \u003c 10 ORDER BY t1.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv AS t1 LEFT OUTER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IS NULL AND t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 400",
    "query": "SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IS NULL AND t1.b \u003c 10 ORDER BY t1.a",
    "expected": "SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv AS t1 LEFT OUTER JOIN plt2_adv AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IS NULL AND t1.b \u003c 10 ORDER BY t1.a"
  },
  {
    "comment": "partition_join - Statement 401",
    "query": "CREATE TABLE plt1_adv_default PARTITION OF plt1_adv DEFAULT"
  },
  {
    "comment": "partition_join - Statement 402",
    "query": "CREATE TABLE plt2_adv_default PARTITION OF plt2_adv DEFAULT"
  },
  {
    "comment": "partition_join - Statement 403",
    "query": "CREATE TABLE plt1_adv_p1 PARTITION OF plt1_adv FOR VALUES IN ('0000', '0001', '0002')"
  },
  {
    "comment": "partition_join - Statement 404",
    "query": "CREATE TABLE plt1_adv_p2 PARTITION OF plt1_adv FOR VALUES IN ('0003', '0004')"
  },
  {
    "comment": "partition_join - Statement 405",
    "query": "INSERT INTO plt1_adv SELECT i, i, to_char(i % 5, 'FM0000') FROM generate_series(0, 24) i",
    "expected": "INSERT INTO plt1_adv SELECT i, i, to_char(i % 5, 'FM0000') FROM generate_series(0, 24) AS i"
  },
  {
    "comment": "partition_join - Statement 406",
    "query": "CREATE TABLE plt2_adv_p1 PARTITION OF plt2_adv FOR VALUES IN ('0002')"
  },
  {
    "comment": "partition_join - Statement 407",
    "query": "CREATE TABLE plt2_adv_p2 PARTITION OF plt2_adv FOR VALUES IN ('0003', '0004')"
  },
  {
    "comment": "partition_join - Statement 408",
    "query": "INSERT INTO plt2_adv SELECT i, i, to_char(i % 5, 'FM0000') FROM generate_series(0, 24) i WHERE i % 5 IN (2, 3, 4)",
    "expected": "INSERT INTO plt2_adv (SELECT i, i, to_char(i % 5, 'FM0000') FROM generate_series(0, 24) AS i WHERE i % 5 IN (2, 3, 4))"
  },
  {
    "comment": "partition_join - Statement 409",
    "query": "CREATE TABLE plt3_adv_p1 PARTITION OF plt3_adv FOR VALUES IN ('0001')"
  },
  {
    "comment": "partition_join - Statement 410",
    "query": "CREATE TABLE plt3_adv_p2 PARTITION OF plt3_adv FOR VALUES IN ('0003', '0004')"
  },
  {
    "comment": "partition_join - Statement 411",
    "query": "INSERT INTO plt3_adv SELECT i, i, to_char(i % 5, 'FM0000') FROM generate_series(0, 24) i WHERE i % 5 IN (1, 3, 4)",
    "expected": "INSERT INTO plt3_adv (SELECT i, i, to_char(i % 5, 'FM0000') FROM generate_series(0, 24) AS i WHERE i % 5 IN (1, 3, 4))"
  },
  {
    "comment": "partition_join - Statement 412",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM (plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.c = t2.c)) FULL JOIN plt3_adv t3 ON (t1.c = t3.c) WHERE coalesce(t1.a, 0) % 5 != 3 AND coalesce(t1.a, 0) % 5 != 4 ORDER BY t1.c, t1.a, t2.a, t3.a",
    "expected": "EXPLAIN (COSTS false) SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM (plt1_adv AS t1 LEFT OUTER JOIN plt2_adv AS t2 ON (t1.c = t2.c)) FULL OUTER JOIN plt3_adv AS t3 ON (t1.c = t3.c) WHERE COALESCE(t1.a, 0) % 5 \u003c\u003e 3 AND COALESCE(t1.a, 0) % 5 \u003c\u003e 4 ORDER BY t1.c, t1.a, t2.a, t3.a"
  },
  {
    "comment": "partition_join - Statement 413",
    "query": "SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM (plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.c = t2.c)) FULL JOIN plt3_adv t3 ON (t1.c = t3.c) WHERE coalesce(t1.a, 0) % 5 != 3 AND coalesce(t1.a, 0) % 5 != 4 ORDER BY t1.c, t1.a, t2.a, t3.a",
    "expected": "SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM (plt1_adv AS t1 LEFT OUTER JOIN plt2_adv AS t2 ON (t1.c = t2.c)) FULL OUTER JOIN plt3_adv AS t3 ON (t1.c = t3.c) WHERE COALESCE(t1.a, 0) % 5 \u003c\u003e 3 AND COALESCE(t1.a, 0) % 5 \u003c\u003e 4 ORDER BY t1.c, t1.a, t2.a, t3.a"
  },
  {
    "comment": "partition_join - Statement 414",
    "query": "CREATE TABLE alpha (a double precision, b int, c text) PARTITION BY RANGE (a)",
    "expected": "CREATE TABLE alpha (a FLOAT8, b INT, c TEXT) PARTITION BY range (a)"
  },
  {
    "comment": "partition_join - Statement 415",
    "query": "CREATE TABLE alpha_neg PARTITION OF alpha FOR VALUES FROM ('-Infinity') TO (0) PARTITION BY RANGE (b)",
    "expected": "CREATE TABLE alpha_neg PARTITION OF alpha FOR VALUES FROM ('-Infinity') TO (0) PARTITION BY range (b)"
  },
  {
    "comment": "partition_join - Statement 416",
    "query": "CREATE TABLE alpha_pos PARTITION OF alpha FOR VALUES FROM (0) TO (10.0) PARTITION BY LIST (c)",
    "expected": "CREATE TABLE alpha_pos PARTITION OF alpha FOR VALUES FROM (0) TO (10.0) PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 417",
    "query": "CREATE TABLE alpha_neg_p1 PARTITION OF alpha_neg FOR VALUES FROM (100) TO (200)"
  },
  {
    "comment": "partition_join - Statement 418",
    "query": "CREATE TABLE alpha_neg_p2 PARTITION OF alpha_neg FOR VALUES FROM (200) TO (300)"
  },
  {
    "comment": "partition_join - Statement 419",
    "query": "CREATE TABLE alpha_neg_p3 PARTITION OF alpha_neg FOR VALUES FROM (300) TO (400)"
  },
  {
    "comment": "partition_join - Statement 420",
    "query": "CREATE TABLE alpha_pos_p1 PARTITION OF alpha_pos FOR VALUES IN ('0001', '0003')"
  },
  {
    "comment": "partition_join - Statement 421",
    "query": "CREATE TABLE alpha_pos_p2 PARTITION OF alpha_pos FOR VALUES IN ('0004', '0006')"
  },
  {
    "comment": "partition_join - Statement 422",
    "query": "CREATE TABLE alpha_pos_p3 PARTITION OF alpha_pos FOR VALUES IN ('0008', '0009')"
  },
  {
    "comment": "partition_join - Statement 423",
    "query": "INSERT INTO alpha_neg SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 399) i WHERE i % 10 IN (1, 3, 4, 6, 8, 9)",
    "expected": "INSERT INTO alpha_neg (SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 399) AS i WHERE i % 10 IN (1, 3, 4, 6, 8, 9))"
  },
  {
    "comment": "partition_join - Statement 424",
    "query": "INSERT INTO alpha_pos SELECT  1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 399) i WHERE i % 10 IN (1, 3, 4, 6, 8, 9)",
    "expected": "INSERT INTO alpha_pos (SELECT 1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 399) AS i WHERE i % 10 IN (1, 3, 4, 6, 8, 9))"
  },
  {
    "comment": "partition_join - Statement 425",
    "query": "ANALYZE alpha"
  },
  {
    "comment": "partition_join - Statement 426",
    "query": "CREATE TABLE beta (a double precision, b int, c text) PARTITION BY RANGE (a)",
    "expected": "CREATE TABLE beta (a FLOAT8, b INT, c TEXT) PARTITION BY range (a)"
  },
  {
    "comment": "partition_join - Statement 427",
    "query": "CREATE TABLE beta_neg PARTITION OF beta FOR VALUES FROM (-10.0) TO (0) PARTITION BY RANGE (b)",
    "expected": "CREATE TABLE beta_neg PARTITION OF beta FOR VALUES FROM (-10.0) TO (0) PARTITION BY range (b)"
  },
  {
    "comment": "partition_join - Statement 428",
    "query": "CREATE TABLE beta_pos PARTITION OF beta FOR VALUES FROM (0) TO ('Infinity') PARTITION BY LIST (c)",
    "expected": "CREATE TABLE beta_pos PARTITION OF beta FOR VALUES FROM (0) TO ('Infinity') PARTITION BY list (c)"
  },
  {
    "comment": "partition_join - Statement 429",
    "query": "CREATE TABLE beta_neg_p1 PARTITION OF beta_neg FOR VALUES FROM (100) TO (150)"
  },
  {
    "comment": "partition_join - Statement 430",
    "query": "CREATE TABLE beta_neg_p2 PARTITION OF beta_neg FOR VALUES FROM (200) TO (300)"
  },
  {
    "comment": "partition_join - Statement 431",
    "query": "CREATE TABLE beta_neg_p3 PARTITION OF beta_neg FOR VALUES FROM (350) TO (500)"
  },
  {
    "comment": "partition_join - Statement 432",
    "query": "CREATE TABLE beta_pos_p1 PARTITION OF beta_pos FOR VALUES IN ('0002', '0003')"
  },
  {
    "comment": "partition_join - Statement 433",
    "query": "CREATE TABLE beta_pos_p2 PARTITION OF beta_pos FOR VALUES IN ('0004', '0006')"
  },
  {
    "comment": "partition_join - Statement 434",
    "query": "CREATE TABLE beta_pos_p3 PARTITION OF beta_pos FOR VALUES IN ('0007', '0009')"
  },
  {
    "comment": "partition_join - Statement 435",
    "query": "INSERT INTO beta_neg SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 149) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",
    "expected": "INSERT INTO beta_neg (SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 149) AS i WHERE i % 10 IN (2, 3, 4, 6, 7, 9))"
  },
  {
    "comment": "partition_join - Statement 436",
    "query": "INSERT INTO beta_neg SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(200, 299) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",
    "expected": "INSERT INTO beta_neg (SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(200, 299) AS i WHERE i % 10 IN (2, 3, 4, 6, 7, 9))"
  },
  {
    "comment": "partition_join - Statement 437",
    "query": "INSERT INTO beta_neg SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(350, 499) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",
    "expected": "INSERT INTO beta_neg (SELECT -1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(350, 499) AS i WHERE i % 10 IN (2, 3, 4, 6, 7, 9))"
  },
  {
    "comment": "partition_join - Statement 438",
    "query": "INSERT INTO beta_pos SELECT  1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 149) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",
    "expected": "INSERT INTO beta_pos (SELECT 1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(100, 149) AS i WHERE i % 10 IN (2, 3, 4, 6, 7, 9))"
  },
  {
    "comment": "partition_join - Statement 439",
    "query": "INSERT INTO beta_pos SELECT  1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(200, 299) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",
    "expected": "INSERT INTO beta_pos (SELECT 1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(200, 299) AS i WHERE i % 10 IN (2, 3, 4, 6, 7, 9))"
  },
  {
    "comment": "partition_join - Statement 440",
    "query": "INSERT INTO beta_pos SELECT  1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(350, 499) i WHERE i % 10 IN (2, 3, 4, 6, 7, 9)",
    "expected": "INSERT INTO beta_pos (SELECT 1.0, i, to_char(i % 10, 'FM0000') FROM generate_series(350, 499) AS i WHERE i % 10 IN (2, 3, 4, 6, 7, 9))"
  },
  {
    "comment": "partition_join - Statement 441",
    "query": "ANALYZE beta"
  },
  {
    "comment": "partition_join - Statement 442",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.b = t2.b) WHERE t1.b \u003e= 125 AND t1.b \u003c 225 ORDER BY t1.a, t1.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.*, t2.* FROM alpha AS t1 INNER JOIN beta AS t2 ON (t1.a = t2.a AND t1.b = t2.b) WHERE t1.b \u003e= 125 AND t1.b \u003c 225 ORDER BY t1.a, t1.b"
  },
  {
    "comment": "partition_join - Statement 443",
    "query": "SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.b = t2.b) WHERE t1.b \u003e= 125 AND t1.b \u003c 225 ORDER BY t1.a, t1.b",
    "expected": "SELECT t1.*, t2.* FROM alpha AS t1 INNER JOIN beta AS t2 ON (t1.a = t2.a AND t1.b = t2.b) WHERE t1.b \u003e= 125 AND t1.b \u003c 225 ORDER BY t1.a, t1.b"
  },
  {
    "comment": "partition_join - Statement 444",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE ((t1.b \u003e= 100 AND t1.b \u003c 110) OR (t1.b \u003e= 200 AND t1.b \u003c 210)) AND ((t2.b \u003e= 100 AND t2.b \u003c 110) OR (t2.b \u003e= 200 AND t2.b \u003c 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b, t2.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.*, t2.* FROM alpha AS t1 INNER JOIN beta AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE ((t1.b \u003e= 100 AND t1.b \u003c 110) OR (t1.b \u003e= 200 AND t1.b \u003c 210)) AND ((t2.b \u003e= 100 AND t2.b \u003c 110) OR (t2.b \u003e= 200 AND t2.b \u003c 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b, t2.b"
  },
  {
    "comment": "partition_join - Statement 445",
    "query": "SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE ((t1.b \u003e= 100 AND t1.b \u003c 110) OR (t1.b \u003e= 200 AND t1.b \u003c 210)) AND ((t2.b \u003e= 100 AND t2.b \u003c 110) OR (t2.b \u003e= 200 AND t2.b \u003c 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b, t2.b",
    "expected": "SELECT t1.*, t2.* FROM alpha AS t1 INNER JOIN beta AS t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE ((t1.b \u003e= 100 AND t1.b \u003c 110) OR (t1.b \u003e= 200 AND t1.b \u003c 210)) AND ((t2.b \u003e= 100 AND t2.b \u003c 110) OR (t2.b \u003e= 200 AND t2.b \u003c 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b, t2.b"
  },
  {
    "comment": "partition_join - Statement 446",
    "query": "EXPLAIN (COSTS OFF) SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.b = t2.b AND t1.c = t2.c) WHERE ((t1.b \u003e= 100 AND t1.b \u003c 110) OR (t1.b \u003e= 200 AND t1.b \u003c 210)) AND ((t2.b \u003e= 100 AND t2.b \u003c 110) OR (t2.b \u003e= 200 AND t2.b \u003c 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b",
    "expected": "EXPLAIN (COSTS false) SELECT t1.*, t2.* FROM alpha AS t1 INNER JOIN beta AS t2 ON (t1.a = t2.a AND t1.b = t2.b AND t1.c = t2.c) WHERE ((t1.b \u003e= 100 AND t1.b \u003c 110) OR (t1.b \u003e= 200 AND t1.b \u003c 210)) AND ((t2.b \u003e= 100 AND t2.b \u003c 110) OR (t2.b \u003e= 200 AND t2.b \u003c 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b"
  },
  {
    "comment": "partition_join - Statement 447",
    "query": "SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.b = t2.b AND t1.c = t2.c) WHERE ((t1.b \u003e= 100 AND t1.b \u003c 110) OR (t1.b \u003e= 200 AND t1.b \u003c 210)) AND ((t2.b \u003e= 100 AND t2.b \u003c 110) OR (t2.b \u003e= 200 AND t2.b \u003c 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b",
    "expected": "SELECT t1.*, t2.* FROM alpha AS t1 INNER JOIN beta AS t2 ON (t1.a = t2.a AND t1.b = t2.b AND t1.c = t2.c) WHERE ((t1.b \u003e= 100 AND t1.b \u003c 110) OR (t1.b \u003e= 200 AND t1.b \u003c 210)) AND ((t2.b \u003e= 100 AND t2.b \u003c 110) OR (t2.b \u003e= 200 AND t2.b \u003c 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b"
  },
  {
    "comment": "partition_join - Statement 448",
    "query": "CREATE TABLE fract_t (id BIGINT, PRIMARY KEY (id)) PARTITION BY RANGE (id)",
    "expected": "CREATE TABLE fract_t (id BIGINT, PRIMARY KEY (id)) PARTITION BY range (id)"
  },
  {
    "comment": "partition_join - Statement 449",
    "query": "CREATE TABLE fract_t0 PARTITION OF fract_t FOR VALUES FROM ('0') TO ('1000')"
  },
  {
    "comment": "partition_join - Statement 450",
    "query": "CREATE TABLE fract_t1 PARTITION OF fract_t FOR VALUES FROM ('1000') TO ('2000')"
  },
  {
    "comment": "partition_join - Statement 451",
    "query": "INSERT INTO fract_t (id) (SELECT generate_series(0, 1999))",
    "expected": "INSERT INTO fract_t (id) SELECT generate_series(0, 1999)"
  },
  {
    "comment": "partition_join - Statement 452",
    "query": "ANALYZE fract_t"
  },
  {
    "comment": "partition_join - Statement 453",
    "query": "SET max_parallel_workers_per_gather = 0"
  },
  {
    "comment": "partition_join - Statement 454",
    "query": "SET enable_partitionwise_join = on"
  },
  {
    "comment": "partition_join - Statement 455",
    "query": "EXPLAIN (COSTS OFF) SELECT x.id, y.id FROM fract_t x LEFT JOIN fract_t y USING (id) ORDER BY x.id ASC LIMIT 10",
    "expected": "EXPLAIN (COSTS false) SELECT x.id, y.id FROM fract_t AS x LEFT OUTER JOIN fract_t AS y USING (id) ORDER BY x.id ASC LIMIT 10"
  },
  {
    "comment": "partition_join - Statement 456",
    "query": "EXPLAIN (COSTS OFF) SELECT x.id, y.id FROM fract_t x LEFT JOIN fract_t y USING (id) ORDER BY x.id DESC LIMIT 10",
    "expected": "EXPLAIN (COSTS false) SELECT x.id, y.id FROM fract_t AS x LEFT OUTER JOIN fract_t AS y USING (id) ORDER BY x.id DESC LIMIT 10"
  },
  {
    "comment": "partition_join - Statement 457",
    "query": "DROP TABLE fract_t"
  },
  {
    "comment": "partition_join - Statement 458",
    "query": "RESET max_parallel_workers_per_gather"
  },
  {
    "comment": "partition_join - Statement 459",
    "query": "RESET enable_partitionwise_join"
  }
]
