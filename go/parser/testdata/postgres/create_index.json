[
  {
    "comment": "create_index - Statement 1",
    "query": "CREATE INDEX IF NOT EXISTS onek_unique1 ON onek USING btree(unique1 int4_ops)"
  },
  {
    "comment": "create_index - Statement 2",
    "query": "CREATE INDEX IF NOT EXISTS ON onek USING btree(unique1 int4_ops)"
  },
  {
    "comment": "create_index - Statement 3",
    "query": "CREATE INDEX onek_unique2 ON onek USING btree(unique2 int4_ops)"
  },
  {
    "comment": "create_index - Statement 4",
    "query": "CREATE INDEX onek_hundred ON onek USING btree(hundred int4_ops)"
  },
  {
    "comment": "create_index - Statement 5",
    "query": "CREATE INDEX onek_stringu1 ON onek USING btree(stringu1 name_ops)"
  },
  {
    "comment": "create_index - Statement 6",
    "query": "CREATE INDEX tenk1_unique1 ON tenk1 USING btree(unique1 int4_ops)"
  },
  {
    "comment": "create_index - Statement 7",
    "query": "CREATE INDEX tenk1_unique2 ON tenk1 USING btree(unique2 int4_ops)"
  },
  {
    "comment": "create_index - Statement 8",
    "query": "CREATE INDEX tenk1_hundred ON tenk1 USING btree(hundred int4_ops)"
  },
  {
    "comment": "create_index - Statement 9",
    "query": "CREATE INDEX tenk1_thous_tenthous ON tenk1 (thousand, tenthous)"
  },
  {
    "comment": "create_index - Statement 10",
    "query": "CREATE INDEX tenk2_unique1 ON tenk2 USING btree(unique1 int4_ops)"
  },
  {
    "comment": "create_index - Statement 11",
    "query": "CREATE INDEX tenk2_unique2 ON tenk2 USING btree(unique2 int4_ops)"
  },
  {
    "comment": "create_index - Statement 12",
    "query": "CREATE INDEX tenk2_hundred ON tenk2 USING btree(hundred int4_ops)"
  },
  {
    "comment": "create_index - Statement 13",
    "query": "CREATE INDEX rix ON road USING btree (name text_ops)"
  },
  {
    "comment": "create_index - Statement 14",
    "query": "CREATE INDEX iix ON ihighway USING btree (name text_ops)"
  },
  {
    "comment": "create_index - Statement 15",
    "query": "CREATE INDEX six ON shighway USING btree (name text_ops)"
  },
  {
    "comment": "create_index - Statement 16",
    "query": "COMMENT ON INDEX six_wrong IS 'bad index'"
  },
  {
    "comment": "create_index - Statement 17",
    "query": "COMMENT ON INDEX six IS 'good index'"
  },
  {
    "comment": "create_index - Statement 18",
    "query": "COMMENT ON INDEX six IS NULL"
  },
  {
    "comment": "create_index - Statement 19",
    "query": "CREATE INDEX onek2_u1_prtl ON onek2 USING btree(unique1 int4_ops) where unique1 < 20 or unique1 > 980"
  },
  {
    "comment": "create_index - Statement 20",
    "query": "CREATE INDEX onek2_u2_prtl ON onek2 USING btree(unique2 int4_ops) where stringu1 < 'B'"
  },
  {
    "comment": "create_index - Statement 21",
    "query": "CREATE INDEX onek2_stu1_prtl ON onek2 USING btree(stringu1 name_ops) where onek2.stringu1 >= 'J' and onek2.stringu1 < 'K'"
  },
  {
    "comment": "create_index - Statement 22",
    "query": "CREATE TABLE slow_emp4000 ( home_base\t box )"
  },
  {
    "comment": "create_index - Statement 23",
    "query": "CREATE TABLE fast_emp4000 ( home_base\t box )"
  },
  {
    "comment": "create_index - Statement 24",
    "query": "INSERT INTO fast_emp4000 SELECT * FROM slow_emp4000"
  },
  {
    "comment": "create_index - Statement 25",
    "query": "ANALYZE slow_emp4000"
  },
  {
    "comment": "create_index - Statement 26",
    "query": "ANALYZE fast_emp4000"
  },
  {
    "comment": "create_index - Statement 27",
    "query": "CREATE INDEX grect2ind ON fast_emp4000 USING gist (home_base)"
  },
  {
    "comment": "create_index - Statement 28",
    "query": "CREATE TEMP TABLE point_tbl AS SELECT * FROM public.point_tbl"
  },
  {
    "comment": "create_index - Statement 29",
    "query": "INSERT INTO POINT_TBL(f1) VALUES (NULL)"
  },
  {
    "comment": "create_index - Statement 30",
    "query": "CREATE INDEX gpointind ON point_tbl USING gist (f1)"
  },
  {
    "comment": "create_index - Statement 31",
    "query": "CREATE TEMP TABLE gpolygon_tbl AS SELECT polygon(home_base) AS f1 FROM slow_emp4000"
  },
  {
    "comment": "create_index - Statement 32",
    "query": "INSERT INTO gpolygon_tbl VALUES ( '(1000,0,0,1000)' )"
  },
  {
    "comment": "create_index - Statement 33",
    "query": "INSERT INTO gpolygon_tbl VALUES ( '(0,1000,1000,1000)' )"
  },
  {
    "comment": "create_index - Statement 34",
    "query": "CREATE TEMP TABLE gcircle_tbl AS SELECT circle(home_base) AS f1 FROM slow_emp4000"
  },
  {
    "comment": "create_index - Statement 35",
    "query": "CREATE INDEX ggpolygonind ON gpolygon_tbl USING gist (f1)"
  },
  {
    "comment": "create_index - Statement 36",
    "query": "CREATE INDEX ggcircleind ON gcircle_tbl USING gist (f1)"
  },
  {
    "comment": "create_index - Statement 37",
    "query": "SET enable_seqscan = ON"
  },
  {
    "comment": "create_index - Statement 38",
    "query": "SET enable_indexscan = OFF"
  },
  {
    "comment": "create_index - Statement 39",
    "query": "SET enable_bitmapscan = OFF"
  },
  {
    "comment": "create_index - Statement 40",
    "query": "SELECT * FROM fast_emp4000 WHERE home_base <@ '(200,200),(2000,1000)'::box ORDER BY (home_base[0])[0]"
  },
  {
    "comment": "create_index - Statement 41",
    "query": "SELECT count(*) FROM fast_emp4000 WHERE home_base && '(1000,1000,0,0)'::box"
  },
  {
    "comment": "create_index - Statement 42",
    "query": "SELECT count(*) FROM fast_emp4000 WHERE home_base IS NULL"
  },
  {
    "comment": "create_index - Statement 43",
    "query": "SELECT count(*) FROM gpolygon_tbl WHERE f1 && '(1000,1000,0,0)'::polygon"
  },
  {
    "comment": "create_index - Statement 44",
    "query": "SELECT count(*) FROM gcircle_tbl WHERE f1 && '<(500,500),500>'::circle"
  },
  {
    "comment": "create_index - Statement 45",
    "query": "SELECT count(*) FROM point_tbl WHERE f1 <@ box '(0,0,100,100)'"
  },
  {
    "comment": "create_index - Statement 46",
    "query": "SELECT count(*) FROM point_tbl WHERE box '(0,0,100,100)' @> f1"
  },
  {
    "comment": "create_index - Statement 47",
    "query": "SELECT count(*) FROM point_tbl WHERE f1 <@ polygon '(0,0),(0,100),(100,100),(50,50),(100,0),(0,0)'"
  },
  {
    "comment": "create_index - Statement 48",
    "query": "SELECT count(*) FROM point_tbl WHERE f1 <@ circle '<(50,50),50>'"
  },
  {
    "comment": "create_index - Statement 49",
    "query": "SELECT count(*) FROM point_tbl p WHERE p.f1 << '(0.0, 0.0)'"
  },
  {
    "comment": "create_index - Statement 50",
    "query": "SELECT count(*) FROM point_tbl p WHERE p.f1 >> '(0.0, 0.0)'"
  },
  {
    "comment": "create_index - Statement 51",
    "query": "SELECT count(*) FROM point_tbl p WHERE p.f1 <<| '(0.0, 0.0)'"
  },
  {
    "comment": "create_index - Statement 52",
    "query": "SELECT count(*) FROM point_tbl p WHERE p.f1 |>> '(0.0, 0.0)'"
  },
  {
    "comment": "create_index - Statement 53",
    "query": "SELECT count(*) FROM point_tbl p WHERE p.f1 ~= '(-5, -12)'"
  },
  {
    "comment": "create_index - Statement 54",
    "query": "SELECT * FROM point_tbl ORDER BY f1 <-> '0,1'"
  },
  {
    "comment": "create_index - Statement 55",
    "query": "SELECT * FROM point_tbl WHERE f1 IS NULL"
  },
  {
    "comment": "create_index - Statement 56",
    "query": "SELECT * FROM point_tbl WHERE f1 IS NOT NULL ORDER BY f1 <-> '0,1'"
  },
  {
    "comment": "create_index - Statement 57",
    "query": "SELECT * FROM point_tbl WHERE f1 <@ '(-10,-10),(10,10)':: box ORDER BY f1 <-> '0,1'"
  },
  {
    "comment": "create_index - Statement 58",
    "query": "SELECT * FROM gpolygon_tbl ORDER BY f1 <-> '(0,0)'::point LIMIT 10"
  },
  {
    "comment": "create_index - Statement 59",
    "query": "SELECT circle_center(f1), round(radius(f1)) as radius FROM gcircle_tbl ORDER BY f1 <-> '(200,300)'::point LIMIT 10"
  },
  {
    "comment": "create_index - Statement 60",
    "query": "SET enable_seqscan = OFF"
  },
  {
    "comment": "create_index - Statement 61",
    "query": "SET enable_indexscan = ON"
  },
  {
    "comment": "create_index - Statement 62",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM fast_emp4000 WHERE home_base <@ '(200,200),(2000,1000)'::box ORDER BY (home_base[0])[0]"
  },
  {
    "comment": "create_index - Statement 63",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM fast_emp4000 WHERE home_base && '(1000,1000,0,0)'::box"
  },
  {
    "comment": "create_index - Statement 64",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM fast_emp4000 WHERE home_base IS NULL"
  },
  {
    "comment": "create_index - Statement 65",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM gpolygon_tbl WHERE f1 && '(1000,1000,0,0)'::polygon"
  },
  {
    "comment": "create_index - Statement 66",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM gcircle_tbl WHERE f1 && '<(500,500),500>'::circle"
  },
  {
    "comment": "create_index - Statement 67",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM point_tbl WHERE f1 <@ box '(0,0,100,100)'"
  },
  {
    "comment": "create_index - Statement 68",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM point_tbl WHERE box '(0,0,100,100)' @> f1"
  },
  {
    "comment": "create_index - Statement 69",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM point_tbl WHERE f1 <@ polygon '(0,0),(0,100),(100,100),(50,50),(100,0),(0,0)'"
  },
  {
    "comment": "create_index - Statement 70",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM point_tbl WHERE f1 <@ circle '<(50,50),50>'"
  },
  {
    "comment": "create_index - Statement 71",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM point_tbl p WHERE p.f1 << '(0.0, 0.0)'"
  },
  {
    "comment": "create_index - Statement 72",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM point_tbl p WHERE p.f1 >> '(0.0, 0.0)'"
  },
  {
    "comment": "create_index - Statement 73",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM point_tbl p WHERE p.f1 <<| '(0.0, 0.0)'"
  },
  {
    "comment": "create_index - Statement 74",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM point_tbl p WHERE p.f1 |>> '(0.0, 0.0)'"
  },
  {
    "comment": "create_index - Statement 75",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM point_tbl p WHERE p.f1 ~= '(-5, -12)'"
  },
  {
    "comment": "create_index - Statement 76",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM point_tbl ORDER BY f1 <-> '0,1'"
  },
  {
    "comment": "create_index - Statement 77",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM point_tbl WHERE f1 IS NULL"
  },
  {
    "comment": "create_index - Statement 78",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM point_tbl WHERE f1 IS NOT NULL ORDER BY f1 <-> '0,1'"
  },
  {
    "comment": "create_index - Statement 79",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM point_tbl WHERE f1 <@ '(-10,-10),(10,10)':: box ORDER BY f1 <-> '0,1'"
  },
  {
    "comment": "create_index - Statement 80",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM gpolygon_tbl ORDER BY f1 <-> '(0,0)'::point LIMIT 10"
  },
  {
    "comment": "create_index - Statement 81",
    "query": "EXPLAIN (COSTS OFF) SELECT circle_center(f1), round(radius(f1)) as radius FROM gcircle_tbl ORDER BY f1 <-> '(200,300)'::point LIMIT 10"
  },
  {
    "comment": "create_index - Statement 82",
    "query": "EXPLAIN (COSTS OFF) SELECT point(x,x), (SELECT f1 FROM gpolygon_tbl ORDER BY f1 <-> point(x,x) LIMIT 1) as c FROM generate_series(0,10,1) x"
  },
  {
    "comment": "create_index - Statement 83",
    "query": "SELECT point(x,x), (SELECT f1 FROM gpolygon_tbl ORDER BY f1 <-> point(x,x) LIMIT 1) as c FROM generate_series(0,10,1) x"
  },
  {
    "comment": "create_index - Statement 84",
    "query": "SET enable_bitmapscan = ON"
  },
  {
    "comment": "create_index - Statement 85",
    "query": "RESET enable_seqscan"
  },
  {
    "comment": "create_index - Statement 86",
    "query": "RESET enable_indexscan"
  },
  {
    "comment": "create_index - Statement 87",
    "query": "RESET enable_bitmapscan"
  },
  {
    "comment": "create_index - Statement 88",
    "query": "CREATE TABLE array_index_op_test ( seqno\t\tint4, i\t\t\tint4[], t\t\t\ttext[] )"
  },
  {
    "comment": "create_index - Statement 89",
    "query": "ANALYZE array_index_op_test"
  },
  {
    "comment": "create_index - Statement 90",
    "query": "SELECT * FROM array_index_op_test WHERE i = '{NULL}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 91",
    "query": "SELECT * FROM array_index_op_test WHERE i @> '{NULL}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 92",
    "query": "SELECT * FROM array_index_op_test WHERE i && '{NULL}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 93",
    "query": "SELECT * FROM array_index_op_test WHERE i <@ '{NULL}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 94",
    "query": "CREATE INDEX intarrayidx ON array_index_op_test USING gin (i)"
  },
  {
    "comment": "create_index - Statement 95",
    "query": "explain (costs off) SELECT * FROM array_index_op_test WHERE i @> '{32}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 96",
    "query": "SELECT * FROM array_index_op_test WHERE i @> '{32}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 97",
    "query": "SELECT * FROM array_index_op_test WHERE i && '{32}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 98",
    "query": "SELECT * FROM array_index_op_test WHERE i @> '{17}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 99",
    "query": "SELECT * FROM array_index_op_test WHERE i && '{17}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 100",
    "query": "SELECT * FROM array_index_op_test WHERE i @> '{32,17}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 101",
    "query": "SELECT * FROM array_index_op_test WHERE i && '{32,17}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 102",
    "query": "SELECT * FROM array_index_op_test WHERE i <@ '{38,34,32,89}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 103",
    "query": "SELECT * FROM array_index_op_test WHERE i = '{47,77}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 104",
    "query": "SELECT * FROM array_index_op_test WHERE i = '{}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 105",
    "query": "SELECT * FROM array_index_op_test WHERE i @> '{}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 106",
    "query": "SELECT * FROM array_index_op_test WHERE i && '{}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 107",
    "query": "SELECT * FROM array_index_op_test WHERE i <@ '{}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 108",
    "query": "CREATE INDEX textarrayidx ON array_index_op_test USING gin (t)"
  },
  {
    "comment": "create_index - Statement 109",
    "query": "explain (costs off) SELECT * FROM array_index_op_test WHERE t @> '{AAAAAAAA72908}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 110",
    "query": "SELECT * FROM array_index_op_test WHERE t @> '{AAAAAAAA72908}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 111",
    "query": "SELECT * FROM array_index_op_test WHERE t && '{AAAAAAAA72908}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 112",
    "query": "SELECT * FROM array_index_op_test WHERE t @> '{AAAAAAAAAA646}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 113",
    "query": "SELECT * FROM array_index_op_test WHERE t && '{AAAAAAAAAA646}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 114",
    "query": "SELECT * FROM array_index_op_test WHERE t @> '{AAAAAAAA72908,AAAAAAAAAA646}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 115",
    "query": "SELECT * FROM array_index_op_test WHERE t && '{AAAAAAAA72908,AAAAAAAAAA646}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 116",
    "query": "SELECT * FROM array_index_op_test WHERE t <@ '{AAAAAAAA72908,AAAAAAAAAAAAAAAAAAA17075,AA88409,AAAAAAAAAAAAAAAAAA36842,AAAAAAA48038,AAAAAAAAAAAAAA10611}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 117",
    "query": "SELECT * FROM array_index_op_test WHERE t = '{AAAAAAAAAA646,A87088}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 118",
    "query": "SELECT * FROM array_index_op_test WHERE t = '{}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 119",
    "query": "SELECT * FROM array_index_op_test WHERE t @> '{}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 120",
    "query": "SELECT * FROM array_index_op_test WHERE t && '{}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 121",
    "query": "SELECT * FROM array_index_op_test WHERE t <@ '{}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 122",
    "query": "DROP INDEX intarrayidx, textarrayidx"
  },
  {
    "comment": "create_index - Statement 123",
    "query": "CREATE INDEX botharrayidx ON array_index_op_test USING gin (i, t)"
  },
  {
    "comment": "create_index - Statement 124",
    "query": "SELECT * FROM array_index_op_test WHERE t @> '{AAAAAAA80240}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 125",
    "query": "SELECT * FROM array_index_op_test WHERE t && '{AAAAAAA80240}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 126",
    "query": "SELECT * FROM array_index_op_test WHERE i @> '{32}' AND t && '{AAAAAAA80240}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 127",
    "query": "SELECT * FROM array_index_op_test WHERE i && '{32}' AND t @> '{AAAAAAA80240}' ORDER BY seqno"
  },
  {
    "comment": "create_index - Statement 128",
    "query": "CREATE TABLE array_gin_test (a int[])"
  },
  {
    "comment": "create_index - Statement 129",
    "query": "INSERT INTO array_gin_test SELECT ARRAY[1, g%5, g] FROM generate_series(1, 10000) g"
  },
  {
    "comment": "create_index - Statement 130",
    "query": "CREATE INDEX array_gin_test_idx ON array_gin_test USING gin (a)"
  },
  {
    "comment": "create_index - Statement 131",
    "query": "SELECT COUNT(*) FROM array_gin_test WHERE a @> '{2}'"
  },
  {
    "comment": "create_index - Statement 132",
    "query": "DROP TABLE array_gin_test"
  },
  {
    "comment": "create_index - Statement 133",
    "query": "CREATE INDEX gin_relopts_test ON array_index_op_test USING gin (i) WITH (FASTUPDATE=on, GIN_PENDING_LIST_LIMIT=128)"
  },
  {
    "comment": "create_index - Statement 134",
    "query": "CREATE INDEX unlogged_hash_index ON unlogged_hash_table USING hash (id int4_ops)"
  },
  {
    "comment": "create_index - Statement 135",
    "query": "DROP TABLE unlogged_hash_table"
  },
  {
    "comment": "create_index - Statement 136",
    "query": "SET maintenance_work_mem = '1MB'"
  },
  {
    "comment": "create_index - Statement 137",
    "query": "CREATE INDEX hash_tuplesort_idx ON tenk1 USING hash (stringu1 name_ops) WITH (fillfactor = 10)"
  },
  {
    "comment": "create_index - Statement 138",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM tenk1 WHERE stringu1 = 'TVAAAA'"
  },
  {
    "comment": "create_index - Statement 139",
    "query": "SELECT count(*) FROM tenk1 WHERE stringu1 = 'TVAAAA'"
  },
  {
    "comment": "create_index - Statement 140",
    "query": "DROP INDEX hash_tuplesort_idx"
  },
  {
    "comment": "create_index - Statement 141",
    "query": "RESET maintenance_work_mem"
  },
  {
    "comment": "create_index - Statement 142",
    "query": "CREATE TABLE unique_tbl (i int, t text)"
  },
  {
    "comment": "create_index - Statement 143",
    "query": "CREATE UNIQUE INDEX unique_idx1 ON unique_tbl (i) NULLS DISTINCT"
  },
  {
    "comment": "create_index - Statement 144",
    "query": "CREATE UNIQUE INDEX unique_idx2 ON unique_tbl (i) NULLS NOT DISTINCT"
  },
  {
    "comment": "create_index - Statement 145",
    "query": "INSERT INTO unique_tbl VALUES (1, 'one')"
  },
  {
    "comment": "create_index - Statement 146",
    "query": "INSERT INTO unique_tbl VALUES (2, 'two')"
  },
  {
    "comment": "create_index - Statement 147",
    "query": "INSERT INTO unique_tbl VALUES (3, 'three')"
  },
  {
    "comment": "create_index - Statement 148",
    "query": "INSERT INTO unique_tbl VALUES (4, 'four')"
  },
  {
    "comment": "create_index - Statement 149",
    "query": "INSERT INTO unique_tbl VALUES (5, 'one')"
  },
  {
    "comment": "create_index - Statement 150",
    "query": "INSERT INTO unique_tbl (t) VALUES ('six')"
  },
  {
    "comment": "create_index - Statement 151",
    "query": "INSERT INTO unique_tbl (t) VALUES ('seven')"
  },
  {
    "comment": "create_index - Statement 152",
    "query": "DROP INDEX unique_idx1, unique_idx2"
  },
  {
    "comment": "create_index - Statement 153",
    "query": "CREATE UNIQUE INDEX unique_idx3 ON unique_tbl (i) NULLS DISTINCT"
  },
  {
    "comment": "create_index - Statement 154",
    "query": "CREATE UNIQUE INDEX unique_idx4 ON unique_tbl (i) NULLS NOT DISTINCT"
  },
  {
    "comment": "create_index - Statement 155",
    "query": "DELETE FROM unique_tbl WHERE t = 'seven'"
  },
  {
    "comment": "create_index - Statement 156",
    "query": "SELECT pg_get_indexdef('unique_idx4'::regclass)"
  },
  {
    "comment": "create_index - Statement 157",
    "query": "DROP TABLE unique_tbl"
  },
  {
    "comment": "create_index - Statement 158",
    "query": "CREATE TABLE func_index_heap (f1 text, f2 text)"
  },
  {
    "comment": "create_index - Statement 159",
    "query": "CREATE UNIQUE INDEX func_index_index on func_index_heap (textcat(f1,f2))"
  },
  {
    "comment": "create_index - Statement 160",
    "query": "INSERT INTO func_index_heap VALUES('ABC','DEF')"
  },
  {
    "comment": "create_index - Statement 161",
    "query": "INSERT INTO func_index_heap VALUES('AB','CDEFG')"
  },
  {
    "comment": "create_index - Statement 162",
    "query": "INSERT INTO func_index_heap VALUES('QWE','RTY')"
  },
  {
    "comment": "create_index - Statement 163",
    "query": "INSERT INTO func_index_heap VALUES('ABCD', 'EF')"
  },
  {
    "comment": "create_index - Statement 164",
    "query": "INSERT INTO func_index_heap VALUES('QWERTY')"
  },
  {
    "comment": "create_index - Statement 165",
    "query": "CREATE UNIQUE INDEX func_index_index on func_index_heap ((f1 || f2) text_ops)"
  },
  {
    "comment": "create_index - Statement 166",
    "query": "CREATE TABLE covering_index_heap (f1 int, f2 int, f3 text)"
  },
  {
    "comment": "create_index - Statement 167",
    "query": "CREATE UNIQUE INDEX covering_index_index on covering_index_heap (f1,f2) INCLUDE(f3)"
  },
  {
    "comment": "create_index - Statement 168",
    "query": "INSERT INTO covering_index_heap VALUES(1,1,'AAA')"
  },
  {
    "comment": "create_index - Statement 169",
    "query": "INSERT INTO covering_index_heap VALUES(1,2,'AAA')"
  },
  {
    "comment": "create_index - Statement 170",
    "query": "INSERT INTO covering_index_heap VALUES(1,2,'BBB')"
  },
  {
    "comment": "create_index - Statement 171",
    "query": "INSERT INTO covering_index_heap VALUES(1,4,'AAA')"
  },
  {
    "comment": "create_index - Statement 172",
    "query": "CREATE UNIQUE INDEX covering_pkey on covering_index_heap (f1,f2) INCLUDE(f3)"
  },
  {
    "comment": "create_index - Statement 173",
    "query": "ALTER TABLE covering_index_heap ADD CONSTRAINT covering_pkey PRIMARY KEY USING INDEX covering_pkey"
  },
  {
    "comment": "create_index - Statement 174",
    "query": "DROP TABLE covering_index_heap"
  },
  {
    "comment": "create_index - Statement 175",
    "query": "CREATE TABLE concur_heap (f1 text, f2 text)"
  },
  {
    "comment": "create_index - Statement 176",
    "query": "CREATE INDEX CONCURRENTLY concur_index1 ON concur_heap(f2,f1)"
  },
  {
    "comment": "create_index - Statement 177",
    "query": "CREATE INDEX CONCURRENTLY IF NOT EXISTS concur_index1 ON concur_heap(f2,f1)"
  },
  {
    "comment": "create_index - Statement 178",
    "query": "INSERT INTO concur_heap VALUES  ('a','b')"
  },
  {
    "comment": "create_index - Statement 179",
    "query": "INSERT INTO concur_heap VALUES  ('b','b')"
  },
  {
    "comment": "create_index - Statement 180",
    "query": "CREATE UNIQUE INDEX CONCURRENTLY concur_index2 ON concur_heap(f1)"
  },
  {
    "comment": "create_index - Statement 181",
    "query": "CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS concur_index2 ON concur_heap(f1)"
  },
  {
    "comment": "create_index - Statement 182",
    "query": "INSERT INTO concur_heap VALUES ('b','x')"
  },
  {
    "comment": "create_index - Statement 183",
    "query": "CREATE UNIQUE INDEX CONCURRENTLY concur_index3 ON concur_heap(f2)"
  },
  {
    "comment": "create_index - Statement 184",
    "query": "CREATE INDEX CONCURRENTLY concur_index4 on concur_heap(f2) WHERE f1='a'"
  },
  {
    "comment": "create_index - Statement 185",
    "query": "CREATE INDEX CONCURRENTLY concur_index5 on concur_heap(f2) WHERE f1='x'"
  },
  {
    "comment": "create_index - Statement 186",
    "query": "CREATE INDEX CONCURRENTLY on concur_heap((f2||f1))"
  },
  {
    "comment": "create_index - Statement 187",
    "query": "BEGIN"
  },
  {
    "comment": "create_index - Statement 188",
    "query": "CREATE INDEX CONCURRENTLY concur_index7 ON concur_heap(f1)"
  },
  {
    "comment": "create_index - Statement 189",
    "query": "COMMIT"
  },
  {
    "comment": "create_index - Statement 190",
    "query": "CREATE FUNCTION predicate_stable() RETURNS bool IMMUTABLE LANGUAGE plpgsql AS $$ BEGIN EXECUTE 'SELECT txid_current()'"
  },
  {
    "comment": "create_index - Statement 191",
    "query": "RETURN true"
  },
  {
    "comment": "create_index - Statement 192",
    "query": "END; $$"
  },
  {
    "comment": "create_index - Statement 193",
    "query": "CREATE INDEX CONCURRENTLY concur_index8 ON concur_heap (f1) WHERE predicate_stable()"
  },
  {
    "comment": "create_index - Statement 194",
    "query": "DROP INDEX concur_index8"
  },
  {
    "comment": "create_index - Statement 195",
    "query": "DROP FUNCTION predicate_stable()"
  },
  {
    "comment": "create_index - Statement 196",
    "query": "CREATE INDEX std_index on concur_heap(f2)"
  },
  {
    "comment": "create_index - Statement 197",
    "query": "VACUUM FULL concur_heap"
  },
  {
    "comment": "create_index - Statement 198",
    "query": "REINDEX TABLE concur_heap"
  },
  {
    "comment": "create_index - Statement 199",
    "query": "DELETE FROM concur_heap WHERE f1 = 'b'"
  },
  {
    "comment": "create_index - Statement 200",
    "query": "INSERT INTO concur_temp VALUES (1, 'foo'), (2, 'bar')"
  },
  {
    "comment": "create_index - Statement 201",
    "query": "CREATE INDEX CONCURRENTLY concur_temp_ind ON concur_temp(f1)"
  },
  {
    "comment": "create_index - Statement 202",
    "query": "DROP INDEX CONCURRENTLY concur_temp_ind"
  },
  {
    "comment": "create_index - Statement 203",
    "query": "DROP TABLE concur_temp"
  },
  {
    "comment": "create_index - Statement 204",
    "query": "CREATE TEMP TABLE concur_temp (f1 int, f2 text) ON COMMIT DROP"
  },
  {
    "comment": "create_index - Statement 205",
    "query": "CREATE TEMP TABLE concur_temp (f1 int, f2 text) ON COMMIT DELETE ROWS"
  },
  {
    "comment": "create_index - Statement 206",
    "query": "DROP INDEX CONCURRENTLY \"concur_index2\""
  },
  {
    "comment": "create_index - Statement 207",
    "query": "DROP INDEX CONCURRENTLY IF EXISTS \"concur_index2\""
  },
  {
    "comment": "create_index - Statement 208",
    "query": "DROP INDEX CONCURRENTLY \"concur_index2\", \"concur_index3\""
  },
  {
    "comment": "create_index - Statement 209",
    "query": "DROP INDEX CONCURRENTLY \"concur_index5\""
  },
  {
    "comment": "create_index - Statement 210",
    "query": "ROLLBACK"
  },
  {
    "comment": "create_index - Statement 211",
    "query": "DROP INDEX CONCURRENTLY IF EXISTS \"concur_index3\""
  },
  {
    "comment": "create_index - Statement 212",
    "query": "DROP INDEX CONCURRENTLY \"concur_index4\""
  },
  {
    "comment": "create_index - Statement 213",
    "query": "DROP INDEX CONCURRENTLY \"concur_index1\""
  },
  {
    "comment": "create_index - Statement 214",
    "query": "DROP INDEX CONCURRENTLY \"concur_heap_expr_idx\""
  },
  {
    "comment": "create_index - Statement 215",
    "query": "CREATE TABLE cwi_test( a int , b varchar(10), c char)"
  },
  {
    "comment": "create_index - Statement 216",
    "query": "INSERT INTO cwi_test VALUES(1, 2), (3, 4), (5, 6)"
  },
  {
    "comment": "create_index - Statement 217",
    "query": "CREATE UNIQUE INDEX cwi_uniq_idx ON cwi_test(a , b)"
  },
  {
    "comment": "create_index - Statement 218",
    "query": "ALTER TABLE cwi_test ADD primary key USING INDEX cwi_uniq_idx"
  },
  {
    "comment": "create_index - Statement 219",
    "query": "ALTER TABLE cwi_test DROP CONSTRAINT cwi_uniq_idx, ADD CONSTRAINT cwi_replaced_pkey PRIMARY KEY USING INDEX cwi_uniq2_idx"
  },
  {
    "comment": "create_index - Statement 220",
    "query": "CREATE UNIQUE INDEX cwi_uniq3_idx ON cwi_test(a desc)"
  },
  {
    "comment": "create_index - Statement 221",
    "query": "ALTER TABLE cwi_test ADD UNIQUE USING INDEX cwi_uniq3_idx"
  },
  {
    "comment": "create_index - Statement 222",
    "query": "CREATE UNIQUE INDEX cwi_uniq4_idx ON cwi_test(b collate \"POSIX\")"
  },
  {
    "comment": "create_index - Statement 223",
    "query": "ALTER TABLE cwi_test ADD UNIQUE USING INDEX cwi_uniq4_idx"
  },
  {
    "comment": "create_index - Statement 224",
    "query": "DROP TABLE cwi_test"
  },
  {
    "comment": "create_index - Statement 225",
    "query": "CREATE TABLE cwi_test(a int) PARTITION BY hash (a)"
  },
  {
    "comment": "create_index - Statement 226",
    "query": "create unique index on cwi_test (a)"
  },
  {
    "comment": "create_index - Statement 227",
    "query": "alter table cwi_test add primary key using index cwi_test_a_idx"
  },
  {
    "comment": "create_index - Statement 228",
    "query": "CREATE TABLE cwi_test(a int, b int)"
  },
  {
    "comment": "create_index - Statement 229",
    "query": "CREATE UNIQUE INDEX cwi_a_nnd ON cwi_test (a) NULLS NOT DISTINCT"
  },
  {
    "comment": "create_index - Statement 230",
    "query": "ALTER TABLE cwi_test ADD PRIMARY KEY USING INDEX cwi_a_nnd"
  },
  {
    "comment": "create_index - Statement 231",
    "query": "CREATE TABLE syscol_table (a INT)"
  },
  {
    "comment": "create_index - Statement 232",
    "query": "CREATE INDEX ON syscolcol_table (ctid)"
  },
  {
    "comment": "create_index - Statement 233",
    "query": "CREATE INDEX ON syscol_table ((ctid >= '(1000,0)'))"
  },
  {
    "comment": "create_index - Statement 234",
    "query": "CREATE INDEX ON syscol_table (a) WHERE ctid >= '(1000,0)'"
  },
  {
    "comment": "create_index - Statement 235",
    "query": "DROP TABLE syscol_table"
  },
  {
    "comment": "create_index - Statement 236",
    "query": "CREATE TABLE onek_with_null AS SELECT unique1, unique2 FROM onek"
  },
  {
    "comment": "create_index - Statement 237",
    "query": "INSERT INTO onek_with_null (unique1,unique2) VALUES (NULL, -1), (NULL, NULL)"
  },
  {
    "comment": "create_index - Statement 238",
    "query": "CREATE UNIQUE INDEX onek_nulltest ON onek_with_null (unique2,unique1)"
  },
  {
    "comment": "create_index - Statement 239",
    "query": "SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL"
  },
  {
    "comment": "create_index - Statement 240",
    "query": "SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IS NULL"
  },
  {
    "comment": "create_index - Statement 241",
    "query": "SELECT count(*) FROM onek_with_null WHERE unique1 IS NOT NULL"
  },
  {
    "comment": "create_index - Statement 242",
    "query": "SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IS NOT NULL"
  },
  {
    "comment": "create_index - Statement 243",
    "query": "SELECT count(*) FROM onek_with_null WHERE unique1 IS NOT NULL AND unique1 > 500"
  },
  {
    "comment": "create_index - Statement 244",
    "query": "SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique1 > 500"
  },
  {
    "comment": "create_index - Statement 245",
    "query": "DROP INDEX onek_nulltest"
  },
  {
    "comment": "create_index - Statement 246",
    "query": "CREATE UNIQUE INDEX onek_nulltest ON onek_with_null (unique2 desc,unique1)"
  },
  {
    "comment": "create_index - Statement 247",
    "query": "SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IN (-1, 0, 1)"
  },
  {
    "comment": "create_index - Statement 248",
    "query": "CREATE UNIQUE INDEX onek_nulltest ON onek_with_null (unique2 desc nulls last,unique1)"
  },
  {
    "comment": "create_index - Statement 249",
    "query": "CREATE UNIQUE INDEX onek_nulltest ON onek_with_null (unique2  nulls first,unique1)"
  },
  {
    "comment": "create_index - Statement 250",
    "query": "CREATE UNIQUE INDEX onek_nulltest ON onek_with_null (unique2)"
  },
  {
    "comment": "create_index - Statement 251",
    "query": "SELECT unique1, unique2 FROM onek_with_null ORDER BY unique2 LIMIT 2"
  },
  {
    "comment": "create_index - Statement 252",
    "query": "SELECT unique1, unique2 FROM onek_with_null WHERE unique2 >= -1 ORDER BY unique2 LIMIT 2"
  },
  {
    "comment": "create_index - Statement 253",
    "query": "SELECT unique1, unique2 FROM onek_with_null WHERE unique2 >= 0 ORDER BY unique2 LIMIT 2"
  },
  {
    "comment": "create_index - Statement 254",
    "query": "SELECT unique1, unique2 FROM onek_with_null ORDER BY unique2 DESC LIMIT 2"
  },
  {
    "comment": "create_index - Statement 255",
    "query": "SELECT unique1, unique2 FROM onek_with_null WHERE unique2 >= -1 ORDER BY unique2 DESC LIMIT 2"
  },
  {
    "comment": "create_index - Statement 256",
    "query": "SELECT unique1, unique2 FROM onek_with_null WHERE unique2 < 999 ORDER BY unique2 DESC LIMIT 2"
  },
  {
    "comment": "create_index - Statement 257",
    "query": "DROP TABLE onek_with_null"
  },
  {
    "comment": "create_index - Statement 258",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM tenk1 WHERE thousand = 42 AND (tenthous = 1 OR tenthous = 3 OR tenthous = 42)"
  },
  {
    "comment": "create_index - Statement 259",
    "query": "SELECT * FROM tenk1 WHERE thousand = 42 AND (tenthous = 1 OR tenthous = 3 OR tenthous = 42)"
  },
  {
    "comment": "create_index - Statement 260",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM tenk1 WHERE hundred = 42 AND (thousand = 42 OR thousand = 99)"
  },
  {
    "comment": "create_index - Statement 261",
    "query": "SELECT count(*) FROM tenk1 WHERE hundred = 42 AND (thousand = 42 OR thousand = 99)"
  },
  {
    "comment": "create_index - Statement 262",
    "query": "CREATE TABLE dupindexcols AS SELECT unique1 as id, stringu2::text as f1 FROM tenk1"
  },
  {
    "comment": "create_index - Statement 263",
    "query": "CREATE INDEX dupindexcols_i ON dupindexcols (f1, id, f1 text_pattern_ops)"
  },
  {
    "comment": "create_index - Statement 264",
    "query": "ANALYZE dupindexcols"
  },
  {
    "comment": "create_index - Statement 265",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM dupindexcols WHERE f1 BETWEEN 'WA' AND 'ZZZ' and id < 1000 and f1 ~<~ 'YX'"
  },
  {
    "comment": "create_index - Statement 266",
    "query": "SELECT count(*) FROM dupindexcols WHERE f1 BETWEEN 'WA' AND 'ZZZ' and id < 1000 and f1 ~<~ 'YX'"
  },
  {
    "comment": "create_index - Statement 267",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 IN (1,42,7) ORDER BY unique1"
  },
  {
    "comment": "create_index - Statement 268",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 IN (1,42,7) ORDER BY unique1"
  },
  {
    "comment": "create_index - Statement 269",
    "query": "explain (costs off) SELECT thousand, tenthous FROM tenk1 WHERE thousand < 2 AND tenthous IN (1001,3000) ORDER BY thousand"
  },
  {
    "comment": "create_index - Statement 270",
    "query": "SELECT thousand, tenthous FROM tenk1 WHERE thousand < 2 AND tenthous IN (1001,3000) ORDER BY thousand"
  },
  {
    "comment": "create_index - Statement 271",
    "query": "explain (costs off) SELECT thousand, tenthous FROM tenk1 WHERE thousand < 2 AND tenthous IN (1001,3000) ORDER BY thousand DESC, tenthous DESC"
  },
  {
    "comment": "create_index - Statement 272",
    "query": "SELECT thousand, tenthous FROM tenk1 WHERE thousand < 2 AND tenthous IN (1001,3000) ORDER BY thousand DESC, tenthous DESC"
  },
  {
    "comment": "create_index - Statement 273",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 = ANY('{7, 8, 9}')"
  },
  {
    "comment": "create_index - Statement 274",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 = ANY('{7, 8, 9}')"
  },
  {
    "comment": "create_index - Statement 275",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 = ANY('{7, 14, 22}') and unique1 = ANY('{33, 44}'::bigint[])"
  },
  {
    "comment": "create_index - Statement 276",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 = ANY('{7, 14, 22}') and unique1 = ANY('{33, 44}'::bigint[])"
  },
  {
    "comment": "create_index - Statement 277",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 = 1"
  },
  {
    "comment": "create_index - Statement 278",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 = 1"
  },
  {
    "comment": "create_index - Statement 279",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 = 12345"
  },
  {
    "comment": "create_index - Statement 280",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 = 12345"
  },
  {
    "comment": "create_index - Statement 281",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 >= 42"
  },
  {
    "comment": "create_index - Statement 282",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 >= 42"
  },
  {
    "comment": "create_index - Statement 283",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 > 42"
  },
  {
    "comment": "create_index - Statement 284",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 > 42"
  },
  {
    "comment": "create_index - Statement 285",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 > 9996 and unique1 >= 9999"
  },
  {
    "comment": "create_index - Statement 286",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 > 9996 and unique1 >= 9999"
  },
  {
    "comment": "create_index - Statement 287",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 < 3 and unique1 <= 3"
  },
  {
    "comment": "create_index - Statement 288",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 < 3 and unique1 <= 3"
  },
  {
    "comment": "create_index - Statement 289",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 < 3 and unique1 < (-1)::bigint"
  },
  {
    "comment": "create_index - Statement 290",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 < 3 and unique1 < (-1)::bigint"
  },
  {
    "comment": "create_index - Statement 291",
    "query": "explain (costs off) SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 < (-1)::bigint"
  },
  {
    "comment": "create_index - Statement 292",
    "query": "SELECT unique1 FROM tenk1 WHERE unique1 IN (1, 42, 7) and unique1 < (-1)::bigint"
  },
  {
    "comment": "create_index - Statement 293",
    "query": "explain (costs off) select * from tenk1 where (thousand, tenthous) in ((1,1001), (null,null))"
  },
  {
    "comment": "create_index - Statement 294",
    "query": "create temp table boolindex (b bool, i int, unique(b, i), junk float)"
  },
  {
    "comment": "create_index - Statement 295",
    "query": "explain (costs off) select * from boolindex order by b, i limit 10"
  },
  {
    "comment": "create_index - Statement 296",
    "query": "explain (costs off) select * from boolindex where b order by i limit 10"
  },
  {
    "comment": "create_index - Statement 297",
    "query": "explain (costs off) select * from boolindex where b = true order by i desc limit 10"
  },
  {
    "comment": "create_index - Statement 298",
    "query": "explain (costs off) select * from boolindex where not b order by i limit 10"
  },
  {
    "comment": "create_index - Statement 299",
    "query": "explain (costs off) select * from boolindex where b is true order by i desc limit 10"
  },
  {
    "comment": "create_index - Statement 300",
    "query": "explain (costs off) select * from boolindex where b is false order by i desc limit 10"
  },
  {
    "comment": "create_index - Statement 301",
    "query": "CREATE TABLE reindex_verbose(id integer primary key)"
  },
  {
    "comment": "create_index - Statement 302",
    "query": "CREATE TABLE concur_reindex_tab (c1 int)"
  },
  {
    "comment": "create_index - Statement 303",
    "query": "REINDEX TABLE concur_reindex_tab"
  },
  {
    "comment": "create_index - Statement 304",
    "query": "REINDEX (CONCURRENTLY) TABLE concur_reindex_tab"
  },
  {
    "comment": "create_index - Statement 305",
    "query": "ALTER TABLE concur_reindex_tab ADD COLUMN c2 text"
  },
  {
    "comment": "create_index - Statement 306",
    "query": "CREATE UNIQUE INDEX concur_reindex_ind1 ON concur_reindex_tab(c1)"
  },
  {
    "comment": "create_index - Statement 307",
    "query": "CREATE INDEX concur_reindex_ind2 ON concur_reindex_tab(c2)"
  },
  {
    "comment": "create_index - Statement 308",
    "query": "CREATE UNIQUE INDEX concur_reindex_ind3 ON concur_reindex_tab(abs(c1))"
  },
  {
    "comment": "create_index - Statement 309",
    "query": "CREATE INDEX concur_reindex_ind4 ON concur_reindex_tab(c1, c1, c2)"
  },
  {
    "comment": "create_index - Statement 310",
    "query": "ALTER TABLE concur_reindex_tab ADD PRIMARY KEY USING INDEX concur_reindex_ind1"
  },
  {
    "comment": "create_index - Statement 311",
    "query": "CREATE TABLE concur_reindex_tab2 (c1 int REFERENCES concur_reindex_tab)"
  },
  {
    "comment": "create_index - Statement 312",
    "query": "INSERT INTO concur_reindex_tab VALUES  (1, 'a')"
  },
  {
    "comment": "create_index - Statement 313",
    "query": "INSERT INTO concur_reindex_tab VALUES  (2, 'a')"
  },
  {
    "comment": "create_index - Statement 314",
    "query": "CREATE TABLE concur_reindex_tab3 (c1 int, c2 int4range, EXCLUDE USING gist (c2 WITH &&))"
  },
  {
    "comment": "create_index - Statement 315",
    "query": "INSERT INTO concur_reindex_tab3 VALUES  (3, '[1,2]')"
  },
  {
    "comment": "create_index - Statement 316",
    "query": "REINDEX INDEX CONCURRENTLY  concur_reindex_tab3_c2_excl"
  },
  {
    "comment": "create_index - Statement 317",
    "query": "REINDEX TABLE CONCURRENTLY concur_reindex_tab3"
  },
  {
    "comment": "create_index - Statement 318",
    "query": "INSERT INTO concur_reindex_tab3 VALUES  (4, '[2,4]')"
  },
  {
    "comment": "create_index - Statement 319",
    "query": "CREATE MATERIALIZED VIEW concur_reindex_matview AS SELECT * FROM concur_reindex_tab"
  },
  {
    "comment": "create_index - Statement 320",
    "query": "SELECT pg_describe_object(classid, objid, objsubid) as obj, pg_describe_object(refclassid,refobjid,refobjsubid) as objref, deptype FROM pg_depend WHERE classid = 'pg_class'::regclass AND objid in ('concur_reindex_tab'::regclass, 'concur_reindex_ind1'::regclass, 'concur_reindex_ind2'::regclass, 'concur_reindex_ind3'::regclass, 'concur_reindex_ind4'::regclass, 'concur_reindex_matview'::regclass) ORDER BY 1, 2"
  },
  {
    "comment": "create_index - Statement 321",
    "query": "REINDEX INDEX CONCURRENTLY concur_reindex_ind1"
  },
  {
    "comment": "create_index - Statement 322",
    "query": "REINDEX TABLE CONCURRENTLY concur_reindex_tab"
  },
  {
    "comment": "create_index - Statement 323",
    "query": "REINDEX TABLE CONCURRENTLY concur_reindex_matview"
  },
  {
    "comment": "create_index - Statement 324",
    "query": "CREATE TABLE testcomment (i int)"
  },
  {
    "comment": "create_index - Statement 325",
    "query": "CREATE INDEX testcomment_idx1 ON testcomment (i)"
  },
  {
    "comment": "create_index - Statement 326",
    "query": "COMMENT ON INDEX testcomment_idx1 IS 'test comment'"
  },
  {
    "comment": "create_index - Statement 327",
    "query": "SELECT obj_description('testcomment_idx1'::regclass, 'pg_class')"
  },
  {
    "comment": "create_index - Statement 328",
    "query": "REINDEX TABLE testcomment"
  },
  {
    "comment": "create_index - Statement 329",
    "query": "REINDEX TABLE CONCURRENTLY testcomment"
  },
  {
    "comment": "create_index - Statement 330",
    "query": "DROP TABLE testcomment"
  },
  {
    "comment": "create_index - Statement 331",
    "query": "CREATE TABLE concur_clustered(i int)"
  },
  {
    "comment": "create_index - Statement 332",
    "query": "CREATE INDEX concur_clustered_i_idx ON concur_clustered(i)"
  },
  {
    "comment": "create_index - Statement 333",
    "query": "ALTER TABLE concur_clustered CLUSTER ON concur_clustered_i_idx"
  },
  {
    "comment": "create_index - Statement 334",
    "query": "REINDEX TABLE CONCURRENTLY concur_clustered"
  },
  {
    "comment": "create_index - Statement 335",
    "query": "SELECT indexrelid::regclass, indisclustered FROM pg_index WHERE indrelid = 'concur_clustered'::regclass"
  },
  {
    "comment": "create_index - Statement 336",
    "query": "DROP TABLE concur_clustered"
  },
  {
    "comment": "create_index - Statement 337",
    "query": "CREATE TABLE concur_replident(i int NOT NULL)"
  },
  {
    "comment": "create_index - Statement 338",
    "query": "CREATE UNIQUE INDEX concur_replident_i_idx ON concur_replident(i)"
  },
  {
    "comment": "create_index - Statement 339",
    "query": "ALTER TABLE concur_replident REPLICA IDENTITY USING INDEX concur_replident_i_idx"
  },
  {
    "comment": "create_index - Statement 340",
    "query": "SELECT indexrelid::regclass, indisreplident FROM pg_index WHERE indrelid = 'concur_replident'::regclass"
  },
  {
    "comment": "create_index - Statement 341",
    "query": "REINDEX TABLE CONCURRENTLY concur_replident"
  },
  {
    "comment": "create_index - Statement 342",
    "query": "DROP TABLE concur_replident"
  },
  {
    "comment": "create_index - Statement 343",
    "query": "CREATE TABLE concur_appclass_tab(i tsvector, j tsvector, k tsvector)"
  },
  {
    "comment": "create_index - Statement 344",
    "query": "CREATE INDEX concur_appclass_ind on concur_appclass_tab USING gist (i tsvector_ops (siglen='1000'), j tsvector_ops (siglen='500'))"
  },
  {
    "comment": "create_index - Statement 345",
    "query": "CREATE INDEX concur_appclass_ind_2 on concur_appclass_tab USING gist (k tsvector_ops (siglen='300'), j tsvector_ops)"
  },
  {
    "comment": "create_index - Statement 346",
    "query": "REINDEX TABLE CONCURRENTLY concur_appclass_tab"
  },
  {
    "comment": "create_index - Statement 347",
    "query": "CREATE TABLE concur_reindex_part (c1 int, c2 int) PARTITION BY RANGE (c1)"
  },
  {
    "comment": "create_index - Statement 348",
    "query": "CREATE TABLE concur_reindex_part_0 PARTITION OF concur_reindex_part FOR VALUES FROM (0) TO (10) PARTITION BY list (c2)"
  },
  {
    "comment": "create_index - Statement 349",
    "query": "CREATE TABLE concur_reindex_part_0_1 PARTITION OF concur_reindex_part_0 FOR VALUES IN (1)"
  },
  {
    "comment": "create_index - Statement 350",
    "query": "CREATE TABLE concur_reindex_part_0_2 PARTITION OF concur_reindex_part_0 FOR VALUES IN (2)"
  },
  {
    "comment": "create_index - Statement 351",
    "query": "CREATE TABLE concur_reindex_part_10 PARTITION OF concur_reindex_part FOR VALUES FROM (10) TO (20) PARTITION BY list (c2)"
  },
  {
    "comment": "create_index - Statement 352",
    "query": "CREATE INDEX concur_reindex_part_index ON ONLY concur_reindex_part (c1)"
  },
  {
    "comment": "create_index - Statement 353",
    "query": "CREATE INDEX concur_reindex_part_index_0 ON ONLY concur_reindex_part_0 (c1)"
  },
  {
    "comment": "create_index - Statement 354",
    "query": "ALTER INDEX concur_reindex_part_index ATTACH PARTITION concur_reindex_part_index_0"
  },
  {
    "comment": "create_index - Statement 355",
    "query": "CREATE INDEX concur_reindex_part_index_10 ON ONLY concur_reindex_part_10 (c1)"
  },
  {
    "comment": "create_index - Statement 356",
    "query": "ALTER INDEX concur_reindex_part_index ATTACH PARTITION concur_reindex_part_index_10"
  },
  {
    "comment": "create_index - Statement 357",
    "query": "CREATE INDEX concur_reindex_part_index_0_1 ON ONLY concur_reindex_part_0_1 (c1)"
  },
  {
    "comment": "create_index - Statement 358",
    "query": "ALTER INDEX concur_reindex_part_index_0 ATTACH PARTITION concur_reindex_part_index_0_1"
  },
  {
    "comment": "create_index - Statement 359",
    "query": "CREATE INDEX concur_reindex_part_index_0_2 ON ONLY concur_reindex_part_0_2 (c1)"
  },
  {
    "comment": "create_index - Statement 360",
    "query": "ALTER INDEX concur_reindex_part_index_0 ATTACH PARTITION concur_reindex_part_index_0_2"
  },
  {
    "comment": "create_index - Statement 361",
    "query": "SELECT relid, parentrelid, level FROM pg_partition_tree('concur_reindex_part_index') ORDER BY relid, level"
  },
  {
    "comment": "create_index - Statement 362",
    "query": "SELECT pg_describe_object(classid, objid, objsubid) as obj, pg_describe_object(refclassid,refobjid,refobjsubid) as objref, deptype FROM pg_depend WHERE classid = 'pg_class'::regclass AND objid in ('concur_reindex_part'::regclass, 'concur_reindex_part_0'::regclass, 'concur_reindex_part_0_1'::regclass, 'concur_reindex_part_0_2'::regclass, 'concur_reindex_part_index'::regclass, 'concur_reindex_part_index_0'::regclass, 'concur_reindex_part_index_0_1'::regclass, 'concur_reindex_part_index_0_2'::regclass) ORDER BY 1, 2"
  },
  {
    "comment": "create_index - Statement 363",
    "query": "REINDEX INDEX CONCURRENTLY concur_reindex_part_index_0_1"
  },
  {
    "comment": "create_index - Statement 364",
    "query": "REINDEX INDEX CONCURRENTLY concur_reindex_part_index_0_2"
  },
  {
    "comment": "create_index - Statement 365",
    "query": "REINDEX TABLE CONCURRENTLY concur_reindex_part_0_1"
  },
  {
    "comment": "create_index - Statement 366",
    "query": "REINDEX TABLE CONCURRENTLY concur_reindex_part_0_2"
  },
  {
    "comment": "create_index - Statement 367",
    "query": "REINDEX TABLE concur_reindex_part_index"
  },
  {
    "comment": "create_index - Statement 368",
    "query": "REINDEX TABLE CONCURRENTLY concur_reindex_part_index"
  },
  {
    "comment": "create_index - Statement 369",
    "query": "REINDEX TABLE concur_reindex_part_index_10"
  },
  {
    "comment": "create_index - Statement 370",
    "query": "REINDEX TABLE CONCURRENTLY concur_reindex_part_index_10"
  },
  {
    "comment": "create_index - Statement 371",
    "query": "REINDEX INDEX concur_reindex_part_index"
  },
  {
    "comment": "create_index - Statement 372",
    "query": "CREATE OR REPLACE FUNCTION create_relfilenode_part(relname text, indname text) RETURNS VOID AS $func$ BEGIN EXECUTE format(' CREATE TABLE %I AS SELECT oid, relname, relfilenode, relkind, reltoastrelid FROM pg_class WHERE oid IN (SELECT relid FROM pg_partition_tree(''%I''));', relname, indname)"
  },
  {
    "comment": "create_index - Statement 373",
    "query": "END $func$ LANGUAGE plpgsql"
  },
  {
    "comment": "create_index - Statement 374",
    "query": "CREATE OR REPLACE FUNCTION compare_relfilenode_part(tabname text) RETURNS TABLE (relname name, relkind \"char\", state text) AS $func$ BEGIN RETURN QUERY EXECUTE format( 'SELECT  b.relname, b.relkind, CASE WHEN a.relfilenode = b.relfilenode THEN ''relfilenode is unchanged'' ELSE ''relfilenode has changed'' END FROM %I b JOIN pg_class a ON b.relname = a.relname ORDER BY 1;', tabname)"
  },
  {
    "comment": "create_index - Statement 375",
    "query": "SELECT create_relfilenode_part('reindex_index_status', 'concur_reindex_part_index')"
  },
  {
    "comment": "create_index - Statement 376",
    "query": "SELECT * FROM compare_relfilenode_part('reindex_index_status')"
  },
  {
    "comment": "create_index - Statement 377",
    "query": "DROP TABLE reindex_index_status"
  },
  {
    "comment": "create_index - Statement 378",
    "query": "REINDEX INDEX CONCURRENTLY concur_reindex_part_index"
  },
  {
    "comment": "create_index - Statement 379",
    "query": "REINDEX INDEX concur_reindex_part"
  },
  {
    "comment": "create_index - Statement 380",
    "query": "REINDEX INDEX CONCURRENTLY concur_reindex_part"
  },
  {
    "comment": "create_index - Statement 381",
    "query": "REINDEX INDEX concur_reindex_part_10"
  },
  {
    "comment": "create_index - Statement 382",
    "query": "REINDEX INDEX CONCURRENTLY concur_reindex_part_10"
  },
  {
    "comment": "create_index - Statement 383",
    "query": "REINDEX TABLE concur_reindex_part"
  },
  {
    "comment": "create_index - Statement 384",
    "query": "REINDEX TABLE CONCURRENTLY concur_reindex_part"
  },
  {
    "comment": "create_index - Statement 385",
    "query": "DROP FUNCTION create_relfilenode_part"
  },
  {
    "comment": "create_index - Statement 386",
    "query": "DROP FUNCTION compare_relfilenode_part"
  },
  {
    "comment": "create_index - Statement 387",
    "query": "DROP TABLE concur_reindex_part"
  },
  {
    "comment": "create_index - Statement 388",
    "query": "REINDEX TABLE CONCURRENTLY pg_class"
  },
  {
    "comment": "create_index - Statement 389",
    "query": "REINDEX INDEX CONCURRENTLY pg_class_oid_index"
  },
  {
    "comment": "create_index - Statement 390",
    "query": "REINDEX TABLE CONCURRENTLY pg_toast.pg_toast_1260"
  },
  {
    "comment": "create_index - Statement 391",
    "query": "REINDEX INDEX CONCURRENTLY pg_toast.pg_toast_1260_index"
  },
  {
    "comment": "create_index - Statement 392",
    "query": "REINDEX SYSTEM CONCURRENTLY postgres"
  },
  {
    "comment": "create_index - Statement 393",
    "query": "REINDEX (CONCURRENTLY) SYSTEM postgres"
  },
  {
    "comment": "create_index - Statement 394",
    "query": "REINDEX (CONCURRENTLY) SYSTEM"
  },
  {
    "comment": "create_index - Statement 395",
    "query": "REINDEX SCHEMA CONCURRENTLY pg_catalog"
  },
  {
    "comment": "create_index - Statement 396",
    "query": "REINDEX DATABASE not_current_database"
  },
  {
    "comment": "create_index - Statement 397",
    "query": "DROP TABLE concur_reindex_tab, concur_reindex_tab2, concur_reindex_tab3"
  },
  {
    "comment": "create_index - Statement 398",
    "query": "CREATE TABLE concur_reindex_tab4 (c1 int)"
  },
  {
    "comment": "create_index - Statement 399",
    "query": "INSERT INTO concur_reindex_tab4 VALUES (1), (1), (2)"
  },
  {
    "comment": "create_index - Statement 400",
    "query": "CREATE UNIQUE INDEX CONCURRENTLY concur_reindex_ind5 ON concur_reindex_tab4 (c1)"
  },
  {
    "comment": "create_index - Statement 401",
    "query": "REINDEX INDEX CONCURRENTLY concur_reindex_ind5"
  },
  {
    "comment": "create_index - Statement 402",
    "query": "DELETE FROM concur_reindex_tab4 WHERE c1 = 1"
  },
  {
    "comment": "create_index - Statement 403",
    "query": "REINDEX TABLE CONCURRENTLY concur_reindex_tab4"
  },
  {
    "comment": "create_index - Statement 404",
    "query": "CREATE TABLE concur_exprs_tab (c1 int , c2 boolean)"
  },
  {
    "comment": "create_index - Statement 405",
    "query": "INSERT INTO concur_exprs_tab (c1, c2) VALUES (1369652450, FALSE), (414515746, TRUE), (897778963, FALSE)"
  },
  {
    "comment": "create_index - Statement 406",
    "query": "CREATE UNIQUE INDEX concur_exprs_index_expr ON concur_exprs_tab ((c1::text COLLATE \"C\"))"
  },
  {
    "comment": "create_index - Statement 407",
    "query": "CREATE UNIQUE INDEX concur_exprs_index_pred ON concur_exprs_tab (c1) WHERE (c1::text > 500000000::text COLLATE \"C\")"
  },
  {
    "comment": "create_index - Statement 408",
    "query": "CREATE UNIQUE INDEX concur_exprs_index_pred_2 ON concur_exprs_tab ((1 / c1)) WHERE ('-H') >= (c2::TEXT) COLLATE \"C\""
  },
  {
    "comment": "create_index - Statement 409",
    "query": "ALTER INDEX concur_exprs_index_expr ALTER COLUMN 1 SET STATISTICS 100"
  },
  {
    "comment": "create_index - Statement 410",
    "query": "ANALYZE concur_exprs_tab"
  },
  {
    "comment": "create_index - Statement 411",
    "query": "SELECT starelid::regclass, count(*) FROM pg_statistic WHERE starelid IN ( 'concur_exprs_index_expr'::regclass, 'concur_exprs_index_pred'::regclass, 'concur_exprs_index_pred_2'::regclass) GROUP BY starelid ORDER BY starelid::regclass::text"
  },
  {
    "comment": "create_index - Statement 412",
    "query": "SELECT pg_get_indexdef('concur_exprs_index_expr'::regclass)"
  },
  {
    "comment": "create_index - Statement 413",
    "query": "SELECT pg_get_indexdef('concur_exprs_index_pred'::regclass)"
  },
  {
    "comment": "create_index - Statement 414",
    "query": "SELECT pg_get_indexdef('concur_exprs_index_pred_2'::regclass)"
  },
  {
    "comment": "create_index - Statement 415",
    "query": "REINDEX TABLE CONCURRENTLY concur_exprs_tab"
  },
  {
    "comment": "create_index - Statement 416",
    "query": "ALTER TABLE concur_exprs_tab ALTER c2 TYPE TEXT"
  },
  {
    "comment": "create_index - Statement 417",
    "query": "SELECT attrelid::regclass, attnum, attstattarget FROM pg_attribute WHERE attrelid IN ( 'concur_exprs_index_expr'::regclass, 'concur_exprs_index_pred'::regclass, 'concur_exprs_index_pred_2'::regclass) ORDER BY attrelid::regclass::text, attnum"
  },
  {
    "comment": "create_index - Statement 418",
    "query": "DROP TABLE concur_exprs_tab"
  },
  {
    "comment": "create_index - Statement 419",
    "query": "CREATE TEMP TABLE concur_temp_tab_1 (c1 int, c2 text) ON COMMIT PRESERVE ROWS"
  },
  {
    "comment": "create_index - Statement 420",
    "query": "INSERT INTO concur_temp_tab_1 VALUES (1, 'foo'), (2, 'bar')"
  },
  {
    "comment": "create_index - Statement 421",
    "query": "CREATE INDEX concur_temp_ind_1 ON concur_temp_tab_1(c2)"
  },
  {
    "comment": "create_index - Statement 422",
    "query": "REINDEX TABLE CONCURRENTLY concur_temp_tab_1"
  },
  {
    "comment": "create_index - Statement 423",
    "query": "REINDEX INDEX CONCURRENTLY concur_temp_ind_1"
  },
  {
    "comment": "create_index - Statement 424",
    "query": "CREATE TEMP TABLE concur_temp_tab_2 (c1 int, c2 text) ON COMMIT DELETE ROWS"
  },
  {
    "comment": "create_index - Statement 425",
    "query": "CREATE INDEX concur_temp_ind_2 ON concur_temp_tab_2(c2)"
  },
  {
    "comment": "create_index - Statement 426",
    "query": "REINDEX TABLE CONCURRENTLY concur_temp_tab_2"
  },
  {
    "comment": "create_index - Statement 427",
    "query": "REINDEX INDEX CONCURRENTLY concur_temp_ind_2"
  },
  {
    "comment": "create_index - Statement 428",
    "query": "CREATE TEMP TABLE concur_temp_tab_3 (c1 int, c2 text) ON COMMIT PRESERVE ROWS"
  },
  {
    "comment": "create_index - Statement 429",
    "query": "INSERT INTO concur_temp_tab_3 VALUES (1, 'foo'), (2, 'bar')"
  },
  {
    "comment": "create_index - Statement 430",
    "query": "CREATE INDEX concur_temp_ind_3 ON concur_temp_tab_3(c2)"
  },
  {
    "comment": "create_index - Statement 431",
    "query": "REINDEX INDEX CONCURRENTLY concur_temp_ind_3"
  },
  {
    "comment": "create_index - Statement 432",
    "query": "CREATE TABLE reindex_temp_before AS SELECT oid, relname, relfilenode, relkind, reltoastrelid FROM pg_class WHERE relname IN ('concur_temp_ind_1', 'concur_temp_ind_2')"
  },
  {
    "comment": "create_index - Statement 433",
    "query": "SELECT pg_my_temp_schema()::regnamespace as temp_schema_name"
  },
  {
    "comment": "create_index - Statement 434",
    "query": "REINDEX SCHEMA CONCURRENTLY :temp_schema_name"
  },
  {
    "comment": "create_index - Statement 435",
    "query": "SELECT  b.relname, b.relkind, CASE WHEN a.relfilenode = b.relfilenode THEN 'relfilenode is unchanged' ELSE 'relfilenode has changed' END FROM reindex_temp_before b JOIN pg_class a ON b.oid = a.oid ORDER BY 1"
  },
  {
    "comment": "create_index - Statement 436",
    "query": "DROP TABLE concur_temp_tab_1, concur_temp_tab_2, reindex_temp_before"
  },
  {
    "comment": "create_index - Statement 437",
    "query": "REINDEX SCHEMA schema_to_reindex"
  },
  {
    "comment": "create_index - Statement 438",
    "query": "CREATE SCHEMA schema_to_reindex"
  },
  {
    "comment": "create_index - Statement 439",
    "query": "SET search_path = 'schema_to_reindex'"
  },
  {
    "comment": "create_index - Statement 440",
    "query": "CREATE TABLE table1(col1 SERIAL PRIMARY KEY)"
  },
  {
    "comment": "create_index - Statement 441",
    "query": "INSERT INTO table1 SELECT generate_series(1,400)"
  },
  {
    "comment": "create_index - Statement 442",
    "query": "CREATE TABLE table2(col1 SERIAL PRIMARY KEY, col2 TEXT NOT NULL)"
  },
  {
    "comment": "create_index - Statement 443",
    "query": "INSERT INTO table2 SELECT generate_series(1,400), 'abc'"
  },
  {
    "comment": "create_index - Statement 444",
    "query": "CREATE INDEX ON table2(col2)"
  },
  {
    "comment": "create_index - Statement 445",
    "query": "CREATE MATERIALIZED VIEW matview AS SELECT col1 FROM table2"
  },
  {
    "comment": "create_index - Statement 446",
    "query": "CREATE INDEX ON matview(col1)"
  },
  {
    "comment": "create_index - Statement 447",
    "query": "CREATE VIEW view AS SELECT col2 FROM table2"
  },
  {
    "comment": "create_index - Statement 448",
    "query": "CREATE TABLE reindex_before AS SELECT oid, relname, relfilenode, relkind, reltoastrelid FROM pg_class where relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'schema_to_reindex')"
  },
  {
    "comment": "create_index - Statement 449",
    "query": "INSERT INTO reindex_before SELECT oid, 'pg_toast_TABLE', relfilenode, relkind, reltoastrelid FROM pg_class WHERE oid IN (SELECT reltoastrelid FROM reindex_before WHERE reltoastrelid > 0)"
  },
  {
    "comment": "create_index - Statement 450",
    "query": "INSERT INTO reindex_before SELECT oid, 'pg_toast_TABLE_index', relfilenode, relkind, reltoastrelid FROM pg_class where oid in (select indexrelid from pg_index where indrelid in (select reltoastrelid from reindex_before where reltoastrelid > 0))"
  },
  {
    "comment": "create_index - Statement 451",
    "query": "CREATE TABLE reindex_after AS SELECT oid, relname, relfilenode, relkind FROM pg_class where relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'schema_to_reindex')"
  },
  {
    "comment": "create_index - Statement 452",
    "query": "SELECT  b.relname, b.relkind, CASE WHEN a.relfilenode = b.relfilenode THEN 'relfilenode is unchanged' ELSE 'relfilenode has changed' END FROM reindex_before b JOIN pg_class a ON b.oid = a.oid ORDER BY 1"
  },
  {
    "comment": "create_index - Statement 453",
    "query": "END"
  },
  {
    "comment": "create_index - Statement 454",
    "query": "REINDEX SCHEMA CONCURRENTLY schema_to_reindex"
  },
  {
    "comment": "create_index - Statement 455",
    "query": "CREATE ROLE regress_reindexuser NOLOGIN"
  },
  {
    "comment": "create_index - Statement 456",
    "query": "SET SESSION ROLE regress_reindexuser"
  },
  {
    "comment": "create_index - Statement 457",
    "query": "RESET ROLE"
  },
  {
    "comment": "create_index - Statement 458",
    "query": "GRANT USAGE ON SCHEMA pg_toast TO regress_reindexuser"
  },
  {
    "comment": "create_index - Statement 459",
    "query": "REINDEX TABLE pg_toast.pg_toast_1260"
  },
  {
    "comment": "create_index - Statement 460",
    "query": "REINDEX INDEX pg_toast.pg_toast_1260_index"
  },
  {
    "comment": "create_index - Statement 461",
    "query": "REVOKE USAGE ON SCHEMA pg_toast FROM regress_reindexuser"
  },
  {
    "comment": "create_index - Statement 462",
    "query": "DROP ROLE regress_reindexuser"
  },
  {
    "comment": "create_index - Statement 463",
    "query": "DROP SCHEMA schema_to_reindex CASCADE"
  }
]