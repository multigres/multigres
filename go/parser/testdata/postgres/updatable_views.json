[
  {
    "comment": "updatable_views - Statement 1",
    "query": "SET extra_float_digits = 0"
  },
  {
    "comment": "updatable_views - Statement 2",
    "query": "CREATE TABLE base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified')"
  },
  {
    "comment": "updatable_views - Statement 3",
    "query": "INSERT INTO base_tbl SELECT i, 'Row ' || i FROM generate_series(-2, 2) g(i)"
  },
  {
    "comment": "updatable_views - Statement 4",
    "query": "CREATE VIEW ro_view1 AS SELECT DISTINCT a, b FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 5",
    "query": "CREATE VIEW ro_view2 AS SELECT a, b FROM base_tbl GROUP BY a, b"
  },
  {
    "comment": "updatable_views - Statement 6",
    "query": "CREATE VIEW ro_view3 AS SELECT 1 FROM base_tbl HAVING max(a) > 0"
  },
  {
    "comment": "updatable_views - Statement 7",
    "query": "CREATE VIEW ro_view4 AS SELECT count(*) FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 8",
    "query": "CREATE VIEW ro_view5 AS SELECT a, rank() OVER() FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 9",
    "query": "CREATE VIEW ro_view6 AS SELECT a, b FROM base_tbl UNION SELECT -a, b FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 10",
    "query": "CREATE VIEW ro_view7 AS WITH t AS (SELECT a, b FROM base_tbl) SELECT * FROM t"
  },
  {
    "comment": "updatable_views - Statement 11",
    "query": "CREATE VIEW ro_view8 AS SELECT a, b FROM base_tbl ORDER BY a OFFSET 1"
  },
  {
    "comment": "updatable_views - Statement 12",
    "query": "CREATE VIEW ro_view9 AS SELECT a, b FROM base_tbl ORDER BY a LIMIT 1"
  },
  {
    "comment": "updatable_views - Statement 13",
    "query": "CREATE VIEW ro_view10 AS SELECT 1 AS a"
  },
  {
    "comment": "updatable_views - Statement 14",
    "query": "CREATE VIEW ro_view11 AS SELECT b1.a, b2.b FROM base_tbl b1, base_tbl b2"
  },
  {
    "comment": "updatable_views - Statement 15",
    "query": "CREATE VIEW ro_view12 AS SELECT * FROM generate_series(1, 10) AS g(a)"
  },
  {
    "comment": "updatable_views - Statement 16",
    "query": "CREATE VIEW ro_view13 AS SELECT a, b FROM (SELECT * FROM base_tbl) AS t"
  },
  {
    "comment": "updatable_views - Statement 17",
    "query": "CREATE VIEW rw_view14 AS SELECT ctid, a, b FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 18",
    "query": "CREATE VIEW rw_view15 AS SELECT a, upper(b) FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 19",
    "query": "CREATE VIEW rw_view16 AS SELECT a, b, a AS aa FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 20",
    "query": "CREATE VIEW ro_view17 AS SELECT * FROM ro_view1"
  },
  {
    "comment": "updatable_views - Statement 21",
    "query": "CREATE VIEW ro_view18 AS SELECT * FROM (VALUES(1)) AS tmp(a)"
  },
  {
    "comment": "updatable_views - Statement 22",
    "query": "CREATE SEQUENCE uv_seq"
  },
  {
    "comment": "updatable_views - Statement 23",
    "query": "CREATE VIEW ro_view19 AS SELECT * FROM uv_seq"
  },
  {
    "comment": "updatable_views - Statement 24",
    "query": "CREATE VIEW ro_view20 AS SELECT a, b, generate_series(1, a) g FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 25",
    "query": "SELECT table_name, is_insertable_into FROM information_schema.tables WHERE table_name LIKE E'r_\\\\_view%' ORDER BY table_name"
  },
  {
    "comment": "updatable_views - Statement 26",
    "query": "SELECT table_name, is_updatable, is_insertable_into FROM information_schema.views WHERE table_name LIKE E'r_\\\\_view%' ORDER BY table_name"
  },
  {
    "comment": "updatable_views - Statement 27",
    "query": "SELECT table_name, column_name, is_updatable FROM information_schema.columns WHERE table_name LIKE E'r_\\\\_view%' ORDER BY table_name, ordinal_position"
  },
  {
    "comment": "updatable_views - Statement 28",
    "query": "DELETE FROM ro_view1"
  },
  {
    "comment": "updatable_views - Statement 29",
    "query": "DELETE FROM ro_view2"
  },
  {
    "comment": "updatable_views - Statement 30",
    "query": "DELETE FROM ro_view3"
  },
  {
    "comment": "updatable_views - Statement 31",
    "query": "DELETE FROM ro_view4"
  },
  {
    "comment": "updatable_views - Statement 32",
    "query": "DELETE FROM ro_view5"
  },
  {
    "comment": "updatable_views - Statement 33",
    "query": "DELETE FROM ro_view6"
  },
  {
    "comment": "updatable_views - Statement 34",
    "query": "UPDATE ro_view7 SET a=a+1"
  },
  {
    "comment": "updatable_views - Statement 35",
    "query": "UPDATE ro_view8 SET a=a+1"
  },
  {
    "comment": "updatable_views - Statement 36",
    "query": "UPDATE ro_view9 SET a=a+1"
  },
  {
    "comment": "updatable_views - Statement 37",
    "query": "UPDATE ro_view10 SET a=a+1"
  },
  {
    "comment": "updatable_views - Statement 38",
    "query": "UPDATE ro_view11 SET a=a+1"
  },
  {
    "comment": "updatable_views - Statement 39",
    "query": "UPDATE ro_view12 SET a=a+1"
  },
  {
    "comment": "updatable_views - Statement 40",
    "query": "INSERT INTO ro_view13 VALUES (3, 'Row 3')"
  },
  {
    "comment": "updatable_views - Statement 41",
    "query": "MERGE INTO ro_view13 AS t USING (VALUES (1, 'Row 1')) AS v(a,b) ON t.a = v.a WHEN MATCHED THEN DELETE"
  },
  {
    "comment": "updatable_views - Statement 42",
    "query": "MERGE INTO ro_view13 AS t USING (VALUES (2, 'Row 2')) AS v(a,b) ON t.a = v.a WHEN MATCHED THEN UPDATE SET b = v.b"
  },
  {
    "comment": "updatable_views - Statement 43",
    "query": "MERGE INTO ro_view13 AS t USING (VALUES (3, 'Row 3')) AS v(a,b) ON t.a = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.a, v.b)"
  },
  {
    "comment": "updatable_views - Statement 44",
    "query": "MERGE INTO ro_view13 AS t USING (VALUES (2, 'Row 2')) AS v(a,b) ON t.a = v.a WHEN MATCHED THEN DO NOTHING WHEN NOT MATCHED THEN DO NOTHING"
  },
  {
    "comment": "updatable_views - Statement 45",
    "query": "MERGE INTO ro_view13 AS t USING (VALUES (3, 'Row 3')) AS v(a,b) ON t.a = v.a WHEN MATCHED THEN DO NOTHING WHEN NOT MATCHED THEN DO NOTHING"
  },
  {
    "comment": "updatable_views - Statement 46",
    "query": "INSERT INTO rw_view14 VALUES (null, 3, 'Row 3')"
  },
  {
    "comment": "updatable_views - Statement 47",
    "query": "INSERT INTO rw_view14 (a, b) VALUES (3, 'Row 3')"
  },
  {
    "comment": "updatable_views - Statement 48",
    "query": "UPDATE rw_view14 SET ctid=null WHERE a=3"
  },
  {
    "comment": "updatable_views - Statement 49",
    "query": "UPDATE rw_view14 SET b='ROW 3' WHERE a=3"
  },
  {
    "comment": "updatable_views - Statement 50",
    "query": "SELECT * FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 51",
    "query": "DELETE FROM rw_view14 WHERE a=3"
  },
  {
    "comment": "updatable_views - Statement 52",
    "query": "MERGE INTO rw_view14  AS t USING (VALUES (2, 'Merged row 2'), (3, 'Merged row 3')) AS v(a,b) ON t.a = v.a WHEN MATCHED THEN UPDATE SET b = v.b WHEN NOT MATCHED THEN INSERT VALUES (null, v.a, v.b)"
  },
  {
    "comment": "updatable_views - Statement 53",
    "query": "MERGE INTO rw_view14  AS t USING (VALUES (2, 'Merged row 2'), (3, 'Merged row 3')) AS v(a,b) ON t.a = v.a WHEN MATCHED THEN UPDATE SET b = v.b WHEN NOT MATCHED THEN INSERT (a,b) VALUES (v.a, v.b)"
  },
  {
    "comment": "updatable_views - Statement 54",
    "query": "SELECT * FROM base_tbl ORDER BY a"
  },
  {
    "comment": "updatable_views - Statement 55",
    "query": "MERGE INTO rw_view14  AS t USING (VALUES (2, 'Row 2'), (3, 'Row 3')) AS v(a,b) ON t.a = v.a WHEN MATCHED AND t.a = 2 THEN UPDATE SET b = v.b WHEN MATCHED AND t.a = 3 THEN DELETE"
  },
  {
    "comment": "updatable_views - Statement 56",
    "query": "INSERT INTO rw_view15 VALUES (3, 'ROW 3')"
  },
  {
    "comment": "updatable_views - Statement 57",
    "query": "INSERT INTO rw_view15 (a) VALUES (3)"
  },
  {
    "comment": "updatable_views - Statement 58",
    "query": "INSERT INTO rw_view15 (a) VALUES (3) ON CONFLICT DO NOTHING"
  },
  {
    "comment": "updatable_views - Statement 59",
    "query": "SELECT * FROM rw_view15"
  },
  {
    "comment": "updatable_views - Statement 60",
    "query": "INSERT INTO rw_view15 (a) VALUES (3) ON CONFLICT (a) DO NOTHING"
  },
  {
    "comment": "updatable_views - Statement 61",
    "query": "INSERT INTO rw_view15 (a) VALUES (3) ON CONFLICT (a) DO UPDATE set a = excluded.a"
  },
  {
    "comment": "updatable_views - Statement 62",
    "query": "INSERT INTO rw_view15 (a) VALUES (3) ON CONFLICT (a) DO UPDATE set upper = 'blarg'"
  },
  {
    "comment": "updatable_views - Statement 63",
    "query": "ALTER VIEW rw_view15 ALTER COLUMN upper SET DEFAULT 'NOT SET'"
  },
  {
    "comment": "updatable_views - Statement 64",
    "query": "INSERT INTO rw_view15 (a) VALUES (4)"
  },
  {
    "comment": "updatable_views - Statement 65",
    "query": "UPDATE rw_view15 SET upper='ROW 3' WHERE a=3"
  },
  {
    "comment": "updatable_views - Statement 66",
    "query": "UPDATE rw_view15 SET upper=DEFAULT WHERE a=3"
  },
  {
    "comment": "updatable_views - Statement 67",
    "query": "UPDATE rw_view15 SET a=4 WHERE a=3"
  },
  {
    "comment": "updatable_views - Statement 68",
    "query": "DELETE FROM rw_view15 WHERE a=4"
  },
  {
    "comment": "updatable_views - Statement 69",
    "query": "INSERT INTO rw_view16 VALUES (3, 'Row 3', 3)"
  },
  {
    "comment": "updatable_views - Statement 70",
    "query": "INSERT INTO rw_view16 (a, b) VALUES (3, 'Row 3')"
  },
  {
    "comment": "updatable_views - Statement 71",
    "query": "UPDATE rw_view16 SET a=3, aa=-3 WHERE a=3"
  },
  {
    "comment": "updatable_views - Statement 72",
    "query": "UPDATE rw_view16 SET aa=-3 WHERE a=3"
  },
  {
    "comment": "updatable_views - Statement 73",
    "query": "DELETE FROM rw_view16 WHERE a=-3"
  },
  {
    "comment": "updatable_views - Statement 74",
    "query": "INSERT INTO ro_view17 VALUES (3, 'ROW 3')"
  },
  {
    "comment": "updatable_views - Statement 75",
    "query": "DELETE FROM ro_view18"
  },
  {
    "comment": "updatable_views - Statement 76",
    "query": "MERGE INTO ro_view18 AS t USING (VALUES (1, 'Row 1')) AS v(a,b) ON t.a = v.a WHEN MATCHED THEN DO NOTHING"
  },
  {
    "comment": "updatable_views - Statement 77",
    "query": "UPDATE ro_view19 SET last_value=1000"
  },
  {
    "comment": "updatable_views - Statement 78",
    "query": "UPDATE ro_view20 SET b=upper(b)"
  },
  {
    "comment": "updatable_views - Statement 79",
    "query": "CREATE RULE rw_view16_ins_rule AS ON INSERT TO rw_view16 WHERE NEW.a > 0 DO INSTEAD INSERT INTO base_tbl VALUES (NEW.a, NEW.b)"
  },
  {
    "comment": "updatable_views - Statement 80",
    "query": "CREATE RULE rw_view16_upd_rule AS ON UPDATE TO rw_view16 WHERE OLD.a > 0 DO INSTEAD UPDATE base_tbl SET b=NEW.b WHERE a=OLD.a"
  },
  {
    "comment": "updatable_views - Statement 81",
    "query": "CREATE RULE rw_view16_del_rule AS ON DELETE TO rw_view16 WHERE OLD.a > 0 DO INSTEAD DELETE FROM base_tbl WHERE a=OLD.a"
  },
  {
    "comment": "updatable_views - Statement 82",
    "query": "UPDATE rw_view16 SET b='ROW 2' WHERE a=2"
  },
  {
    "comment": "updatable_views - Statement 83",
    "query": "DELETE FROM rw_view16 WHERE a=2"
  },
  {
    "comment": "updatable_views - Statement 84",
    "query": "MERGE INTO rw_view16 AS t USING (VALUES (3, 'Row 3')) AS v(a,b) ON t.a = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.a, v.b)"
  },
  {
    "comment": "updatable_views - Statement 85",
    "query": "DROP TABLE base_tbl CASCADE"
  },
  {
    "comment": "updatable_views - Statement 86",
    "query": "DROP VIEW ro_view10, ro_view12, ro_view18"
  },
  {
    "comment": "updatable_views - Statement 87",
    "query": "DROP SEQUENCE uv_seq CASCADE"
  },
  {
    "comment": "updatable_views - Statement 88",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl WHERE a>0"
  },
  {
    "comment": "updatable_views - Statement 89",
    "query": "SELECT table_name, is_insertable_into FROM information_schema.tables WHERE table_name = 'rw_view1'"
  },
  {
    "comment": "updatable_views - Statement 90",
    "query": "SELECT table_name, is_updatable, is_insertable_into FROM information_schema.views WHERE table_name = 'rw_view1'"
  },
  {
    "comment": "updatable_views - Statement 91",
    "query": "SELECT table_name, column_name, is_updatable FROM information_schema.columns WHERE table_name = 'rw_view1' ORDER BY ordinal_position"
  },
  {
    "comment": "updatable_views - Statement 92",
    "query": "INSERT INTO rw_view1 VALUES (3, 'Row 3')"
  },
  {
    "comment": "updatable_views - Statement 93",
    "query": "INSERT INTO rw_view1 (a) VALUES (4)"
  },
  {
    "comment": "updatable_views - Statement 94",
    "query": "UPDATE rw_view1 SET a=5 WHERE a=4"
  },
  {
    "comment": "updatable_views - Statement 95",
    "query": "DELETE FROM rw_view1 WHERE b='Row 2'"
  },
  {
    "comment": "updatable_views - Statement 96",
    "query": "MERGE INTO rw_view1 t USING (VALUES (0, 'ROW 0'), (1, 'ROW 1'), (2, 'ROW 2'), (3, 'ROW 3')) AS v(a,b) ON t.a = v.a WHEN MATCHED AND t.a <= 1 THEN UPDATE SET b = v.b WHEN MATCHED THEN DELETE WHEN NOT MATCHED AND a > 0 THEN INSERT (a) VALUES (v.a) RETURNING merge_action(), v.*, t.*"
  },
  {
    "comment": "updatable_views - Statement 97",
    "query": "MERGE INTO rw_view1 t USING (VALUES (0, 'R0'), (1, 'R1'), (2, 'R2'), (3, 'R3')) AS v(a,b) ON t.a = v.a WHEN MATCHED AND t.a <= 1 THEN UPDATE SET b = v.b WHEN MATCHED THEN DELETE WHEN NOT MATCHED BY SOURCE THEN DELETE WHEN NOT MATCHED AND a > 0 THEN INSERT (a) VALUES (v.a) RETURNING merge_action(), v.*, t.*"
  },
  {
    "comment": "updatable_views - Statement 98",
    "query": "EXPLAIN (costs off) UPDATE rw_view1 SET a=6 WHERE a=5"
  },
  {
    "comment": "updatable_views - Statement 99",
    "query": "EXPLAIN (costs off) DELETE FROM rw_view1 WHERE a=5"
  },
  {
    "comment": "updatable_views - Statement 100",
    "query": "EXPLAIN (costs off) MERGE INTO rw_view1 t USING (VALUES (5, 'X')) AS v(a,b) ON t.a = v.a WHEN MATCHED THEN DELETE"
  },
  {
    "comment": "updatable_views - Statement 101",
    "query": "EXPLAIN (costs off) MERGE INTO rw_view1 t USING (SELECT * FROM generate_series(1,5)) AS s(a) ON t.a = s.a WHEN MATCHED THEN UPDATE SET b = 'Updated'"
  },
  {
    "comment": "updatable_views - Statement 102",
    "query": "EXPLAIN (costs off) MERGE INTO rw_view1 t USING (SELECT * FROM generate_series(1,5)) AS s(a) ON t.a = s.a WHEN NOT MATCHED BY SOURCE THEN DELETE"
  },
  {
    "comment": "updatable_views - Statement 103",
    "query": "EXPLAIN (costs off) MERGE INTO rw_view1 t USING (SELECT * FROM generate_series(1,5)) AS s(a) ON t.a = s.a WHEN NOT MATCHED THEN INSERT (a) VALUES (s.a)"
  },
  {
    "comment": "updatable_views - Statement 104",
    "query": "CREATE TABLE base_tbl_hist(ts timestamptz default now(), a int, b text)"
  },
  {
    "comment": "updatable_views - Statement 105",
    "query": "CREATE RULE base_tbl_log AS ON INSERT TO rw_view1 DO ALSO INSERT INTO base_tbl_hist(a,b) VALUES(new.a, new.b)"
  },
  {
    "comment": "updatable_views - Statement 106",
    "query": "INSERT INTO rw_view1 VALUES (9, DEFAULT), (10, DEFAULT)"
  },
  {
    "comment": "updatable_views - Statement 107",
    "query": "SELECT a, b FROM base_tbl_hist"
  },
  {
    "comment": "updatable_views - Statement 108",
    "query": "DROP TABLE base_tbl_hist"
  },
  {
    "comment": "updatable_views - Statement 109",
    "query": "CREATE VIEW rw_view1 AS SELECT b AS bb, a AS aa FROM base_tbl WHERE a>0"
  },
  {
    "comment": "updatable_views - Statement 110",
    "query": "CREATE VIEW rw_view2 AS SELECT aa AS aaa, bb AS bbb FROM rw_view1 WHERE aa<10"
  },
  {
    "comment": "updatable_views - Statement 111",
    "query": "SELECT table_name, is_insertable_into FROM information_schema.tables WHERE table_name = 'rw_view2'"
  },
  {
    "comment": "updatable_views - Statement 112",
    "query": "SELECT table_name, is_updatable, is_insertable_into FROM information_schema.views WHERE table_name = 'rw_view2'"
  },
  {
    "comment": "updatable_views - Statement 113",
    "query": "SELECT table_name, column_name, is_updatable FROM information_schema.columns WHERE table_name = 'rw_view2' ORDER BY ordinal_position"
  },
  {
    "comment": "updatable_views - Statement 114",
    "query": "INSERT INTO rw_view2 VALUES (3, 'Row 3')"
  },
  {
    "comment": "updatable_views - Statement 115",
    "query": "INSERT INTO rw_view2 (aaa) VALUES (4)"
  },
  {
    "comment": "updatable_views - Statement 116",
    "query": "SELECT * FROM rw_view2"
  },
  {
    "comment": "updatable_views - Statement 117",
    "query": "UPDATE rw_view2 SET bbb='Row 4' WHERE aaa=4"
  },
  {
    "comment": "updatable_views - Statement 118",
    "query": "DELETE FROM rw_view2 WHERE aaa=2"
  },
  {
    "comment": "updatable_views - Statement 119",
    "query": "MERGE INTO rw_view2 t USING (VALUES (3, 'R3'), (4, 'R4'), (5, 'R5')) AS v(a,b) ON aaa = v.a WHEN MATCHED AND aaa = 3 THEN DELETE WHEN MATCHED THEN UPDATE SET bbb = v.b WHEN NOT MATCHED THEN INSERT (aaa) VALUES (v.a) RETURNING merge_action(), v.*, t.*"
  },
  {
    "comment": "updatable_views - Statement 120",
    "query": "SELECT * FROM rw_view2 ORDER BY aaa"
  },
  {
    "comment": "updatable_views - Statement 121",
    "query": "MERGE INTO rw_view2 t USING (VALUES (4, 'r4'), (5, 'r5'), (6, 'r6')) AS v(a,b) ON aaa = v.a WHEN MATCHED AND aaa = 4 THEN DELETE WHEN MATCHED THEN UPDATE SET bbb = v.b WHEN NOT MATCHED THEN INSERT (aaa) VALUES (v.a) WHEN NOT MATCHED BY SOURCE THEN UPDATE SET bbb = 'Not matched by source' RETURNING merge_action(), v.*, t.*"
  },
  {
    "comment": "updatable_views - Statement 122",
    "query": "EXPLAIN (costs off) UPDATE rw_view2 SET aaa=5 WHERE aaa=4"
  },
  {
    "comment": "updatable_views - Statement 123",
    "query": "EXPLAIN (costs off) DELETE FROM rw_view2 WHERE aaa=4"
  },
  {
    "comment": "updatable_views - Statement 124",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl WHERE a>0 OFFSET 0"
  },
  {
    "comment": "updatable_views - Statement 125",
    "query": "CREATE VIEW rw_view2 AS SELECT * FROM rw_view1 WHERE a<10"
  },
  {
    "comment": "updatable_views - Statement 126",
    "query": "SELECT table_name, is_insertable_into FROM information_schema.tables WHERE table_name LIKE 'rw_view%' ORDER BY table_name"
  },
  {
    "comment": "updatable_views - Statement 127",
    "query": "SELECT table_name, is_updatable, is_insertable_into FROM information_schema.views WHERE table_name LIKE 'rw_view%' ORDER BY table_name"
  },
  {
    "comment": "updatable_views - Statement 128",
    "query": "SELECT table_name, column_name, is_updatable FROM information_schema.columns WHERE table_name LIKE 'rw_view%' ORDER BY table_name, ordinal_position"
  },
  {
    "comment": "updatable_views - Statement 129",
    "query": "CREATE RULE rw_view1_ins_rule AS ON INSERT TO rw_view1 DO INSTEAD INSERT INTO base_tbl VALUES (NEW.a, NEW.b) RETURNING *"
  },
  {
    "comment": "updatable_views - Statement 130",
    "query": "CREATE RULE rw_view1_upd_rule AS ON UPDATE TO rw_view1 DO INSTEAD UPDATE base_tbl SET b=NEW.b WHERE a=OLD.a RETURNING NEW.*"
  },
  {
    "comment": "updatable_views - Statement 131",
    "query": "CREATE RULE rw_view1_del_rule AS ON DELETE TO rw_view1 DO INSTEAD DELETE FROM base_tbl WHERE a=OLD.a RETURNING OLD.*"
  },
  {
    "comment": "updatable_views - Statement 132",
    "query": "INSERT INTO rw_view2 VALUES (3, 'Row 3') RETURNING *"
  },
  {
    "comment": "updatable_views - Statement 133",
    "query": "UPDATE rw_view2 SET b='Row three' WHERE a=3 RETURNING *"
  },
  {
    "comment": "updatable_views - Statement 134",
    "query": "DELETE FROM rw_view2 WHERE a=3 RETURNING *"
  },
  {
    "comment": "updatable_views - Statement 135",
    "query": "MERGE INTO rw_view2 t USING (VALUES (3, 'Row 3')) AS v(a,b) ON t.a = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.a, v.b)"
  },
  {
    "comment": "updatable_views - Statement 136",
    "query": "EXPLAIN (costs off) UPDATE rw_view2 SET a=3 WHERE a=2"
  },
  {
    "comment": "updatable_views - Statement 137",
    "query": "EXPLAIN (costs off) DELETE FROM rw_view2 WHERE a=2"
  },
  {
    "comment": "updatable_views - Statement 138",
    "query": "SELECT table_name, is_updatable, is_insertable_into, is_trigger_updatable, is_trigger_deletable, is_trigger_insertable_into FROM information_schema.views WHERE table_name LIKE 'rw_view%' ORDER BY table_name"
  },
  {
    "comment": "updatable_views - Statement 139",
    "query": "CREATE FUNCTION rw_view1_trig_fn() RETURNS trigger AS $$ BEGIN IF TG_OP = 'INSERT' THEN INSERT INTO base_tbl VALUES (NEW.a, NEW.b)"
  },
  {
    "comment": "updatable_views - Statement 140",
    "query": "RETURN NEW"
  },
  {
    "comment": "updatable_views - Statement 141",
    "query": "ELSIF TG_OP = 'UPDATE' THEN UPDATE base_tbl SET b=NEW.b WHERE a=OLD.a"
  },
  {
    "comment": "updatable_views - Statement 142",
    "query": "ELSIF TG_OP = 'DELETE' THEN DELETE FROM base_tbl WHERE a=OLD.a"
  },
  {
    "comment": "updatable_views - Statement 143",
    "query": "RETURN OLD"
  },
  {
    "comment": "updatable_views - Statement 144",
    "query": "END IF"
  },
  {
    "comment": "updatable_views - Statement 145",
    "query": "END"
  },
  {
    "comment": "updatable_views - Statement 146",
    "query": "$$ LANGUAGE plpgsql"
  },
  {
    "comment": "updatable_views - Statement 147",
    "query": "CREATE TRIGGER rw_view1_ins_trig INSTEAD OF INSERT ON rw_view1 FOR EACH ROW EXECUTE PROCEDURE rw_view1_trig_fn()"
  },
  {
    "comment": "updatable_views - Statement 148",
    "query": "CREATE TRIGGER rw_view1_upd_trig INSTEAD OF UPDATE ON rw_view1 FOR EACH ROW EXECUTE PROCEDURE rw_view1_trig_fn()"
  },
  {
    "comment": "updatable_views - Statement 149",
    "query": "CREATE TRIGGER rw_view1_del_trig INSTEAD OF DELETE ON rw_view1 FOR EACH ROW EXECUTE PROCEDURE rw_view1_trig_fn()"
  },
  {
    "comment": "updatable_views - Statement 150",
    "query": "MERGE INTO rw_view2 t USING (SELECT x, 'R'||x FROM generate_series(0,3) x) AS s(a,b) ON t.a = s.a WHEN MATCHED AND t.a <= 1 THEN DELETE WHEN MATCHED THEN UPDATE SET b = s.b WHEN NOT MATCHED AND s.a > 0 THEN INSERT VALUES (s.a, s.b) RETURNING merge_action(), s.*, t.*"
  },
  {
    "comment": "updatable_views - Statement 151",
    "query": "MERGE INTO rw_view2 t USING (SELECT x, 'r'||x FROM generate_series(0,2) x) AS s(a,b) ON t.a = s.a WHEN MATCHED THEN UPDATE SET b = s.b WHEN NOT MATCHED AND s.a > 0 THEN INSERT VALUES (s.a, s.b) WHEN NOT MATCHED BY SOURCE THEN UPDATE SET b = 'Not matched by source' RETURNING merge_action(), s.*, t.*"
  },
  {
    "comment": "updatable_views - Statement 152",
    "query": "EXPLAIN (costs off) MERGE INTO rw_view2 t USING (SELECT x, 'R'||x FROM generate_series(0,3) x) AS s(a,b) ON t.a = s.a WHEN MATCHED AND t.a <= 1 THEN DELETE WHEN MATCHED THEN UPDATE SET b = s.b WHEN NOT MATCHED AND s.a > 0 THEN INSERT VALUES (s.a, s.b)"
  },
  {
    "comment": "updatable_views - Statement 153",
    "query": "DROP TRIGGER rw_view1_del_trig ON rw_view1"
  },
  {
    "comment": "updatable_views - Statement 154",
    "query": "MERGE INTO rw_view2 t USING (SELECT x, 'R'||x FROM generate_series(0,3) x) AS s(a,b) ON t.a = s.a WHEN MATCHED AND t.a <= 1 THEN DELETE WHEN MATCHED THEN UPDATE SET b = s.b WHEN NOT MATCHED AND s.a > 0 THEN INSERT VALUES (s.a, s.b)"
  },
  {
    "comment": "updatable_views - Statement 155",
    "query": "MERGE INTO rw_view2 t USING (SELECT x, 'R'||x FROM generate_series(0,3) x) AS s(a,b) ON t.a = s.a WHEN MATCHED THEN UPDATE SET b = s.b WHEN NOT MATCHED AND s.a > 0 THEN INSERT VALUES (s.a, s.b)"
  },
  {
    "comment": "updatable_views - Statement 156",
    "query": "DROP TRIGGER rw_view1_ins_trig ON rw_view1"
  },
  {
    "comment": "updatable_views - Statement 157",
    "query": "MERGE INTO rw_view2 t USING (SELECT x, 'R'||x FROM generate_series(0,3) x) AS s(a,b) ON t.a = s.a WHEN MATCHED THEN UPDATE SET b = s.b"
  },
  {
    "comment": "updatable_views - Statement 158",
    "query": "CREATE TRIGGER rw_view2_upd_trig INSTEAD OF UPDATE ON rw_view2 FOR EACH ROW EXECUTE PROCEDURE rw_view1_trig_fn()"
  },
  {
    "comment": "updatable_views - Statement 159",
    "query": "DROP FUNCTION rw_view1_trig_fn()"
  },
  {
    "comment": "updatable_views - Statement 160",
    "query": "CREATE VIEW rw_view1 AS SELECT b AS bb, a AS aa FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 161",
    "query": "CREATE FUNCTION rw_view1_aa(x rw_view1) RETURNS int AS $$ SELECT x.aa $$ LANGUAGE sql"
  },
  {
    "comment": "updatable_views - Statement 162",
    "query": "UPDATE rw_view1 v SET bb='Updated row 2' WHERE rw_view1_aa(v)=2 RETURNING rw_view1_aa(v), v.bb"
  },
  {
    "comment": "updatable_views - Statement 163",
    "query": "EXPLAIN (costs off) UPDATE rw_view1 v SET bb='Updated row 2' WHERE rw_view1_aa(v)=2 RETURNING rw_view1_aa(v), v.bb"
  },
  {
    "comment": "updatable_views - Statement 164",
    "query": "CREATE USER regress_view_user1"
  },
  {
    "comment": "updatable_views - Statement 165",
    "query": "CREATE USER regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 166",
    "query": "CREATE USER regress_view_user3"
  },
  {
    "comment": "updatable_views - Statement 167",
    "query": "SET SESSION AUTHORIZATION regress_view_user1"
  },
  {
    "comment": "updatable_views - Statement 168",
    "query": "CREATE TABLE base_tbl(a int, b text, c float)"
  },
  {
    "comment": "updatable_views - Statement 169",
    "query": "INSERT INTO base_tbl VALUES (1, 'Row 1', 1.0)"
  },
  {
    "comment": "updatable_views - Statement 170",
    "query": "CREATE VIEW rw_view1 AS SELECT b AS bb, c AS cc, a AS aa FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 171",
    "query": "INSERT INTO rw_view1 VALUES ('Row 2', 2.0, 2)"
  },
  {
    "comment": "updatable_views - Statement 172",
    "query": "GRANT SELECT ON base_tbl TO regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 173",
    "query": "GRANT SELECT ON rw_view1 TO regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 174",
    "query": "GRANT UPDATE (a,c) ON base_tbl TO regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 175",
    "query": "GRANT UPDATE (bb,cc) ON rw_view1 TO regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 176",
    "query": "RESET SESSION AUTHORIZATION"
  },
  {
    "comment": "updatable_views - Statement 177",
    "query": "SET SESSION AUTHORIZATION regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 178",
    "query": "CREATE VIEW rw_view2 AS SELECT b AS bb, c AS cc, a AS aa FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 179",
    "query": "SELECT * FROM rw_view1"
  },
  {
    "comment": "updatable_views - Statement 180",
    "query": "INSERT INTO base_tbl VALUES (3, 'Row 3', 3.0)"
  },
  {
    "comment": "updatable_views - Statement 181",
    "query": "INSERT INTO rw_view1 VALUES ('Row 3', 3.0, 3)"
  },
  {
    "comment": "updatable_views - Statement 182",
    "query": "INSERT INTO rw_view2 VALUES ('Row 3', 3.0, 3)"
  },
  {
    "comment": "updatable_views - Statement 183",
    "query": "MERGE INTO rw_view1 t USING (VALUES ('Row 3', 3.0, 3)) AS v(b,c,a) ON t.aa = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.b, v.c, v.a)"
  },
  {
    "comment": "updatable_views - Statement 184",
    "query": "MERGE INTO rw_view2 t USING (VALUES ('Row 3', 3.0, 3)) AS v(b,c,a) ON t.aa = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.b, v.c, v.a)"
  },
  {
    "comment": "updatable_views - Statement 185",
    "query": "UPDATE base_tbl SET a=a, c=c"
  },
  {
    "comment": "updatable_views - Statement 186",
    "query": "UPDATE base_tbl SET b=b"
  },
  {
    "comment": "updatable_views - Statement 187",
    "query": "UPDATE rw_view1 SET bb=bb, cc=cc"
  },
  {
    "comment": "updatable_views - Statement 188",
    "query": "UPDATE rw_view1 SET aa=aa"
  },
  {
    "comment": "updatable_views - Statement 189",
    "query": "UPDATE rw_view2 SET aa=aa, cc=cc"
  },
  {
    "comment": "updatable_views - Statement 190",
    "query": "UPDATE rw_view2 SET bb=bb"
  },
  {
    "comment": "updatable_views - Statement 191",
    "query": "MERGE INTO rw_view1 t USING (VALUES (1)) AS v(a) ON t.aa = v.a WHEN MATCHED THEN UPDATE SET bb = bb, cc = cc"
  },
  {
    "comment": "updatable_views - Statement 192",
    "query": "MERGE INTO rw_view1 t USING (VALUES (1)) AS v(a) ON t.aa = v.a WHEN MATCHED THEN UPDATE SET aa = aa"
  },
  {
    "comment": "updatable_views - Statement 193",
    "query": "MERGE INTO rw_view2 t USING (VALUES (1)) AS v(a) ON t.aa = v.a WHEN MATCHED THEN UPDATE SET aa = aa, cc = cc"
  },
  {
    "comment": "updatable_views - Statement 194",
    "query": "MERGE INTO rw_view2 t USING (VALUES (1)) AS v(a) ON t.aa = v.a WHEN MATCHED THEN UPDATE SET bb = bb"
  },
  {
    "comment": "updatable_views - Statement 195",
    "query": "DELETE FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 196",
    "query": "DELETE FROM rw_view1"
  },
  {
    "comment": "updatable_views - Statement 197",
    "query": "DELETE FROM rw_view2"
  },
  {
    "comment": "updatable_views - Statement 198",
    "query": "GRANT INSERT, DELETE ON base_tbl TO regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 199",
    "query": "INSERT INTO rw_view1 VALUES ('Row 4', 4.0, 4)"
  },
  {
    "comment": "updatable_views - Statement 200",
    "query": "INSERT INTO rw_view2 VALUES ('Row 4', 4.0, 4)"
  },
  {
    "comment": "updatable_views - Statement 201",
    "query": "DELETE FROM base_tbl WHERE a=1"
  },
  {
    "comment": "updatable_views - Statement 202",
    "query": "DELETE FROM rw_view1 WHERE aa=2"
  },
  {
    "comment": "updatable_views - Statement 203",
    "query": "DELETE FROM rw_view2 WHERE aa=2"
  },
  {
    "comment": "updatable_views - Statement 204",
    "query": "MERGE INTO rw_view1 t USING (VALUES (1)) AS v(a) ON t.aa = v.a WHEN MATCHED AND bb = 'xxx' THEN DELETE"
  },
  {
    "comment": "updatable_views - Statement 205",
    "query": "MERGE INTO rw_view2 t USING (VALUES (1)) AS v(a) ON t.aa = v.a WHEN MATCHED AND bb = 'xxx' THEN DELETE"
  },
  {
    "comment": "updatable_views - Statement 206",
    "query": "REVOKE INSERT, DELETE ON base_tbl FROM regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 207",
    "query": "GRANT INSERT, DELETE ON rw_view1 TO regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 208",
    "query": "INSERT INTO base_tbl VALUES (5, 'Row 5', 5.0)"
  },
  {
    "comment": "updatable_views - Statement 209",
    "query": "INSERT INTO rw_view1 VALUES ('Row 5', 5.0, 5)"
  },
  {
    "comment": "updatable_views - Statement 210",
    "query": "INSERT INTO rw_view2 VALUES ('Row 6', 6.0, 6)"
  },
  {
    "comment": "updatable_views - Statement 211",
    "query": "DELETE FROM base_tbl WHERE a=3"
  },
  {
    "comment": "updatable_views - Statement 212",
    "query": "DELETE FROM rw_view1 WHERE aa=3"
  },
  {
    "comment": "updatable_views - Statement 213",
    "query": "DELETE FROM rw_view2 WHERE aa=4"
  },
  {
    "comment": "updatable_views - Statement 214",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 215",
    "query": "SELECT * FROM rw_view1 FOR UPDATE"
  },
  {
    "comment": "updatable_views - Statement 216",
    "query": "UPDATE rw_view1 SET b = 'foo' WHERE a = 1"
  },
  {
    "comment": "updatable_views - Statement 217",
    "query": "MERGE INTO rw_view1 t USING (VALUES (1)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET b = 'foo'"
  },
  {
    "comment": "updatable_views - Statement 218",
    "query": "CREATE VIEW rw_view2 AS SELECT * FROM rw_view1"
  },
  {
    "comment": "updatable_views - Statement 219",
    "query": "SELECT * FROM rw_view2 FOR UPDATE"
  },
  {
    "comment": "updatable_views - Statement 220",
    "query": "UPDATE rw_view2 SET b = 'bar' WHERE a = 1"
  },
  {
    "comment": "updatable_views - Statement 221",
    "query": "MERGE INTO rw_view2 t USING (VALUES (1)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET b = 'foo'"
  },
  {
    "comment": "updatable_views - Statement 222",
    "query": "GRANT SELECT ON base_tbl TO regress_view_user1"
  },
  {
    "comment": "updatable_views - Statement 223",
    "query": "GRANT UPDATE ON base_tbl TO regress_view_user1"
  },
  {
    "comment": "updatable_views - Statement 224",
    "query": "MERGE INTO rw_view2 t USING (VALUES (1)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET b = 'bar'"
  },
  {
    "comment": "updatable_views - Statement 225",
    "query": "GRANT UPDATE ON rw_view1 TO regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 226",
    "query": "MERGE INTO rw_view2 t USING (VALUES (1)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET b = 'fud'"
  },
  {
    "comment": "updatable_views - Statement 227",
    "query": "REVOKE UPDATE ON base_tbl FROM regress_view_user1"
  },
  {
    "comment": "updatable_views - Statement 228",
    "query": "ALTER VIEW rw_view1 SET (security_invoker = true)"
  },
  {
    "comment": "updatable_views - Statement 229",
    "query": "UPDATE base_tbl SET a=a"
  },
  {
    "comment": "updatable_views - Statement 230",
    "query": "MERGE INTO rw_view1 t USING (VALUES (1)) AS v(a) ON t.aa = v.a WHEN MATCHED THEN UPDATE SET bb = bb"
  },
  {
    "comment": "updatable_views - Statement 231",
    "query": "MERGE INTO rw_view1 t USING (VALUES (1)) AS v(a) ON t.aa = v.a WHEN MATCHED THEN DELETE"
  },
  {
    "comment": "updatable_views - Statement 232",
    "query": "UPDATE rw_view1 SET cc=cc"
  },
  {
    "comment": "updatable_views - Statement 233",
    "query": "MERGE INTO rw_view1 t USING (VALUES (1)) AS v(a) ON t.aa = v.a WHEN MATCHED THEN UPDATE SET cc = cc"
  },
  {
    "comment": "updatable_views - Statement 234",
    "query": "UPDATE rw_view1 SET bb=bb"
  },
  {
    "comment": "updatable_views - Statement 235",
    "query": "MERGE INTO rw_view1 t USING (VALUES (3)) AS v(a) ON t.aa = v.a WHEN MATCHED THEN DELETE"
  },
  {
    "comment": "updatable_views - Statement 236",
    "query": "MERGE INTO rw_view1 t USING (VALUES (2, 'Row 2', 2.0)) AS v(a,b,c) ON t.aa = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.b, v.c, v.a)"
  },
  {
    "comment": "updatable_views - Statement 237",
    "query": "CREATE VIEW rw_view2 AS SELECT cc AS ccc, aa AS aaa, bb AS bbb FROM rw_view1"
  },
  {
    "comment": "updatable_views - Statement 238",
    "query": "GRANT SELECT, UPDATE ON rw_view2 TO regress_view_user3"
  },
  {
    "comment": "updatable_views - Statement 239",
    "query": "UPDATE rw_view2 SET aaa=aaa"
  },
  {
    "comment": "updatable_views - Statement 240",
    "query": "MERGE INTO rw_view2 t USING (VALUES (2, 'Row 2', 2.0)) AS v(a,b,c) ON t.aaa = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.c, v.a, v.b)"
  },
  {
    "comment": "updatable_views - Statement 241",
    "query": "GRANT UPDATE (a, b) ON base_tbl TO regress_view_user1"
  },
  {
    "comment": "updatable_views - Statement 242",
    "query": "UPDATE rw_view1 SET aa=aa, bb=bb"
  },
  {
    "comment": "updatable_views - Statement 243",
    "query": "MERGE INTO rw_view1 t USING (VALUES (1)) AS v(a) ON t.aa = v.a WHEN MATCHED THEN UPDATE SET aa = aa, bb = bb"
  },
  {
    "comment": "updatable_views - Statement 244",
    "query": "MERGE INTO rw_view2 t USING (VALUES (1)) AS v(a) ON t.aaa = v.a WHEN MATCHED THEN UPDATE SET aaa = aaa"
  },
  {
    "comment": "updatable_views - Statement 245",
    "query": "SET SESSION AUTHORIZATION regress_view_user3"
  },
  {
    "comment": "updatable_views - Statement 246",
    "query": "GRANT UPDATE (bb, cc) ON rw_view1 TO regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 247",
    "query": "UPDATE rw_view2 SET bbb=bbb"
  },
  {
    "comment": "updatable_views - Statement 248",
    "query": "MERGE INTO rw_view2 t USING (VALUES (1)) AS v(a) ON t.aaa = v.a WHEN MATCHED THEN UPDATE SET bbb = bbb"
  },
  {
    "comment": "updatable_views - Statement 249",
    "query": "GRANT UPDATE (a, c) ON base_tbl TO regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 250",
    "query": "UPDATE rw_view2 SET ccc=ccc"
  },
  {
    "comment": "updatable_views - Statement 251",
    "query": "MERGE INTO rw_view2 t USING (VALUES (1)) AS v(a) ON t.aaa = v.a WHEN MATCHED THEN UPDATE SET ccc = ccc"
  },
  {
    "comment": "updatable_views - Statement 252",
    "query": "GRANT SELECT ON base_tbl TO regress_view_user3"
  },
  {
    "comment": "updatable_views - Statement 253",
    "query": "GRANT UPDATE (a, c) ON base_tbl TO regress_view_user3"
  },
  {
    "comment": "updatable_views - Statement 254",
    "query": "REVOKE SELECT, UPDATE ON base_tbl FROM regress_view_user1"
  },
  {
    "comment": "updatable_views - Statement 255",
    "query": "REVOKE SELECT, UPDATE ON base_tbl FROM regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 256",
    "query": "DROP USER regress_view_user1"
  },
  {
    "comment": "updatable_views - Statement 257",
    "query": "DROP USER regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 258",
    "query": "DROP USER regress_view_user3"
  },
  {
    "comment": "updatable_views - Statement 259",
    "query": "CREATE TABLE base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified', c serial)"
  },
  {
    "comment": "updatable_views - Statement 260",
    "query": "INSERT INTO base_tbl VALUES (1, 'Row 1')"
  },
  {
    "comment": "updatable_views - Statement 261",
    "query": "INSERT INTO base_tbl VALUES (2, 'Row 2')"
  },
  {
    "comment": "updatable_views - Statement 262",
    "query": "INSERT INTO base_tbl VALUES (3)"
  },
  {
    "comment": "updatable_views - Statement 263",
    "query": "CREATE VIEW rw_view1 AS SELECT a AS aa, b AS bb FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 264",
    "query": "ALTER VIEW rw_view1 ALTER COLUMN bb SET DEFAULT 'View default'"
  },
  {
    "comment": "updatable_views - Statement 265",
    "query": "INSERT INTO rw_view1 VALUES (4, 'Row 4')"
  },
  {
    "comment": "updatable_views - Statement 266",
    "query": "INSERT INTO rw_view1 (aa) VALUES (5)"
  },
  {
    "comment": "updatable_views - Statement 267",
    "query": "MERGE INTO rw_view1 t USING (VALUES (6)) AS v(a) ON t.aa = v.a WHEN NOT MATCHED THEN INSERT (aa) VALUES (v.a)"
  },
  {
    "comment": "updatable_views - Statement 268",
    "query": "CREATE FUNCTION rw_view1_trig_fn() RETURNS trigger AS $$ BEGIN IF TG_OP = 'INSERT' THEN UPDATE base_tbl SET b=NEW.b WHERE a=1"
  },
  {
    "comment": "updatable_views - Statement 269",
    "query": "RETURN NULL"
  },
  {
    "comment": "updatable_views - Statement 270",
    "query": "CREATE TRIGGER rw_view1_ins_trig AFTER INSERT ON base_tbl FOR EACH ROW EXECUTE PROCEDURE rw_view1_trig_fn()"
  },
  {
    "comment": "updatable_views - Statement 271",
    "query": "DROP VIEW rw_view1"
  },
  {
    "comment": "updatable_views - Statement 272",
    "query": "DROP TRIGGER rw_view1_ins_trig on base_tbl"
  },
  {
    "comment": "updatable_views - Statement 273",
    "query": "DROP TABLE base_tbl"
  },
  {
    "comment": "updatable_views - Statement 274",
    "query": "CREATE TABLE base_tbl (a int, b int)"
  },
  {
    "comment": "updatable_views - Statement 275",
    "query": "INSERT INTO base_tbl VALUES (1,2), (4,5), (3,-3)"
  },
  {
    "comment": "updatable_views - Statement 276",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl ORDER BY a+b"
  },
  {
    "comment": "updatable_views - Statement 277",
    "query": "INSERT INTO rw_view1 VALUES (7,-8)"
  },
  {
    "comment": "updatable_views - Statement 278",
    "query": "EXPLAIN (verbose, costs off) UPDATE rw_view1 SET b = b + 1 RETURNING *"
  },
  {
    "comment": "updatable_views - Statement 279",
    "query": "UPDATE rw_view1 SET b = b + 1 RETURNING *"
  },
  {
    "comment": "updatable_views - Statement 280",
    "query": "CREATE TABLE base_tbl (a int, arr int[])"
  },
  {
    "comment": "updatable_views - Statement 281",
    "query": "INSERT INTO base_tbl VALUES (1,ARRAY[2]), (3,ARRAY[4])"
  },
  {
    "comment": "updatable_views - Statement 282",
    "query": "UPDATE rw_view1 SET arr[1] = 42, arr[2] = 77 WHERE a = 3"
  },
  {
    "comment": "updatable_views - Statement 283",
    "query": "CREATE TABLE base_tbl(a float)"
  },
  {
    "comment": "updatable_views - Statement 284",
    "query": "INSERT INTO base_tbl SELECT i/10.0 FROM generate_series(1,10) g(i)"
  },
  {
    "comment": "updatable_views - Statement 285",
    "query": "CREATE VIEW rw_view1 AS SELECT ctid, sin(a) s, a, cos(a) c FROM base_tbl WHERE a != 0 ORDER BY abs(a)"
  },
  {
    "comment": "updatable_views - Statement 286",
    "query": "INSERT INTO rw_view1 VALUES (null, null, 1.1, null)"
  },
  {
    "comment": "updatable_views - Statement 287",
    "query": "INSERT INTO rw_view1 (s, c, a) VALUES (null, null, 1.1)"
  },
  {
    "comment": "updatable_views - Statement 288",
    "query": "INSERT INTO rw_view1 (s, c, a) VALUES (default, default, 1.1)"
  },
  {
    "comment": "updatable_views - Statement 289",
    "query": "INSERT INTO rw_view1 (a) VALUES (1.1) RETURNING a, s, c"
  },
  {
    "comment": "updatable_views - Statement 290",
    "query": "UPDATE rw_view1 SET s = s WHERE a = 1.1"
  },
  {
    "comment": "updatable_views - Statement 291",
    "query": "UPDATE rw_view1 SET a = 1.05 WHERE a = 1.1 RETURNING s"
  },
  {
    "comment": "updatable_views - Statement 292",
    "query": "DELETE FROM rw_view1 WHERE a = 1.05"
  },
  {
    "comment": "updatable_views - Statement 293",
    "query": "CREATE VIEW rw_view2 AS SELECT s, c, s/c t, a base_a, ctid FROM rw_view1"
  },
  {
    "comment": "updatable_views - Statement 294",
    "query": "INSERT INTO rw_view2 VALUES (null, null, null, 1.1, null)"
  },
  {
    "comment": "updatable_views - Statement 295",
    "query": "INSERT INTO rw_view2(s, c, base_a) VALUES (null, null, 1.1)"
  },
  {
    "comment": "updatable_views - Statement 296",
    "query": "INSERT INTO rw_view2(base_a) VALUES (1.1) RETURNING t"
  },
  {
    "comment": "updatable_views - Statement 297",
    "query": "UPDATE rw_view2 SET s = s WHERE base_a = 1.1"
  },
  {
    "comment": "updatable_views - Statement 298",
    "query": "UPDATE rw_view2 SET t = t WHERE base_a = 1.1"
  },
  {
    "comment": "updatable_views - Statement 299",
    "query": "UPDATE rw_view2 SET base_a = 1.05 WHERE base_a = 1.1"
  },
  {
    "comment": "updatable_views - Statement 300",
    "query": "DELETE FROM rw_view2 WHERE base_a = 1.05 RETURNING base_a, s, c, t"
  },
  {
    "comment": "updatable_views - Statement 301",
    "query": "CREATE VIEW rw_view3 AS SELECT s, c, s/c t, ctid FROM rw_view1"
  },
  {
    "comment": "updatable_views - Statement 302",
    "query": "INSERT INTO rw_view3 VALUES (null, null, null, null)"
  },
  {
    "comment": "updatable_views - Statement 303",
    "query": "INSERT INTO rw_view3(s) VALUES (null)"
  },
  {
    "comment": "updatable_views - Statement 304",
    "query": "UPDATE rw_view3 SET s = s"
  },
  {
    "comment": "updatable_views - Statement 305",
    "query": "DELETE FROM rw_view3 WHERE s = sin(0.1)"
  },
  {
    "comment": "updatable_views - Statement 306",
    "query": "SELECT events & 4 != 0 AS upd, events & 8 != 0 AS ins, events & 16 != 0 AS del FROM pg_catalog.pg_relation_is_updatable('rw_view3'::regclass, false) t(events)"
  },
  {
    "comment": "updatable_views - Statement 307",
    "query": "CREATE TABLE base_tbl (id int, idplus1 int GENERATED ALWAYS AS (id + 1) STORED)"
  },
  {
    "comment": "updatable_views - Statement 308",
    "query": "INSERT INTO base_tbl (id) VALUES (1)"
  },
  {
    "comment": "updatable_views - Statement 309",
    "query": "INSERT INTO rw_view1 (id) VALUES (2)"
  },
  {
    "comment": "updatable_views - Statement 310",
    "query": "INSERT INTO base_tbl (id, idplus1) VALUES (3, DEFAULT)"
  },
  {
    "comment": "updatable_views - Statement 311",
    "query": "INSERT INTO rw_view1 (id, idplus1) VALUES (4, DEFAULT)"
  },
  {
    "comment": "updatable_views - Statement 312",
    "query": "INSERT INTO base_tbl (id, idplus1) VALUES (5, 6)"
  },
  {
    "comment": "updatable_views - Statement 313",
    "query": "INSERT INTO rw_view1 (id, idplus1) VALUES (6, 7)"
  },
  {
    "comment": "updatable_views - Statement 314",
    "query": "UPDATE base_tbl SET id = 2000 WHERE id = 2"
  },
  {
    "comment": "updatable_views - Statement 315",
    "query": "UPDATE rw_view1 SET id = 3000 WHERE id = 3"
  },
  {
    "comment": "updatable_views - Statement 316",
    "query": "CREATE TABLE base_tbl_parent (a int)"
  },
  {
    "comment": "updatable_views - Statement 317",
    "query": "CREATE TABLE base_tbl_child (CHECK (a > 0)) INHERITS (base_tbl_parent)"
  },
  {
    "comment": "updatable_views - Statement 318",
    "query": "INSERT INTO base_tbl_parent SELECT * FROM generate_series(-8, -1)"
  },
  {
    "comment": "updatable_views - Statement 319",
    "query": "INSERT INTO base_tbl_child SELECT * FROM generate_series(1, 8)"
  },
  {
    "comment": "updatable_views - Statement 320",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl_parent"
  },
  {
    "comment": "updatable_views - Statement 321",
    "query": "CREATE VIEW rw_view2 AS SELECT * FROM ONLY base_tbl_parent"
  },
  {
    "comment": "updatable_views - Statement 322",
    "query": "SELECT * FROM rw_view1 ORDER BY a"
  },
  {
    "comment": "updatable_views - Statement 323",
    "query": "SELECT * FROM ONLY rw_view1 ORDER BY a"
  },
  {
    "comment": "updatable_views - Statement 324",
    "query": "SELECT * FROM rw_view2 ORDER BY a"
  },
  {
    "comment": "updatable_views - Statement 325",
    "query": "INSERT INTO rw_view1 VALUES (-100), (100)"
  },
  {
    "comment": "updatable_views - Statement 326",
    "query": "INSERT INTO rw_view2 VALUES (-200), (200)"
  },
  {
    "comment": "updatable_views - Statement 327",
    "query": "UPDATE rw_view1 SET a = a*10 WHERE a IN (-1, 1)"
  },
  {
    "comment": "updatable_views - Statement 328",
    "query": "UPDATE ONLY rw_view1 SET a = a*10 WHERE a IN (-2, 2)"
  },
  {
    "comment": "updatable_views - Statement 329",
    "query": "UPDATE rw_view2 SET a = a*10 WHERE a IN (-3, 3)"
  },
  {
    "comment": "updatable_views - Statement 330",
    "query": "UPDATE ONLY rw_view2 SET a = a*10 WHERE a IN (-4, 4)"
  },
  {
    "comment": "updatable_views - Statement 331",
    "query": "DELETE FROM rw_view1 WHERE a IN (-5, 5)"
  },
  {
    "comment": "updatable_views - Statement 332",
    "query": "DELETE FROM ONLY rw_view1 WHERE a IN (-6, 6)"
  },
  {
    "comment": "updatable_views - Statement 333",
    "query": "DELETE FROM rw_view2 WHERE a IN (-7, 7)"
  },
  {
    "comment": "updatable_views - Statement 334",
    "query": "DELETE FROM ONLY rw_view2 WHERE a IN (-8, 8)"
  },
  {
    "comment": "updatable_views - Statement 335",
    "query": "SELECT * FROM ONLY base_tbl_parent ORDER BY a"
  },
  {
    "comment": "updatable_views - Statement 336",
    "query": "SELECT * FROM base_tbl_child ORDER BY a"
  },
  {
    "comment": "updatable_views - Statement 337",
    "query": "MERGE INTO rw_view1 t USING (VALUES (-200), (10)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET a = t.a+1"
  },
  {
    "comment": "updatable_views - Statement 338",
    "query": "MERGE INTO ONLY rw_view1 t USING (VALUES (-100), (20)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET a = t.a+1"
  },
  {
    "comment": "updatable_views - Statement 339",
    "query": "MERGE INTO rw_view2 t USING (VALUES (-40), (3)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET a = t.a+1"
  },
  {
    "comment": "updatable_views - Statement 340",
    "query": "MERGE INTO ONLY rw_view2 t USING (VALUES (-30), (4)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET a = t.a+1"
  },
  {
    "comment": "updatable_views - Statement 341",
    "query": "CREATE TABLE other_tbl_parent (id int)"
  },
  {
    "comment": "updatable_views - Statement 342",
    "query": "CREATE TABLE other_tbl_child () INHERITS (other_tbl_parent)"
  },
  {
    "comment": "updatable_views - Statement 343",
    "query": "INSERT INTO other_tbl_parent VALUES (7),(200)"
  },
  {
    "comment": "updatable_views - Statement 344",
    "query": "INSERT INTO other_tbl_child VALUES (8),(100)"
  },
  {
    "comment": "updatable_views - Statement 345",
    "query": "EXPLAIN (costs off) UPDATE rw_view1 SET a = a + 1000 FROM other_tbl_parent WHERE a = id"
  },
  {
    "comment": "updatable_views - Statement 346",
    "query": "UPDATE rw_view1 SET a = a + 1000 FROM other_tbl_parent WHERE a = id"
  },
  {
    "comment": "updatable_views - Statement 347",
    "query": "DROP TABLE base_tbl_parent, base_tbl_child CASCADE"
  },
  {
    "comment": "updatable_views - Statement 348",
    "query": "DROP TABLE other_tbl_parent CASCADE"
  },
  {
    "comment": "updatable_views - Statement 349",
    "query": "CREATE TABLE base_tbl (a int, b int DEFAULT 10)"
  },
  {
    "comment": "updatable_views - Statement 350",
    "query": "INSERT INTO base_tbl VALUES (1,2), (2,3), (1,-1)"
  },
  {
    "comment": "updatable_views - Statement 351",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl WHERE a < b WITH LOCAL CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 352",
    "query": "INSERT INTO rw_view1 VALUES(3,4)"
  },
  {
    "comment": "updatable_views - Statement 353",
    "query": "INSERT INTO rw_view1 VALUES(4,3)"
  },
  {
    "comment": "updatable_views - Statement 354",
    "query": "INSERT INTO rw_view1 VALUES(5,null)"
  },
  {
    "comment": "updatable_views - Statement 355",
    "query": "UPDATE rw_view1 SET b = 5 WHERE a = 3"
  },
  {
    "comment": "updatable_views - Statement 356",
    "query": "UPDATE rw_view1 SET b = -5 WHERE a = 3"
  },
  {
    "comment": "updatable_views - Statement 357",
    "query": "INSERT INTO rw_view1(a) VALUES (9)"
  },
  {
    "comment": "updatable_views - Statement 358",
    "query": "INSERT INTO rw_view1(a) VALUES (10)"
  },
  {
    "comment": "updatable_views - Statement 359",
    "query": "SELECT * FROM base_tbl ORDER BY a, b"
  },
  {
    "comment": "updatable_views - Statement 360",
    "query": "MERGE INTO rw_view1 t USING (VALUES (10)) AS v(a) ON t.a = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.a, v.a + 1)"
  },
  {
    "comment": "updatable_views - Statement 361",
    "query": "MERGE INTO rw_view1 t USING (VALUES (11)) AS v(a) ON t.a = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.a, v.a - 1)"
  },
  {
    "comment": "updatable_views - Statement 362",
    "query": "MERGE INTO rw_view1 t USING (VALUES (1)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET a = t.a - 1"
  },
  {
    "comment": "updatable_views - Statement 363",
    "query": "MERGE INTO rw_view1 t USING (VALUES (2)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET a = t.a + 1"
  },
  {
    "comment": "updatable_views - Statement 364",
    "query": "CREATE TABLE base_tbl (a int)"
  },
  {
    "comment": "updatable_views - Statement 365",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl WHERE a > 0"
  },
  {
    "comment": "updatable_views - Statement 366",
    "query": "CREATE VIEW rw_view2 AS SELECT * FROM rw_view1 WHERE a < 10 WITH CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 367",
    "query": "INSERT INTO rw_view2 VALUES (-5)"
  },
  {
    "comment": "updatable_views - Statement 368",
    "query": "INSERT INTO rw_view2 VALUES (5)"
  },
  {
    "comment": "updatable_views - Statement 369",
    "query": "INSERT INTO rw_view2 VALUES (15)"
  },
  {
    "comment": "updatable_views - Statement 370",
    "query": "UPDATE rw_view2 SET a = a - 10"
  },
  {
    "comment": "updatable_views - Statement 371",
    "query": "UPDATE rw_view2 SET a = a + 10"
  },
  {
    "comment": "updatable_views - Statement 372",
    "query": "CREATE OR REPLACE VIEW rw_view2 AS SELECT * FROM rw_view1 WHERE a < 10 WITH LOCAL CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 373",
    "query": "INSERT INTO rw_view2 VALUES (-10)"
  },
  {
    "comment": "updatable_views - Statement 374",
    "query": "INSERT INTO rw_view2 VALUES (20)"
  },
  {
    "comment": "updatable_views - Statement 375",
    "query": "ALTER VIEW rw_view1 SET (check_option=here)"
  },
  {
    "comment": "updatable_views - Statement 376",
    "query": "ALTER VIEW rw_view1 SET (check_option=local)"
  },
  {
    "comment": "updatable_views - Statement 377",
    "query": "INSERT INTO rw_view2 VALUES (-20)"
  },
  {
    "comment": "updatable_views - Statement 378",
    "query": "INSERT INTO rw_view2 VALUES (30)"
  },
  {
    "comment": "updatable_views - Statement 379",
    "query": "ALTER VIEW rw_view2 RESET (check_option)"
  },
  {
    "comment": "updatable_views - Statement 380",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl WITH CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 381",
    "query": "CREATE VIEW rw_view2 AS SELECT * FROM rw_view1 WHERE a > 0"
  },
  {
    "comment": "updatable_views - Statement 382",
    "query": "CREATE VIEW rw_view3 AS SELECT * FROM rw_view2 WITH CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 383",
    "query": "SELECT * FROM information_schema.views WHERE table_name LIKE E'rw\\\\_view_' ORDER BY table_name"
  },
  {
    "comment": "updatable_views - Statement 384",
    "query": "INSERT INTO rw_view1 VALUES (-1)"
  },
  {
    "comment": "updatable_views - Statement 385",
    "query": "INSERT INTO rw_view1 VALUES (1)"
  },
  {
    "comment": "updatable_views - Statement 386",
    "query": "INSERT INTO rw_view2 VALUES (-2)"
  },
  {
    "comment": "updatable_views - Statement 387",
    "query": "INSERT INTO rw_view2 VALUES (2)"
  },
  {
    "comment": "updatable_views - Statement 388",
    "query": "INSERT INTO rw_view3 VALUES (-3)"
  },
  {
    "comment": "updatable_views - Statement 389",
    "query": "INSERT INTO rw_view3 VALUES (3)"
  },
  {
    "comment": "updatable_views - Statement 390",
    "query": "CREATE TABLE base_tbl (a int, b int[])"
  },
  {
    "comment": "updatable_views - Statement 391",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl WHERE a = ANY (b) WITH CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 392",
    "query": "INSERT INTO rw_view1 VALUES (1, ARRAY[1,2,3])"
  },
  {
    "comment": "updatable_views - Statement 393",
    "query": "INSERT INTO rw_view1 VALUES (10, ARRAY[4,5])"
  },
  {
    "comment": "updatable_views - Statement 394",
    "query": "UPDATE rw_view1 SET b[2] = -b[2] WHERE a = 1"
  },
  {
    "comment": "updatable_views - Statement 395",
    "query": "UPDATE rw_view1 SET b[1] = -b[1] WHERE a = 1"
  },
  {
    "comment": "updatable_views - Statement 396",
    "query": "PREPARE ins(int, int[]) AS INSERT INTO rw_view1 VALUES($1, $2)"
  },
  {
    "comment": "updatable_views - Statement 397",
    "query": "EXECUTE ins(2, ARRAY[1,2,3])"
  },
  {
    "comment": "updatable_views - Statement 398",
    "query": "EXECUTE ins(10, ARRAY[4,5])"
  },
  {
    "comment": "updatable_views - Statement 399",
    "query": "DEALLOCATE PREPARE ins"
  },
  {
    "comment": "updatable_views - Statement 400",
    "query": "CREATE TABLE ref_tbl (a int PRIMARY KEY)"
  },
  {
    "comment": "updatable_views - Statement 401",
    "query": "INSERT INTO ref_tbl SELECT * FROM generate_series(1,10)"
  },
  {
    "comment": "updatable_views - Statement 402",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl b WHERE EXISTS(SELECT 1 FROM ref_tbl r WHERE r.a = b.a) WITH CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 403",
    "query": "INSERT INTO rw_view1 VALUES (5)"
  },
  {
    "comment": "updatable_views - Statement 404",
    "query": "INSERT INTO rw_view1 VALUES (15)"
  },
  {
    "comment": "updatable_views - Statement 405",
    "query": "UPDATE rw_view1 SET a = a + 5"
  },
  {
    "comment": "updatable_views - Statement 406",
    "query": "EXPLAIN (costs off) INSERT INTO rw_view1 VALUES (5)"
  },
  {
    "comment": "updatable_views - Statement 407",
    "query": "EXPLAIN (costs off) UPDATE rw_view1 SET a = a + 5"
  },
  {
    "comment": "updatable_views - Statement 408",
    "query": "DROP TABLE base_tbl, ref_tbl CASCADE"
  },
  {
    "comment": "updatable_views - Statement 409",
    "query": "CREATE FUNCTION base_tbl_trig_fn() RETURNS trigger AS $$ BEGIN NEW.b := 10"
  },
  {
    "comment": "updatable_views - Statement 410",
    "query": "CREATE TRIGGER base_tbl_trig BEFORE INSERT OR UPDATE ON base_tbl FOR EACH ROW EXECUTE PROCEDURE base_tbl_trig_fn()"
  },
  {
    "comment": "updatable_views - Statement 411",
    "query": "CREATE VIEW rw_view1 AS SELECT * FROM base_tbl WHERE a < b WITH CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 412",
    "query": "INSERT INTO rw_view1 VALUES (5,0)"
  },
  {
    "comment": "updatable_views - Statement 413",
    "query": "INSERT INTO rw_view1 VALUES (15, 20)"
  },
  {
    "comment": "updatable_views - Statement 414",
    "query": "UPDATE rw_view1 SET a = 20, b = 30"
  },
  {
    "comment": "updatable_views - Statement 415",
    "query": "DROP FUNCTION base_tbl_trig_fn()"
  },
  {
    "comment": "updatable_views - Statement 416",
    "query": "CREATE VIEW rw_view1 AS SELECT a FROM base_tbl WHERE a < b"
  },
  {
    "comment": "updatable_views - Statement 417",
    "query": "CREATE FUNCTION rw_view1_trig_fn() RETURNS trigger AS $$ BEGIN IF TG_OP = 'INSERT' THEN INSERT INTO base_tbl VALUES (NEW.a, 10)"
  },
  {
    "comment": "updatable_views - Statement 418",
    "query": "ELSIF TG_OP = 'UPDATE' THEN UPDATE base_tbl SET a=NEW.a WHERE a=OLD.a"
  },
  {
    "comment": "updatable_views - Statement 419",
    "query": "CREATE TRIGGER rw_view1_trig INSTEAD OF INSERT OR UPDATE OR DELETE ON rw_view1 FOR EACH ROW EXECUTE PROCEDURE rw_view1_trig_fn()"
  },
  {
    "comment": "updatable_views - Statement 420",
    "query": "CREATE VIEW rw_view2 AS SELECT * FROM rw_view1 WHERE a > 0 WITH LOCAL CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 421",
    "query": "MERGE INTO rw_view2 t USING (VALUES (-5)) AS v(a) ON t.a = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.a)"
  },
  {
    "comment": "updatable_views - Statement 422",
    "query": "MERGE INTO rw_view2 t USING (VALUES (6)) AS v(a) ON t.a = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.a)"
  },
  {
    "comment": "updatable_views - Statement 423",
    "query": "INSERT INTO rw_view2 VALUES (50)"
  },
  {
    "comment": "updatable_views - Statement 424",
    "query": "MERGE INTO rw_view2 t USING (VALUES (60)) AS v(a) ON t.a = v.a WHEN NOT MATCHED THEN INSERT VALUES (v.a)"
  },
  {
    "comment": "updatable_views - Statement 425",
    "query": "MERGE INTO rw_view2 t USING (VALUES (6)) AS v(a) ON t.a = v.a WHEN MATCHED THEN UPDATE SET a = t.a - 10"
  },
  {
    "comment": "updatable_views - Statement 426",
    "query": "ALTER VIEW rw_view2 SET (check_option=cascaded)"
  },
  {
    "comment": "updatable_views - Statement 427",
    "query": "INSERT INTO rw_view2 VALUES (100)"
  },
  {
    "comment": "updatable_views - Statement 428",
    "query": "UPDATE rw_view2 SET a = 200 WHERE a = 5"
  },
  {
    "comment": "updatable_views - Statement 429",
    "query": "DROP TRIGGER rw_view1_trig ON rw_view1"
  },
  {
    "comment": "updatable_views - Statement 430",
    "query": "CREATE RULE rw_view1_ins_rule AS ON INSERT TO rw_view1 DO INSTEAD INSERT INTO base_tbl VALUES (NEW.a, 10)"
  },
  {
    "comment": "updatable_views - Statement 431",
    "query": "CREATE RULE rw_view1_upd_rule AS ON UPDATE TO rw_view1 DO INSTEAD UPDATE base_tbl SET a=NEW.a WHERE a=OLD.a"
  },
  {
    "comment": "updatable_views - Statement 432",
    "query": "UPDATE rw_view2 SET a = 30 WHERE a = 5"
  },
  {
    "comment": "updatable_views - Statement 433",
    "query": "UPDATE rw_view2 SET a = -5 WHERE a = 5"
  },
  {
    "comment": "updatable_views - Statement 434",
    "query": "CREATE VIEW rw_view1 AS SELECT a,10 AS b FROM base_tbl"
  },
  {
    "comment": "updatable_views - Statement 435",
    "query": "CREATE RULE rw_view1_ins_rule AS ON INSERT TO rw_view1 DO INSTEAD INSERT INTO base_tbl VALUES (NEW.a)"
  },
  {
    "comment": "updatable_views - Statement 436",
    "query": "CREATE VIEW rw_view2 AS SELECT * FROM rw_view1 WHERE a > b WITH LOCAL CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 437",
    "query": "INSERT INTO rw_view2 VALUES (2,3)"
  },
  {
    "comment": "updatable_views - Statement 438",
    "query": "CREATE TABLE base_tbl (person text, visibility text)"
  },
  {
    "comment": "updatable_views - Statement 439",
    "query": "INSERT INTO base_tbl VALUES ('Tom', 'public'), ('Dick', 'private'), ('Harry', 'public')"
  },
  {
    "comment": "updatable_views - Statement 440",
    "query": "CREATE VIEW rw_view1 AS SELECT person FROM base_tbl WHERE visibility = 'public'"
  },
  {
    "comment": "updatable_views - Statement 441",
    "query": "CREATE FUNCTION snoop(anyelement) RETURNS boolean AS $$ BEGIN RAISE NOTICE 'snooped value: %', $1"
  },
  {
    "comment": "updatable_views - Statement 442",
    "query": "RETURN true"
  },
  {
    "comment": "updatable_views - Statement 443",
    "query": "$$ LANGUAGE plpgsql COST 0.000001"
  },
  {
    "comment": "updatable_views - Statement 444",
    "query": "CREATE OR REPLACE FUNCTION leakproof(anyelement) RETURNS boolean AS $$ BEGIN RETURN true"
  },
  {
    "comment": "updatable_views - Statement 445",
    "query": "$$ LANGUAGE plpgsql STRICT IMMUTABLE LEAKPROOF"
  },
  {
    "comment": "updatable_views - Statement 446",
    "query": "SELECT * FROM rw_view1 WHERE snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 447",
    "query": "UPDATE rw_view1 SET person=person WHERE snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 448",
    "query": "DELETE FROM rw_view1 WHERE NOT snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 449",
    "query": "ALTER VIEW rw_view1 SET (security_barrier = true)"
  },
  {
    "comment": "updatable_views - Statement 450",
    "query": "MERGE INTO rw_view1 t USING (VALUES ('Tom'), ('Dick'), ('Harry')) AS v(person) ON t.person = v.person WHEN MATCHED AND snoop(t.person) THEN UPDATE SET person = v.person"
  },
  {
    "comment": "updatable_views - Statement 451",
    "query": "EXPLAIN (costs off) SELECT * FROM rw_view1 WHERE snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 452",
    "query": "EXPLAIN (costs off) UPDATE rw_view1 SET person=person WHERE snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 453",
    "query": "EXPLAIN (costs off) DELETE FROM rw_view1 WHERE NOT snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 454",
    "query": "EXPLAIN (costs off) MERGE INTO rw_view1 t USING (VALUES ('Tom'), ('Dick'), ('Harry')) AS v(person) ON t.person = v.person WHEN MATCHED AND snoop(t.person) THEN UPDATE SET person = v.person"
  },
  {
    "comment": "updatable_views - Statement 455",
    "query": "CREATE VIEW rw_view2 WITH (security_barrier = true) AS SELECT * FROM rw_view1 WHERE snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 456",
    "query": "SELECT * FROM rw_view2 WHERE snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 457",
    "query": "UPDATE rw_view2 SET person=person WHERE snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 458",
    "query": "DELETE FROM rw_view2 WHERE NOT snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 459",
    "query": "MERGE INTO rw_view2 t USING (VALUES ('Tom'), ('Dick'), ('Harry')) AS v(person) ON t.person = v.person WHEN MATCHED AND snoop(t.person) THEN UPDATE SET person = v.person"
  },
  {
    "comment": "updatable_views - Statement 460",
    "query": "EXPLAIN (costs off) SELECT * FROM rw_view2 WHERE snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 461",
    "query": "EXPLAIN (costs off) UPDATE rw_view2 SET person=person WHERE snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 462",
    "query": "EXPLAIN (costs off) DELETE FROM rw_view2 WHERE NOT snoop(person)"
  },
  {
    "comment": "updatable_views - Statement 463",
    "query": "EXPLAIN (costs off) MERGE INTO rw_view2 t USING (VALUES ('Tom'), ('Dick'), ('Harry')) AS v(person) ON t.person = v.person WHEN MATCHED AND snoop(t.person) THEN UPDATE SET person = v.person"
  },
  {
    "comment": "updatable_views - Statement 464",
    "query": "CREATE TABLE base_tbl(id int PRIMARY KEY, data text, deleted boolean)"
  },
  {
    "comment": "updatable_views - Statement 465",
    "query": "INSERT INTO base_tbl VALUES (1, 'Row 1', false), (2, 'Row 2', true)"
  },
  {
    "comment": "updatable_views - Statement 466",
    "query": "CREATE RULE base_tbl_ins_rule AS ON INSERT TO base_tbl WHERE EXISTS (SELECT 1 FROM base_tbl t WHERE t.id = new.id) DO INSTEAD UPDATE base_tbl SET data = new.data, deleted = false WHERE id = new.id"
  },
  {
    "comment": "updatable_views - Statement 467",
    "query": "CREATE RULE base_tbl_del_rule AS ON DELETE TO base_tbl DO INSTEAD UPDATE base_tbl SET deleted = true WHERE id = old.id"
  },
  {
    "comment": "updatable_views - Statement 468",
    "query": "CREATE VIEW rw_view1 WITH (security_barrier=true) AS SELECT id, data FROM base_tbl WHERE NOT deleted"
  },
  {
    "comment": "updatable_views - Statement 469",
    "query": "EXPLAIN (costs off) DELETE FROM rw_view1 WHERE id = 1 AND snoop(data)"
  },
  {
    "comment": "updatable_views - Statement 470",
    "query": "DELETE FROM rw_view1 WHERE id = 1 AND snoop(data)"
  },
  {
    "comment": "updatable_views - Statement 471",
    "query": "EXPLAIN (costs off) INSERT INTO rw_view1 VALUES (2, 'New row 2')"
  },
  {
    "comment": "updatable_views - Statement 472",
    "query": "INSERT INTO rw_view1 VALUES (2, 'New row 2')"
  },
  {
    "comment": "updatable_views - Statement 473",
    "query": "CREATE TABLE t1 (a int, b float, c text)"
  },
  {
    "comment": "updatable_views - Statement 474",
    "query": "CREATE INDEX t1_a_idx ON t1(a)"
  },
  {
    "comment": "updatable_views - Statement 475",
    "query": "INSERT INTO t1 SELECT i,i,'t1' FROM generate_series(1,10) g(i)"
  },
  {
    "comment": "updatable_views - Statement 476",
    "query": "ANALYZE t1"
  },
  {
    "comment": "updatable_views - Statement 477",
    "query": "CREATE TABLE t11 (d text) INHERITS (t1)"
  },
  {
    "comment": "updatable_views - Statement 478",
    "query": "CREATE INDEX t11_a_idx ON t11(a)"
  },
  {
    "comment": "updatable_views - Statement 479",
    "query": "INSERT INTO t11 SELECT i,i,'t11','t11d' FROM generate_series(1,10) g(i)"
  },
  {
    "comment": "updatable_views - Statement 480",
    "query": "ANALYZE t11"
  },
  {
    "comment": "updatable_views - Statement 481",
    "query": "CREATE TABLE t12 (e int[]) INHERITS (t1)"
  },
  {
    "comment": "updatable_views - Statement 482",
    "query": "CREATE INDEX t12_a_idx ON t12(a)"
  },
  {
    "comment": "updatable_views - Statement 483",
    "query": "INSERT INTO t12 SELECT i,i,'t12','{1,2}'::int[] FROM generate_series(1,10) g(i)"
  },
  {
    "comment": "updatable_views - Statement 484",
    "query": "ANALYZE t12"
  },
  {
    "comment": "updatable_views - Statement 485",
    "query": "CREATE TABLE t111 () INHERITS (t11, t12)"
  },
  {
    "comment": "updatable_views - Statement 486",
    "query": "CREATE INDEX t111_a_idx ON t111(a)"
  },
  {
    "comment": "updatable_views - Statement 487",
    "query": "INSERT INTO t111 SELECT i,i,'t111','t111d','{1,1,1}'::int[] FROM generate_series(1,10) g(i)"
  },
  {
    "comment": "updatable_views - Statement 488",
    "query": "ANALYZE t111"
  },
  {
    "comment": "updatable_views - Statement 489",
    "query": "CREATE VIEW v1 WITH (security_barrier=true) AS SELECT *, (SELECT d FROM t11 WHERE t11.a = t1.a LIMIT 1) AS d FROM t1 WHERE a > 5 AND EXISTS(SELECT 1 FROM t12 WHERE t12.a = t1.a)"
  },
  {
    "comment": "updatable_views - Statement 490",
    "query": "SELECT * FROM v1 WHERE a=3"
  },
  {
    "comment": "updatable_views - Statement 491",
    "query": "SELECT * FROM v1 WHERE a=8"
  },
  {
    "comment": "updatable_views - Statement 492",
    "query": "EXPLAIN (VERBOSE, COSTS OFF) UPDATE v1 SET a=100 WHERE snoop(a) AND leakproof(a) AND a < 7 AND a != 6"
  },
  {
    "comment": "updatable_views - Statement 493",
    "query": "UPDATE v1 SET a=100 WHERE snoop(a) AND leakproof(a) AND a < 7 AND a != 6"
  },
  {
    "comment": "updatable_views - Statement 494",
    "query": "SELECT * FROM v1 WHERE a=100"
  },
  {
    "comment": "updatable_views - Statement 495",
    "query": "SELECT * FROM t1 WHERE a=100"
  },
  {
    "comment": "updatable_views - Statement 496",
    "query": "EXPLAIN (VERBOSE, COSTS OFF) UPDATE v1 SET a=a+1 WHERE snoop(a) AND leakproof(a) AND a = 8"
  },
  {
    "comment": "updatable_views - Statement 497",
    "query": "UPDATE v1 SET a=a+1 WHERE snoop(a) AND leakproof(a) AND a = 8"
  },
  {
    "comment": "updatable_views - Statement 498",
    "query": "SELECT * FROM v1 WHERE b=8"
  },
  {
    "comment": "updatable_views - Statement 499",
    "query": "DELETE FROM v1 WHERE snoop(a) AND leakproof(a)"
  },
  {
    "comment": "updatable_views - Statement 500",
    "query": "TABLE t1"
  },
  {
    "comment": "updatable_views - Statement 501",
    "query": "DROP TABLE t1, t11, t12, t111 CASCADE"
  },
  {
    "comment": "updatable_views - Statement 502",
    "query": "DROP FUNCTION snoop(anyelement)"
  },
  {
    "comment": "updatable_views - Statement 503",
    "query": "DROP FUNCTION leakproof(anyelement)"
  },
  {
    "comment": "updatable_views - Statement 504",
    "query": "CREATE TABLE tx1 (a integer)"
  },
  {
    "comment": "updatable_views - Statement 505",
    "query": "CREATE TABLE tx2 (b integer)"
  },
  {
    "comment": "updatable_views - Statement 506",
    "query": "CREATE TABLE tx3 (c integer)"
  },
  {
    "comment": "updatable_views - Statement 507",
    "query": "CREATE VIEW vx1 AS SELECT a FROM tx1 WHERE EXISTS(SELECT 1 FROM tx2 JOIN tx3 ON b=c)"
  },
  {
    "comment": "updatable_views - Statement 508",
    "query": "INSERT INTO vx1 values (1)"
  },
  {
    "comment": "updatable_views - Statement 509",
    "query": "SELECT * FROM tx1"
  },
  {
    "comment": "updatable_views - Statement 510",
    "query": "SELECT * FROM vx1"
  },
  {
    "comment": "updatable_views - Statement 511",
    "query": "DROP VIEW vx1"
  },
  {
    "comment": "updatable_views - Statement 512",
    "query": "DROP TABLE tx1"
  },
  {
    "comment": "updatable_views - Statement 513",
    "query": "DROP TABLE tx2"
  },
  {
    "comment": "updatable_views - Statement 514",
    "query": "DROP TABLE tx3"
  },
  {
    "comment": "updatable_views - Statement 515",
    "query": "CREATE TABLE tx1 (a integer, b integer)"
  },
  {
    "comment": "updatable_views - Statement 516",
    "query": "CREATE TABLE tx2 (b integer, c integer)"
  },
  {
    "comment": "updatable_views - Statement 517",
    "query": "CREATE TABLE tx3 (c integer, d integer)"
  },
  {
    "comment": "updatable_views - Statement 518",
    "query": "ALTER TABLE tx1 DROP COLUMN b"
  },
  {
    "comment": "updatable_views - Statement 519",
    "query": "ALTER TABLE tx2 DROP COLUMN c"
  },
  {
    "comment": "updatable_views - Statement 520",
    "query": "ALTER TABLE tx3 DROP COLUMN d"
  },
  {
    "comment": "updatable_views - Statement 521",
    "query": "CREATE TABLE t1 (a int, b text, c int)"
  },
  {
    "comment": "updatable_views - Statement 522",
    "query": "INSERT INTO t1 VALUES (1, 'one', 10)"
  },
  {
    "comment": "updatable_views - Statement 523",
    "query": "CREATE TABLE t2 (cc int)"
  },
  {
    "comment": "updatable_views - Statement 524",
    "query": "INSERT INTO t2 VALUES (10), (20)"
  },
  {
    "comment": "updatable_views - Statement 525",
    "query": "CREATE VIEW v1 WITH (security_barrier = true) AS SELECT * FROM t1 WHERE (a > 0) WITH CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 526",
    "query": "CREATE VIEW v2 WITH (security_barrier = true) AS SELECT * FROM v1 WHERE EXISTS (SELECT 1 FROM t2 WHERE t2.cc = v1.c) WITH CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 527",
    "query": "INSERT INTO v2 VALUES (2, 'two', 20)"
  },
  {
    "comment": "updatable_views - Statement 528",
    "query": "INSERT INTO v2 VALUES (-2, 'minus two', 20)"
  },
  {
    "comment": "updatable_views - Statement 529",
    "query": "INSERT INTO v2 VALUES (3, 'three', 30)"
  },
  {
    "comment": "updatable_views - Statement 530",
    "query": "UPDATE v2 SET b = 'ONE' WHERE a = 1"
  },
  {
    "comment": "updatable_views - Statement 531",
    "query": "UPDATE v2 SET a = -1 WHERE a = 1"
  },
  {
    "comment": "updatable_views - Statement 532",
    "query": "UPDATE v2 SET c = 30 WHERE a = 1"
  },
  {
    "comment": "updatable_views - Statement 533",
    "query": "DELETE FROM v2 WHERE a = 2"
  },
  {
    "comment": "updatable_views - Statement 534",
    "query": "SELECT * FROM v2"
  },
  {
    "comment": "updatable_views - Statement 535",
    "query": "DROP VIEW v2"
  },
  {
    "comment": "updatable_views - Statement 536",
    "query": "DROP VIEW v1"
  },
  {
    "comment": "updatable_views - Statement 537",
    "query": "DROP TABLE t2"
  },
  {
    "comment": "updatable_views - Statement 538",
    "query": "DROP TABLE t1"
  },
  {
    "comment": "updatable_views - Statement 539",
    "query": "CREATE TABLE t1 (a int)"
  },
  {
    "comment": "updatable_views - Statement 540",
    "query": "CREATE VIEW v1 WITH (security_barrier = true) AS SELECT * FROM t1"
  },
  {
    "comment": "updatable_views - Statement 541",
    "query": "CREATE RULE v1_upd_rule AS ON UPDATE TO v1 DO INSTEAD UPDATE t1 SET a = NEW.a WHERE a = OLD.a"
  },
  {
    "comment": "updatable_views - Statement 542",
    "query": "CREATE VIEW v2 WITH (security_barrier = true) AS SELECT * FROM v1 WHERE EXISTS (SELECT 1)"
  },
  {
    "comment": "updatable_views - Statement 543",
    "query": "EXPLAIN (COSTS OFF) UPDATE v2 SET a = 1"
  },
  {
    "comment": "updatable_views - Statement 544",
    "query": "CREATE TABLE t1 (a int, b text)"
  },
  {
    "comment": "updatable_views - Statement 545",
    "query": "CREATE VIEW v1 AS SELECT null::int AS a"
  },
  {
    "comment": "updatable_views - Statement 546",
    "query": "CREATE OR REPLACE VIEW v1 AS SELECT * FROM t1 WHERE a > 0 WITH CHECK OPTION"
  },
  {
    "comment": "updatable_views - Statement 547",
    "query": "INSERT INTO v1 VALUES (1, 'ok')"
  },
  {
    "comment": "updatable_views - Statement 548",
    "query": "INSERT INTO v1 VALUES (-1, 'invalid')"
  },
  {
    "comment": "updatable_views - Statement 549",
    "query": "create table uv_pt (a int, b int, v varchar) partition by range (a, b)"
  },
  {
    "comment": "updatable_views - Statement 550",
    "query": "create table uv_pt1 (b int not null, v varchar, a int not null) partition by range (b)"
  },
  {
    "comment": "updatable_views - Statement 551",
    "query": "create table uv_pt11 (like uv_pt1)"
  },
  {
    "comment": "updatable_views - Statement 552",
    "query": "alter table uv_pt11 drop a"
  },
  {
    "comment": "updatable_views - Statement 553",
    "query": "alter table uv_pt11 add a int"
  },
  {
    "comment": "updatable_views - Statement 554",
    "query": "alter table uv_pt11 add a int not null"
  },
  {
    "comment": "updatable_views - Statement 555",
    "query": "alter table uv_pt1 attach partition uv_pt11 for values from (2) to (5)"
  },
  {
    "comment": "updatable_views - Statement 556",
    "query": "alter table uv_pt attach partition uv_pt1 for values from (1, 2) to (1, 10)"
  },
  {
    "comment": "updatable_views - Statement 557",
    "query": "create view uv_ptv as select * from uv_pt"
  },
  {
    "comment": "updatable_views - Statement 558",
    "query": "select events & 4 != 0 AS upd, events & 8 != 0 AS ins, events & 16 != 0 AS del from pg_catalog.pg_relation_is_updatable('uv_pt'::regclass, false) t(events)"
  },
  {
    "comment": "updatable_views - Statement 559",
    "query": "select pg_catalog.pg_column_is_updatable('uv_pt'::regclass, 1::smallint, false)"
  },
  {
    "comment": "updatable_views - Statement 560",
    "query": "select pg_catalog.pg_column_is_updatable('uv_pt'::regclass, 2::smallint, false)"
  },
  {
    "comment": "updatable_views - Statement 561",
    "query": "select table_name, is_updatable, is_insertable_into from information_schema.views where table_name = 'uv_ptv'"
  },
  {
    "comment": "updatable_views - Statement 562",
    "query": "select table_name, column_name, is_updatable from information_schema.columns where table_name = 'uv_ptv' order by column_name"
  },
  {
    "comment": "updatable_views - Statement 563",
    "query": "insert into uv_ptv values (1, 2)"
  },
  {
    "comment": "updatable_views - Statement 564",
    "query": "select tableoid::regclass, * from uv_pt"
  },
  {
    "comment": "updatable_views - Statement 565",
    "query": "create view uv_ptv_wco as select * from uv_pt where a = 0 with check option"
  },
  {
    "comment": "updatable_views - Statement 566",
    "query": "insert into uv_ptv_wco values (1, 2)"
  },
  {
    "comment": "updatable_views - Statement 567",
    "query": "merge into uv_ptv t using (values (1,2), (1,4)) as v(a,b) on t.a = v.a when matched then update set b = t.b + 1 when not matched then insert values (v.a, v.b + 1)"
  },
  {
    "comment": "updatable_views - Statement 568",
    "query": "merge into uv_ptv t using (values (1,2), (1,4)) as v(a,b) on t.a = v.a and t.b = v.b when matched then update set b = t.b + 1 when not matched then insert values (v.a, v.b + 1)"
  },
  {
    "comment": "updatable_views - Statement 569",
    "query": "merge into uv_ptv t using (values (1,2), (1,3)) as v(a,b) on t.a = v.a and t.b = v.b when matched then update set b = t.b + 1 when not matched then insert values (v.a, v.b + 1)"
  },
  {
    "comment": "updatable_views - Statement 570",
    "query": "select tableoid::regclass, * from uv_pt order by a, b"
  },
  {
    "comment": "updatable_views - Statement 571",
    "query": "drop view uv_ptv, uv_ptv_wco"
  },
  {
    "comment": "updatable_views - Statement 572",
    "query": "drop table uv_pt, uv_pt1, uv_pt11"
  },
  {
    "comment": "updatable_views - Statement 573",
    "query": "create table wcowrtest (a int) partition by list (a)"
  },
  {
    "comment": "updatable_views - Statement 574",
    "query": "create table wcowrtest1 partition of wcowrtest for values in (1)"
  },
  {
    "comment": "updatable_views - Statement 575",
    "query": "create view wcowrtest_v as select * from wcowrtest where wcowrtest = '(2)'::wcowrtest with check option"
  },
  {
    "comment": "updatable_views - Statement 576",
    "query": "insert into wcowrtest_v values (1)"
  },
  {
    "comment": "updatable_views - Statement 577",
    "query": "alter table wcowrtest add b text"
  },
  {
    "comment": "updatable_views - Statement 578",
    "query": "create table wcowrtest2 (b text, c int, a int)"
  },
  {
    "comment": "updatable_views - Statement 579",
    "query": "alter table wcowrtest2 drop c"
  },
  {
    "comment": "updatable_views - Statement 580",
    "query": "alter table wcowrtest attach partition wcowrtest2 for values in (2)"
  },
  {
    "comment": "updatable_views - Statement 581",
    "query": "create table sometable (a int, b text)"
  },
  {
    "comment": "updatable_views - Statement 582",
    "query": "insert into sometable values (1, 'a'), (2, 'b')"
  },
  {
    "comment": "updatable_views - Statement 583",
    "query": "create view wcowrtest_v2 as select * from wcowrtest r where r in (select s from sometable s where r.a = s.a) with check option"
  },
  {
    "comment": "updatable_views - Statement 584",
    "query": "insert into wcowrtest_v2 values (2, 'no such row in sometable')"
  },
  {
    "comment": "updatable_views - Statement 585",
    "query": "drop view wcowrtest_v, wcowrtest_v2"
  },
  {
    "comment": "updatable_views - Statement 586",
    "query": "drop table wcowrtest, sometable"
  },
  {
    "comment": "updatable_views - Statement 587",
    "query": "create table uv_iocu_tab (a text unique, b float)"
  },
  {
    "comment": "updatable_views - Statement 588",
    "query": "insert into uv_iocu_tab values ('xyxyxy', 0)"
  },
  {
    "comment": "updatable_views - Statement 589",
    "query": "create view uv_iocu_view as select b, b+1 as c, a, '2.0'::text as two from uv_iocu_tab"
  },
  {
    "comment": "updatable_views - Statement 590",
    "query": "insert into uv_iocu_view (a, b) values ('xyxyxy', 1) on conflict (a) do update set b = uv_iocu_view.b"
  },
  {
    "comment": "updatable_views - Statement 591",
    "query": "select * from uv_iocu_tab"
  },
  {
    "comment": "updatable_views - Statement 592",
    "query": "insert into uv_iocu_view (a, b) values ('xyxyxy', 1) on conflict (a) do update set b = excluded.b"
  },
  {
    "comment": "updatable_views - Statement 593",
    "query": "insert into uv_iocu_view (a, b) values ('xyxyxy', 3) on conflict (a) do update set b = cast(excluded.two as float)"
  },
  {
    "comment": "updatable_views - Statement 594",
    "query": "explain (costs off) insert into uv_iocu_view (a, b) values ('xyxyxy', 3) on conflict (a) do update set b = excluded.b where excluded.c > 0"
  },
  {
    "comment": "updatable_views - Statement 595",
    "query": "insert into uv_iocu_view (a, b) values ('xyxyxy', 3) on conflict (a) do update set b = excluded.b where excluded.c > 0"
  },
  {
    "comment": "updatable_views - Statement 596",
    "query": "drop view uv_iocu_view"
  },
  {
    "comment": "updatable_views - Statement 597",
    "query": "drop table uv_iocu_tab"
  },
  {
    "comment": "updatable_views - Statement 598",
    "query": "create table uv_iocu_tab (a int unique, b text)"
  },
  {
    "comment": "updatable_views - Statement 599",
    "query": "create view uv_iocu_view as select b as bb, a as aa, uv_iocu_tab::text as cc from uv_iocu_tab"
  },
  {
    "comment": "updatable_views - Statement 600",
    "query": "insert into uv_iocu_view (aa,bb) values (1,'x')"
  },
  {
    "comment": "updatable_views - Statement 601",
    "query": "explain (costs off) insert into uv_iocu_view (aa,bb) values (1,'y') on conflict (aa) do update set bb = 'Rejected: '||excluded.* where excluded.aa > 0 and excluded.bb != '' and excluded.cc is not null"
  },
  {
    "comment": "updatable_views - Statement 602",
    "query": "insert into uv_iocu_view (aa,bb) values (1,'y') on conflict (aa) do update set bb = 'Rejected: '||excluded.* where excluded.aa > 0 and excluded.bb != '' and excluded.cc is not null"
  },
  {
    "comment": "updatable_views - Statement 603",
    "query": "select * from uv_iocu_view"
  },
  {
    "comment": "updatable_views - Statement 604",
    "query": "delete from uv_iocu_view"
  },
  {
    "comment": "updatable_views - Statement 605",
    "query": "insert into uv_iocu_view (aa) values (1) on conflict (aa) do update set bb = 'Rejected: '||excluded.*"
  },
  {
    "comment": "updatable_views - Statement 606",
    "query": "alter table uv_iocu_tab alter column b set default 'table default'"
  },
  {
    "comment": "updatable_views - Statement 607",
    "query": "alter view uv_iocu_view alter column bb set default 'view default'"
  },
  {
    "comment": "updatable_views - Statement 608",
    "query": "insert into uv_iocu_view (aa) values (1) on conflict (aa) do update set cc = 'XXX'"
  },
  {
    "comment": "updatable_views - Statement 609",
    "query": "create table base_tbl(a int unique, b text, c float)"
  },
  {
    "comment": "updatable_views - Statement 610",
    "query": "insert into base_tbl values (1,'xxx',1.0)"
  },
  {
    "comment": "updatable_views - Statement 611",
    "query": "grant select (aa,bb) on rw_view1 to regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 612",
    "query": "grant insert on rw_view1 to regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 613",
    "query": "grant update (bb) on rw_view1 to regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 614",
    "query": "insert into rw_view1 values ('yyy',2.0,1) on conflict (aa) do update set bb = excluded.cc"
  },
  {
    "comment": "updatable_views - Statement 615",
    "query": "insert into rw_view1 values ('yyy',2.0,1) on conflict (aa) do update set bb = rw_view1.cc"
  },
  {
    "comment": "updatable_views - Statement 616",
    "query": "insert into rw_view1 values ('yyy',2.0,1) on conflict (aa) do update set bb = excluded.bb"
  },
  {
    "comment": "updatable_views - Statement 617",
    "query": "insert into rw_view1 values ('zzz',2.0,1) on conflict (aa) do update set bb = rw_view1.bb||'xxx'"
  },
  {
    "comment": "updatable_views - Statement 618",
    "query": "insert into rw_view1 values ('zzz',2.0,1) on conflict (aa) do update set cc = 3.0"
  },
  {
    "comment": "updatable_views - Statement 619",
    "query": "grant select (a,b) on base_tbl to regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 620",
    "query": "grant insert (a,b) on base_tbl to regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 621",
    "query": "grant update (a,b) on base_tbl to regress_view_user2"
  },
  {
    "comment": "updatable_views - Statement 622",
    "query": "insert into rw_view2 (aa,bb) values (1,'xxx') on conflict (aa) do update set bb = excluded.bb"
  },
  {
    "comment": "updatable_views - Statement 623",
    "query": "create view rw_view3 as select b as bb, a as aa from base_tbl"
  },
  {
    "comment": "updatable_views - Statement 624",
    "query": "insert into rw_view3 (aa,bb) values (1,'xxx') on conflict (aa) do update set bb = excluded.bb"
  },
  {
    "comment": "updatable_views - Statement 625",
    "query": "create view rw_view4 as select aa, bb, cc FROM rw_view1"
  },
  {
    "comment": "updatable_views - Statement 626",
    "query": "insert into rw_view4 (aa,bb) values (1,'yyy') on conflict (aa) do update set bb = excluded.bb"
  },
  {
    "comment": "updatable_views - Statement 627",
    "query": "create view rw_view5 as select aa, bb FROM rw_view1"
  },
  {
    "comment": "updatable_views - Statement 628",
    "query": "insert into rw_view5 (aa,bb) values (1,'yyy') on conflict (aa) do update set bb = excluded.bb"
  },
  {
    "comment": "updatable_views - Statement 629",
    "query": "drop view rw_view5"
  },
  {
    "comment": "updatable_views - Statement 630",
    "query": "drop view rw_view4"
  },
  {
    "comment": "updatable_views - Statement 631",
    "query": "drop view rw_view3"
  },
  {
    "comment": "updatable_views - Statement 632",
    "query": "drop view rw_view2"
  },
  {
    "comment": "updatable_views - Statement 633",
    "query": "create table base_tab_def (a int, b text default 'Table default', c text default 'Table default', d text, e text)"
  },
  {
    "comment": "updatable_views - Statement 634",
    "query": "create view base_tab_def_view as select * from base_tab_def"
  },
  {
    "comment": "updatable_views - Statement 635",
    "query": "alter view base_tab_def_view alter b set default 'View default'"
  },
  {
    "comment": "updatable_views - Statement 636",
    "query": "alter view base_tab_def_view alter d set default 'View default'"
  },
  {
    "comment": "updatable_views - Statement 637",
    "query": "insert into base_tab_def values (1)"
  },
  {
    "comment": "updatable_views - Statement 638",
    "query": "insert into base_tab_def values (2), (3)"
  },
  {
    "comment": "updatable_views - Statement 639",
    "query": "insert into base_tab_def values (4, default, default, default, default)"
  },
  {
    "comment": "updatable_views - Statement 640",
    "query": "insert into base_tab_def values (5, default, default, default, default), (6, default, default, default, default)"
  },
  {
    "comment": "updatable_views - Statement 641",
    "query": "insert into base_tab_def_view values (11)"
  },
  {
    "comment": "updatable_views - Statement 642",
    "query": "insert into base_tab_def_view values (12), (13)"
  },
  {
    "comment": "updatable_views - Statement 643",
    "query": "insert into base_tab_def_view values (14, default, default, default, default)"
  },
  {
    "comment": "updatable_views - Statement 644",
    "query": "insert into base_tab_def_view values (15, default, default, default, default), (16, default, default, default, default)"
  },
  {
    "comment": "updatable_views - Statement 645",
    "query": "insert into base_tab_def_view values (17), (default)"
  },
  {
    "comment": "updatable_views - Statement 646",
    "query": "select * from base_tab_def order by a"
  },
  {
    "comment": "updatable_views - Statement 647",
    "query": "create function base_tab_def_view_instrig_func() returns trigger as $$ begin insert into base_tab_def values (new.a, new.b, new.c, new.d, new.e)"
  },
  {
    "comment": "updatable_views - Statement 648",
    "query": "create trigger base_tab_def_view_instrig instead of insert on base_tab_def_view for each row execute function base_tab_def_view_instrig_func()"
  },
  {
    "comment": "updatable_views - Statement 649",
    "query": "truncate base_tab_def"
  },
  {
    "comment": "updatable_views - Statement 650",
    "query": "drop trigger base_tab_def_view_instrig on base_tab_def_view"
  },
  {
    "comment": "updatable_views - Statement 651",
    "query": "drop function base_tab_def_view_instrig_func"
  },
  {
    "comment": "updatable_views - Statement 652",
    "query": "create rule base_tab_def_view_ins_rule as on insert to base_tab_def_view do instead insert into base_tab_def values (new.a, new.b, new.c, new.d, new.e)"
  },
  {
    "comment": "updatable_views - Statement 653",
    "query": "drop rule base_tab_def_view_ins_rule on base_tab_def_view"
  },
  {
    "comment": "updatable_views - Statement 654",
    "query": "create rule base_tab_def_view_ins_rule as on insert to base_tab_def_view do also insert into base_tab_def values (new.a, new.b, new.c, new.d, new.e)"
  },
  {
    "comment": "updatable_views - Statement 655",
    "query": "select * from base_tab_def order by a, c NULLS LAST"
  },
  {
    "comment": "updatable_views - Statement 656",
    "query": "create rule base_tab_def_view_ins_rule as on insert to base_tab_def_view do also insert into base_tab_def (a, b, e) select new.a, new.b, 'xxx'"
  },
  {
    "comment": "updatable_views - Statement 657",
    "query": "insert into base_tab_def_view values (1, default, default, default, default)"
  },
  {
    "comment": "updatable_views - Statement 658",
    "query": "insert into base_tab_def_view values (2, default, default, default, default), (3, default, default, default, default)"
  },
  {
    "comment": "updatable_views - Statement 659",
    "query": "select * from base_tab_def order by a, e nulls first"
  },
  {
    "comment": "updatable_views - Statement 660",
    "query": "drop view base_tab_def_view"
  },
  {
    "comment": "updatable_views - Statement 661",
    "query": "drop table base_tab_def"
  },
  {
    "comment": "updatable_views - Statement 662",
    "query": "create table base_tab (a serial, b int[], c text, d text default 'Table default')"
  },
  {
    "comment": "updatable_views - Statement 663",
    "query": "create view base_tab_view as select c, a, b from base_tab"
  },
  {
    "comment": "updatable_views - Statement 664",
    "query": "alter view base_tab_view alter column c set default 'View default'"
  },
  {
    "comment": "updatable_views - Statement 665",
    "query": "insert into base_tab_view (b[1], b[2], c, b[5], b[4], a, b[3]) values (1, 2, default, 5, 4, default, 3), (10, 11, 'C value', 14, 13, 100, 12)"
  },
  {
    "comment": "updatable_views - Statement 666",
    "query": "select * from base_tab order by a"
  },
  {
    "comment": "updatable_views - Statement 667",
    "query": "drop view base_tab_view"
  },
  {
    "comment": "updatable_views - Statement 668",
    "query": "drop table base_tab"
  }
]