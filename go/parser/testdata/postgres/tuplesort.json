[
  {
    "comment": "tuplesort - Statement 1",
    "query": "SET max_parallel_maintenance_workers = 0"
  },
  {
    "comment": "tuplesort - Statement 2",
    "query": "SET max_parallel_workers = 0"
  },
  {
    "comment": "tuplesort - Statement 3",
    "query": "CREATE TEMP TABLE abbrev_abort_uuids ( id serial not null, abort_increasing uuid, abort_decreasing uuid, noabort_increasing uuid, noabort_decreasing uuid)",
    "expected": "CREATE TEMPORARY TABLE abbrev_abort_uuids (id serial NOT NULL, abort_increasing UUID, abort_decreasing UUID, noabort_increasing UUID, noabort_decreasing UUID)"
  },
  {
    "comment": "tuplesort - Statement 4",
    "query": "INSERT INTO abbrev_abort_uuids (abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing) SELECT ('00000000-0000-0000-0000-'||to_char(g.i, '000000000000FM'))::uuid abort_increasing, ('00000000-0000-0000-0000-'||to_char(20000 - g.i, '000000000000FM'))::uuid abort_decreasing, (to_char(g.i % 10009, '00000000FM')||'-0000-0000-0000-'||to_char(g.i, '000000000000FM'))::uuid noabort_increasing, (to_char(((20000 - g.i) % 10009), '00000000FM')||'-0000-0000-0000-'||to_char(20000 - g.i, '000000000000FM'))::uuid noabort_decreasing FROM generate_series(0, 20000, 1) g(i)",
    "expected": "INSERT INTO abbrev_abort_uuids (abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing) SELECT CAST(('00000000-0000-0000-0000-' || to_char(g.i, '000000000000FM')) AS UUID) AS abort_increasing, CAST(('00000000-0000-0000-0000-' || to_char(20000 - g.i, '000000000000FM')) AS UUID) AS abort_decreasing, CAST((to_char(g.i % 10009, '00000000FM') || '-0000-0000-0000-' || to_char(g.i, '000000000000FM')) AS UUID) AS noabort_increasing, CAST((to_char(((20000 - g.i) % 10009), '00000000FM') || '-0000-0000-0000-' || to_char(20000 - g.i, '000000000000FM')) AS UUID) AS noabort_decreasing FROM generate_series(0, 20000, 1) AS g(i)"
  },
  {
    "comment": "tuplesort - Statement 5",
    "query": "INSERT INTO abbrev_abort_uuids(id) VALUES(0)",
    "expected": "INSERT INTO abbrev_abort_uuids (id) VALUES (0)"
  },
  {
    "comment": "tuplesort - Statement 6",
    "query": "INSERT INTO abbrev_abort_uuids DEFAULT VALUES"
  },
  {
    "comment": "tuplesort - Statement 7",
    "query": "INSERT INTO abbrev_abort_uuids (abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing) SELECT abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids WHERE (id \u003c 10 OR id \u003e 19990) AND id % 3 = 0 AND abort_increasing is not null",
    "expected": "INSERT INTO abbrev_abort_uuids (abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing) (SELECT abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids WHERE (id \u003c 10 OR id \u003e 19990) AND id % 3 = 0 AND abort_increasing IS NOT NULL)"
  },
  {
    "comment": "tuplesort - Statement 8",
    "query": "SELECT abort_increasing, abort_decreasing FROM abbrev_abort_uuids ORDER BY abort_increasing OFFSET 20000 - 4"
  },
  {
    "comment": "tuplesort - Statement 9",
    "query": "SELECT abort_increasing, abort_decreasing FROM abbrev_abort_uuids ORDER BY abort_decreasing NULLS FIRST OFFSET 20000 - 4"
  },
  {
    "comment": "tuplesort - Statement 10",
    "query": "SELECT noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_increasing OFFSET 20000 - 4"
  },
  {
    "comment": "tuplesort - Statement 11",
    "query": "SELECT noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_decreasing NULLS FIRST OFFSET 20000 - 4"
  },
  {
    "comment": "tuplesort - Statement 12",
    "query": "SELECT abort_increasing, noabort_increasing FROM abbrev_abort_uuids ORDER BY abort_increasing LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 13",
    "query": "SELECT abort_increasing, noabort_increasing FROM abbrev_abort_uuids ORDER BY noabort_increasing NULLS FIRST LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 14",
    "query": "CREATE INDEX abbrev_abort_uuids__noabort_increasing_idx ON abbrev_abort_uuids (noabort_increasing)",
    "expected": "CREATE INDEX abbrev_abort_uuids__noabort_increasing_idx ON abbrev_abort_uuids USING btree ( noabort_increasing )"
  },
  {
    "comment": "tuplesort - Statement 15",
    "query": "CREATE INDEX abbrev_abort_uuids__noabort_decreasing_idx ON abbrev_abort_uuids (noabort_decreasing)",
    "expected": "CREATE INDEX abbrev_abort_uuids__noabort_decreasing_idx ON abbrev_abort_uuids USING btree ( noabort_decreasing )"
  },
  {
    "comment": "tuplesort - Statement 16",
    "query": "EXPLAIN (COSTS OFF) SELECT id, noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_increasing LIMIT 5",
    "expected": "EXPLAIN (COSTS false) SELECT id, noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_increasing LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 17",
    "query": "SELECT id, noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_increasing LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 18",
    "query": "EXPLAIN (COSTS OFF) SELECT id, noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_decreasing LIMIT 5",
    "expected": "EXPLAIN (COSTS false) SELECT id, noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_decreasing LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 19",
    "query": "SELECT id, noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_decreasing LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 20",
    "query": "CREATE INDEX abbrev_abort_uuids__abort_increasing_idx ON abbrev_abort_uuids (abort_increasing)",
    "expected": "CREATE INDEX abbrev_abort_uuids__abort_increasing_idx ON abbrev_abort_uuids USING btree ( abort_increasing )"
  },
  {
    "comment": "tuplesort - Statement 21",
    "query": "CREATE INDEX abbrev_abort_uuids__abort_decreasing_idx ON abbrev_abort_uuids (abort_decreasing)",
    "expected": "CREATE INDEX abbrev_abort_uuids__abort_decreasing_idx ON abbrev_abort_uuids USING btree ( abort_decreasing )"
  },
  {
    "comment": "tuplesort - Statement 22",
    "query": "EXPLAIN (COSTS OFF) SELECT id, abort_increasing, abort_decreasing FROM abbrev_abort_uuids ORDER BY abort_increasing LIMIT 5",
    "expected": "EXPLAIN (COSTS false) SELECT id, abort_increasing, abort_decreasing FROM abbrev_abort_uuids ORDER BY abort_increasing LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 23",
    "query": "SELECT id, abort_increasing, abort_decreasing FROM abbrev_abort_uuids ORDER BY abort_increasing LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 24",
    "query": "EXPLAIN (COSTS OFF) SELECT id, abort_increasing, abort_decreasing FROM abbrev_abort_uuids ORDER BY abort_decreasing LIMIT 5",
    "expected": "EXPLAIN (COSTS false) SELECT id, abort_increasing, abort_decreasing FROM abbrev_abort_uuids ORDER BY abort_decreasing LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 25",
    "query": "SELECT id, abort_increasing, abort_decreasing FROM abbrev_abort_uuids ORDER BY abort_decreasing LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 26",
    "query": "BEGIN"
  },
  {
    "comment": "tuplesort - Statement 27",
    "query": "SET LOCAL enable_indexscan = false"
  },
  {
    "comment": "tuplesort - Statement 28",
    "query": "CLUSTER abbrev_abort_uuids USING abbrev_abort_uuids__abort_increasing_idx"
  },
  {
    "comment": "tuplesort - Statement 29",
    "query": "SELECT id, abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids ORDER BY ctid LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 30",
    "query": "SELECT id, abort_increasing, abort_decreasing, noabort_increasing, noabort_decreasing FROM abbrev_abort_uuids ORDER BY ctid DESC LIMIT 5"
  },
  {
    "comment": "tuplesort - Statement 31",
    "query": "ROLLBACK"
  },
  {
    "comment": "tuplesort - Statement 32",
    "query": "CLUSTER abbrev_abort_uuids USING abbrev_abort_uuids__abort_decreasing_idx"
  },
  {
    "comment": "tuplesort - Statement 33",
    "query": "CLUSTER abbrev_abort_uuids USING abbrev_abort_uuids__noabort_increasing_idx"
  },
  {
    "comment": "tuplesort - Statement 34",
    "query": "CLUSTER abbrev_abort_uuids USING abbrev_abort_uuids__noabort_decreasing_idx"
  },
  {
    "comment": "tuplesort - Statement 35",
    "query": "SELECT LEFT(a,10),b FROM (VALUES(REPEAT('a', 512 * 1024),1),(REPEAT('b', 512 * 1024),2)) v(a,b) ORDER BY v.a DESC",
    "expected": "SELECT left(a, 10), b FROM (VALUES (repeat('a', 512 * 1024), 1), (repeat('b', 512 * 1024), 2)) AS v(a, b) ORDER BY v.a DESC"
  },
  {
    "comment": "tuplesort - Statement 36",
    "query": "EXPLAIN (COSTS OFF) DECLARE c SCROLL CURSOR FOR SELECT noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_decreasing",
    "expected": "EXPLAIN (COSTS false) DECLARE c SCROLL CURSOR FOR SELECT noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_decreasing"
  },
  {
    "comment": "tuplesort - Statement 37",
    "query": "DECLARE c SCROLL CURSOR FOR SELECT noabort_decreasing FROM abbrev_abort_uuids ORDER BY noabort_decreasing"
  },
  {
    "comment": "tuplesort - Statement 38",
    "query": "FETCH NEXT FROM c",
    "expected": "FETCH FROM c"
  },
  {
    "comment": "tuplesort - Statement 39",
    "query": "FETCH BACKWARD FROM c"
  },
  {
    "comment": "tuplesort - Statement 40",
    "query": "FETCH LAST FROM c"
  },
  {
    "comment": "tuplesort - Statement 41",
    "query": "COMMIT"
  },
  {
    "comment": "tuplesort - Statement 42",
    "query": "SET LOCAL work_mem = '100kB'"
  },
  {
    "comment": "tuplesort - Statement 43",
    "query": "SELECT (array_agg(id ORDER BY id DESC NULLS FIRST))[0:5], (array_agg(abort_increasing ORDER BY abort_increasing DESC NULLS LAST))[0:5], (array_agg(id::text ORDER BY id::text DESC NULLS LAST))[0:5], percentile_disc(0.99) WITHIN GROUP (ORDER BY id), percentile_disc(0.01) WITHIN GROUP (ORDER BY id), percentile_disc(0.8) WITHIN GROUP (ORDER BY abort_increasing), percentile_disc(0.2) WITHIN GROUP (ORDER BY id::text), rank('00000000-0000-0000-0000-000000000000', '2', '2') WITHIN GROUP (ORDER BY noabort_increasing, id, id::text) FROM ( SELECT * FROM abbrev_abort_uuids UNION ALL SELECT NULL, NULL, NULL, NULL, NULL) s",
    "expected": "SELECT (array_agg(id ORDER BY id DESC NULLS FIRST))[0:5], (array_agg(abort_increasing ORDER BY abort_increasing DESC NULLS LAST))[0:5], (array_agg(CAST(id AS TEXT) ORDER BY CAST(id AS TEXT) DESC NULLS LAST))[0:5], percentile_disc(0.99) WITHIN GROUP (ORDER BY id), percentile_disc(0.01) WITHIN GROUP (ORDER BY id), percentile_disc(0.8) WITHIN GROUP (ORDER BY abort_increasing), percentile_disc(0.2) WITHIN GROUP (ORDER BY CAST(id AS TEXT)), RANK('00000000-0000-0000-0000-000000000000', '2', '2') WITHIN GROUP (ORDER BY noabort_increasing, id, CAST(id AS TEXT)) FROM (SELECT * FROM abbrev_abort_uuids UNION ALL SELECT NULL, NULL, NULL, NULL, NULL) AS s"
  },
  {
    "comment": "tuplesort - Statement 44",
    "query": "CREATE TEMP TABLE test_mark_restore(col1 int, col2 int, col12 int)",
    "expected": "CREATE TEMPORARY TABLE test_mark_restore (col1 INT, col2 INT, col12 INT)"
  },
  {
    "comment": "tuplesort - Statement 45",
    "query": "INSERT INTO test_mark_restore(col1, col2, col12) SELECT a.i, b.i, a.i * b.i FROM generate_series(1, 500) a(i), generate_series(1, 5) b(i)",
    "expected": "INSERT INTO test_mark_restore (col1, col2, col12) SELECT a.i, b.i, a.i * b.i FROM generate_series(1, 500) AS a(i), generate_series(1, 5) AS b(i)"
  },
  {
    "comment": "tuplesort - Statement 46",
    "query": "SET LOCAL enable_nestloop = off"
  },
  {
    "comment": "tuplesort - Statement 47",
    "query": "SET LOCAL enable_hashjoin = off"
  },
  {
    "comment": "tuplesort - Statement 48",
    "query": "SET LOCAL enable_material = off"
  },
  {
    "comment": "tuplesort - Statement 49",
    "query": "SELECT $$ SELECT col12, count(distinct a.col1), count(distinct a.col2), count(distinct b.col1), count(distinct b.col2), count(*) FROM test_mark_restore a JOIN test_mark_restore b USING(col12) GROUP BY 1 HAVING count(*) \u003e 1 ORDER BY 2 DESC, 1 DESC, 3 DESC, 4 DESC, 5 DESC, 6 DESC LIMIT 10 $$ AS qry",
    "expected": "SELECT ' SELECT col12, count(distinct a.col1), count(distinct a.col2), count(distinct b.col1), count(distinct b.col2), count(*) FROM test_mark_restore a JOIN test_mark_restore b USING(col12) GROUP BY 1 HAVING count(*) \u003e 1 ORDER BY 2 DESC, 1 DESC, 3 DESC, 4 DESC, 5 DESC, 6 DESC LIMIT 10 ' AS qry"
  },
  {
    "comment": "tuplesort - Statement 50",
    "query": "EXPLAIN (COSTS OFF) 1",
    "error": "parse error at position 21: syntax error"
  }
]
