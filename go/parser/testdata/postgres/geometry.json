[
  {
    "comment": "geometry - Statement 1",
    "query": "SET extra_float_digits TO -3",
    "expected": "SET extra_float_digits = -3"
  },
  {
    "comment": "geometry - Statement 2",
    "query": "SELECT center(f1) AS center FROM BOX_TBL",
    "expected": "SELECT center(f1) AS center FROM box_tbl"
  },
  {
    "comment": "geometry - Statement 3",
    "query": "SELECT (@@ f1) AS center FROM BOX_TBL",
    "expected": "SELECT (@@f1) AS center FROM box_tbl"
  },
  {
    "comment": "geometry - Statement 4",
    "query": "SELECT point(f1) AS center FROM CIRCLE_TBL",
    "expected": "SELECT point(f1) AS center FROM circle_tbl"
  },
  {
    "comment": "geometry - Statement 5",
    "query": "SELECT (@@ f1) AS center FROM CIRCLE_TBL",
    "expected": "SELECT (@@f1) AS center FROM circle_tbl"
  },
  {
    "comment": "geometry - Statement 6",
    "query": "SELECT (@@ f1) AS center FROM POLYGON_TBL WHERE (# f1) \u003e 2",
    "expected": "SELECT (@@f1) AS center FROM polygon_tbl WHERE (#f1) \u003e 2"
  },
  {
    "comment": "geometry - Statement 7",
    "query": "SELECT p1.f1 FROM POINT_TBL p1 WHERE ishorizontal(p1.f1, point '(0,0)')",
    "expected": "SELECT p1.f1 FROM point_tbl AS p1 WHERE ishorizontal(p1.f1, CAST('(0,0)' AS point))"
  },
  {
    "comment": "geometry - Statement 8",
    "query": "SELECT p1.f1 FROM POINT_TBL p1 WHERE p1.f1 ?- point '(0,0)'",
    "expected": "SELECT p1.f1 FROM point_tbl AS p1 WHERE p1.f1 ?- CAST('(0,0)' AS point)"
  },
  {
    "comment": "geometry - Statement 9",
    "query": "SELECT p1.f1 FROM POINT_TBL p1 WHERE isvertical(p1.f1, point '(5.1,34.5)')",
    "expected": "SELECT p1.f1 FROM point_tbl AS p1 WHERE isvertical(p1.f1, CAST('(5.1,34.5)' AS point))"
  },
  {
    "comment": "geometry - Statement 10",
    "query": "SELECT p1.f1 FROM POINT_TBL p1 WHERE p1.f1 ?| point '(5.1,34.5)'",
    "expected": "SELECT p1.f1 FROM point_tbl AS p1 WHERE p1.f1 ?| CAST('(5.1,34.5)' AS point)"
  },
  {
    "comment": "geometry - Statement 11",
    "query": "SELECT p1.f1, p2.f1, slope(p1.f1, p2.f1) FROM POINT_TBL p1, POINT_TBL p2",
    "expected": "SELECT p1.f1, p2.f1, slope(p1.f1, p2.f1) FROM point_tbl AS p1, point_tbl AS p2"
  },
  {
    "comment": "geometry - Statement 12",
    "query": "SELECT p1.f1, p2.f1, p1.f1 + p2.f1 FROM POINT_TBL p1, POINT_TBL p2",
    "expected": "SELECT p1.f1, p2.f1, p1.f1 + p2.f1 FROM point_tbl AS p1, point_tbl AS p2"
  },
  {
    "comment": "geometry - Statement 13",
    "query": "SELECT p1.f1, p2.f1, p1.f1 - p2.f1 FROM POINT_TBL p1, POINT_TBL p2",
    "expected": "SELECT p1.f1, p2.f1, p1.f1 - p2.f1 FROM point_tbl AS p1, point_tbl AS p2"
  },
  {
    "comment": "geometry - Statement 14",
    "query": "SELECT p1.f1, p2.f1, p1.f1 * p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p1.f1[0] BETWEEN 1 AND 1000",
    "expected": "SELECT p1.f1, p2.f1, p1.f1 * p2.f1 FROM point_tbl AS p1, point_tbl AS p2 WHERE p1.f1[0] BETWEEN 1 AND 1000"
  },
  {
    "comment": "geometry - Statement 15",
    "query": "SELECT p1.f1, p2.f1, p1.f1 * p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p1.f1[0] \u003c 1",
    "expected": "SELECT p1.f1, p2.f1, p1.f1 * p2.f1 FROM point_tbl AS p1, point_tbl AS p2 WHERE p1.f1[0] \u003c 1"
  },
  {
    "comment": "geometry - Statement 16",
    "query": "SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1[0] BETWEEN 1 AND 1000",
    "expected": "SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM point_tbl AS p1, point_tbl AS p2 WHERE p2.f1[0] BETWEEN 1 AND 1000"
  },
  {
    "comment": "geometry - Statement 17",
    "query": "SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1[0] \u003e 1000",
    "expected": "SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM point_tbl AS p1, point_tbl AS p2 WHERE p2.f1[0] \u003e 1000"
  },
  {
    "comment": "geometry - Statement 18",
    "query": "SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1 ~= '(0,0)'::point",
    "expected": "SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM point_tbl AS p1, point_tbl AS p2 WHERE p2.f1 ~= CAST('(0,0)' AS point)"
  },
  {
    "comment": "geometry - Statement 19",
    "query": "SELECT p.f1, l.s, p.f1 \u003c-\u003e l.s AS dist_pl, l.s \u003c-\u003e p.f1 AS dist_lp FROM POINT_TBL p, LINE_TBL l",
    "expected": "SELECT p.f1, l.s, p.f1 \u003c-\u003e l.s AS dist_pl, l.s \u003c-\u003e p.f1 AS dist_lp FROM point_tbl AS p, line_tbl AS l"
  },
  {
    "comment": "geometry - Statement 20",
    "query": "SELECT p.f1, l.s, p.f1 \u003c-\u003e l.s AS dist_ps, l.s \u003c-\u003e p.f1 AS dist_sp FROM POINT_TBL p, LSEG_TBL l",
    "expected": "SELECT p.f1, l.s, p.f1 \u003c-\u003e l.s AS dist_ps, l.s \u003c-\u003e p.f1 AS dist_sp FROM point_tbl AS p, lseg_tbl AS l"
  },
  {
    "comment": "geometry - Statement 21",
    "query": "SELECT p.f1, b.f1, p.f1 \u003c-\u003e b.f1 AS dist_pb, b.f1 \u003c-\u003e p.f1 AS dist_bp FROM POINT_TBL p, BOX_TBL b",
    "expected": "SELECT p.f1, b.f1, p.f1 \u003c-\u003e b.f1 AS dist_pb, b.f1 \u003c-\u003e p.f1 AS dist_bp FROM point_tbl AS p, box_tbl AS b"
  },
  {
    "comment": "geometry - Statement 22",
    "query": "SELECT p.f1, p1.f1, p.f1 \u003c-\u003e p1.f1 AS dist_ppath, p1.f1 \u003c-\u003e p.f1 AS dist_pathp FROM POINT_TBL p, PATH_TBL p1",
    "expected": "SELECT p.f1, p1.f1, p.f1 \u003c-\u003e p1.f1 AS dist_ppath, p1.f1 \u003c-\u003e p.f1 AS dist_pathp FROM point_tbl AS p, path_tbl AS p1"
  },
  {
    "comment": "geometry - Statement 23",
    "query": "SELECT p.f1, p1.f1, p.f1 \u003c-\u003e p1.f1 AS dist_ppoly, p1.f1 \u003c-\u003e p.f1 AS dist_polyp FROM POINT_TBL p, POLYGON_TBL p1",
    "expected": "SELECT p.f1, p1.f1, p.f1 \u003c-\u003e p1.f1 AS dist_ppoly, p1.f1 \u003c-\u003e p.f1 AS dist_polyp FROM point_tbl AS p, polygon_tbl AS p1"
  },
  {
    "comment": "geometry - Statement 24",
    "query": "SELECT p1.f1, p2.f1, line(p1.f1, p2.f1) FROM POINT_TBL p1, POINT_TBL p2 WHERE p1.f1 \u003c\u003e p2.f1",
    "expected": "SELECT p1.f1, p2.f1, line(p1.f1, p2.f1) FROM point_tbl AS p1, point_tbl AS p2 WHERE p1.f1 \u003c\u003e p2.f1"
  },
  {
    "comment": "geometry - Statement 25",
    "query": "SELECT p.f1, l.s, p.f1 ## l.s FROM POINT_TBL p, LINE_TBL l",
    "expected": "SELECT p.f1, l.s, p.f1 ## l.s FROM point_tbl AS p, line_tbl AS l"
  },
  {
    "comment": "geometry - Statement 26",
    "query": "SELECT p.f1, l.s, p.f1 ## l.s FROM POINT_TBL p, LSEG_TBL l",
    "expected": "SELECT p.f1, l.s, p.f1 ## l.s FROM point_tbl AS p, lseg_tbl AS l"
  },
  {
    "comment": "geometry - Statement 27",
    "query": "SELECT p.f1, b.f1, p.f1 ## b.f1 FROM POINT_TBL p, BOX_TBL b",
    "expected": "SELECT p.f1, b.f1, p.f1 ## b.f1 FROM point_tbl AS p, box_tbl AS b"
  },
  {
    "comment": "geometry - Statement 28",
    "query": "SELECT p.f1, l.s FROM POINT_TBL p, LINE_TBL l WHERE p.f1 \u003c@ l.s",
    "expected": "SELECT p.f1, l.s FROM point_tbl AS p, line_tbl AS l WHERE p.f1 \u003c@ l.s"
  },
  {
    "comment": "geometry - Statement 29",
    "query": "SELECT p.f1, l.s FROM POINT_TBL p, LSEG_TBL l WHERE p.f1 \u003c@ l.s",
    "expected": "SELECT p.f1, l.s FROM point_tbl AS p, lseg_tbl AS l WHERE p.f1 \u003c@ l.s"
  },
  {
    "comment": "geometry - Statement 30",
    "query": "SELECT p.f1, p1.f1 FROM POINT_TBL p, PATH_TBL p1 WHERE p.f1 \u003c@ p1.f1",
    "expected": "SELECT p.f1, p1.f1 FROM point_tbl AS p, path_tbl AS p1 WHERE p.f1 \u003c@ p1.f1"
  },
  {
    "comment": "geometry - Statement 31",
    "query": "SELECT s FROM LINE_TBL WHERE ?| s",
    "expected": "SELECT s FROM line_tbl WHERE ?|s"
  },
  {
    "comment": "geometry - Statement 32",
    "query": "SELECT s FROM LINE_TBL WHERE ?- s",
    "expected": "SELECT s FROM line_tbl WHERE ?-s"
  },
  {
    "comment": "geometry - Statement 33",
    "query": "SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s = l2.s",
    "expected": "SELECT l1.s, l2.s FROM line_tbl AS l1, line_tbl AS l2 WHERE l1.s = l2.s"
  },
  {
    "comment": "geometry - Statement 34",
    "query": "SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?|| l2.s",
    "expected": "SELECT l1.s, l2.s FROM line_tbl AS l1, line_tbl AS l2 WHERE l1.s ?|| l2.s"
  },
  {
    "comment": "geometry - Statement 35",
    "query": "SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?-| l2.s",
    "expected": "SELECT l1.s, l2.s FROM line_tbl AS l1, line_tbl AS l2 WHERE l1.s ?-| l2.s"
  },
  {
    "comment": "geometry - Statement 36",
    "query": "SELECT l1.s, l2.s, l1.s \u003c-\u003e l2.s FROM LINE_TBL l1, LINE_TBL l2",
    "expected": "SELECT l1.s, l2.s, l1.s \u003c-\u003e l2.s FROM line_tbl AS l1, line_tbl AS l2"
  },
  {
    "comment": "geometry - Statement 37",
    "query": "SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?# l2.s",
    "expected": "SELECT l1.s, l2.s FROM line_tbl AS l1, line_tbl AS l2 WHERE l1.s ?# l2.s"
  },
  {
    "comment": "geometry - Statement 38",
    "query": "SELECT l.s, b.f1 FROM LINE_TBL l, BOX_TBL b WHERE l.s ?# b.f1",
    "expected": "SELECT l.s, b.f1 FROM line_tbl AS l, box_tbl AS b WHERE l.s ?# b.f1"
  },
  {
    "comment": "geometry - Statement 39",
    "query": "SELECT l1.s, l2.s, l1.s # l2.s FROM LINE_TBL l1, LINE_TBL l2",
    "expected": "SELECT l1.s, l2.s, l1.s # l2.s FROM line_tbl AS l1, line_tbl AS l2"
  },
  {
    "comment": "geometry - Statement 40",
    "query": "SELECT l.s, l1.s, l.s ## l1.s FROM LINE_TBL l, LSEG_TBL l1",
    "expected": "SELECT l.s, l1.s, l.s ## l1.s FROM line_tbl AS l, lseg_tbl AS l1"
  },
  {
    "comment": "geometry - Statement 41",
    "query": "SELECT p.f1, l.s, l.s # p.f1 AS intersection FROM LSEG_TBL l, POINT_TBL p",
    "expected": "SELECT p.f1, l.s, l.s # p.f1 AS intersection FROM lseg_tbl AS l, point_tbl AS p"
  },
  {
    "comment": "geometry - Statement 42",
    "query": "SELECT s, @-@ s FROM LSEG_TBL",
    "expected": "SELECT s, @-@s FROM lseg_tbl"
  },
  {
    "comment": "geometry - Statement 43",
    "query": "SELECT s FROM LSEG_TBL WHERE ?| s",
    "expected": "SELECT s FROM lseg_tbl WHERE ?|s"
  },
  {
    "comment": "geometry - Statement 44",
    "query": "SELECT s FROM LSEG_TBL WHERE ?- s",
    "expected": "SELECT s FROM lseg_tbl WHERE ?-s"
  },
  {
    "comment": "geometry - Statement 45",
    "query": "SELECT s, @@ s FROM LSEG_TBL",
    "expected": "SELECT s, @@s FROM lseg_tbl"
  },
  {
    "comment": "geometry - Statement 46",
    "query": "SELECT s, s::point FROM LSEG_TBL",
    "expected": "SELECT s, CAST(s AS point) FROM lseg_tbl"
  },
  {
    "comment": "geometry - Statement 47",
    "query": "SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s \u003c l2.s",
    "expected": "SELECT l1.s, l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2 WHERE l1.s \u003c l2.s"
  },
  {
    "comment": "geometry - Statement 48",
    "query": "SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s \u003c= l2.s",
    "expected": "SELECT l1.s, l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2 WHERE l1.s \u003c= l2.s"
  },
  {
    "comment": "geometry - Statement 49",
    "query": "SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s = l2.s",
    "expected": "SELECT l1.s, l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2 WHERE l1.s = l2.s"
  },
  {
    "comment": "geometry - Statement 50",
    "query": "SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s \u003e= l2.s",
    "expected": "SELECT l1.s, l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2 WHERE l1.s \u003e= l2.s"
  },
  {
    "comment": "geometry - Statement 51",
    "query": "SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s \u003e l2.s",
    "expected": "SELECT l1.s, l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2 WHERE l1.s \u003e l2.s"
  },
  {
    "comment": "geometry - Statement 52",
    "query": "SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s != l2.s",
    "expected": "SELECT l1.s, l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2 WHERE l1.s \u003c\u003e l2.s"
  },
  {
    "comment": "geometry - Statement 53",
    "query": "SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s ?|| l2.s",
    "expected": "SELECT l1.s, l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2 WHERE l1.s ?|| l2.s"
  },
  {
    "comment": "geometry - Statement 54",
    "query": "SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s ?-| l2.s",
    "expected": "SELECT l1.s, l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2 WHERE l1.s ?-| l2.s"
  },
  {
    "comment": "geometry - Statement 55",
    "query": "SELECT l.s, l1.s, l.s \u003c-\u003e l1.s AS dist_sl, l1.s \u003c-\u003e l.s AS dist_ls FROM LSEG_TBL l, LINE_TBL l1",
    "expected": "SELECT l.s, l1.s, l.s \u003c-\u003e l1.s AS dist_sl, l1.s \u003c-\u003e l.s AS dist_ls FROM lseg_tbl AS l, line_tbl AS l1"
  },
  {
    "comment": "geometry - Statement 56",
    "query": "SELECT l1.s, l2.s, l1.s \u003c-\u003e l2.s FROM LSEG_TBL l1, LSEG_TBL l2",
    "expected": "SELECT l1.s, l2.s, l1.s \u003c-\u003e l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2"
  },
  {
    "comment": "geometry - Statement 57",
    "query": "SELECT l.s, b.f1, l.s \u003c-\u003e b.f1 AS dist_sb, b.f1 \u003c-\u003e l.s AS dist_bs FROM LSEG_TBL l, BOX_TBL b",
    "expected": "SELECT l.s, b.f1, l.s \u003c-\u003e b.f1 AS dist_sb, b.f1 \u003c-\u003e l.s AS dist_bs FROM lseg_tbl AS l, box_tbl AS b"
  },
  {
    "comment": "geometry - Statement 58",
    "query": "SELECT l.s, l1.s FROM LSEG_TBL l, LINE_TBL l1 WHERE l.s ?# l1.s",
    "expected": "SELECT l.s, l1.s FROM lseg_tbl AS l, line_tbl AS l1 WHERE l.s ?# l1.s"
  },
  {
    "comment": "geometry - Statement 59",
    "query": "SELECT l.s, b.f1 FROM LSEG_TBL l, BOX_TBL b WHERE l.s ?# b.f1",
    "expected": "SELECT l.s, b.f1 FROM lseg_tbl AS l, box_tbl AS b WHERE l.s ?# b.f1"
  },
  {
    "comment": "geometry - Statement 60",
    "query": "SELECT l1.s, l2.s, l1.s # l2.s FROM LSEG_TBL l1, LSEG_TBL l2",
    "expected": "SELECT l1.s, l2.s, l1.s # l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2"
  },
  {
    "comment": "geometry - Statement 61",
    "query": "SELECT l1.s, l2.s, l1.s ## l2.s FROM LSEG_TBL l1, LSEG_TBL l2",
    "expected": "SELECT l1.s, l2.s, l1.s ## l2.s FROM lseg_tbl AS l1, lseg_tbl AS l2"
  },
  {
    "comment": "geometry - Statement 62",
    "query": "SELECT l.s, b.f1, l.s ## b.f1 FROM LSEG_TBL l, BOX_TBL b",
    "expected": "SELECT l.s, b.f1, l.s ## b.f1 FROM lseg_tbl AS l, box_tbl AS b"
  },
  {
    "comment": "geometry - Statement 63",
    "query": "SELECT l.s, l1.s FROM LSEG_TBL l, LINE_TBL l1 WHERE l.s \u003c@ l1.s",
    "expected": "SELECT l.s, l1.s FROM lseg_tbl AS l, line_tbl AS l1 WHERE l.s \u003c@ l1.s"
  },
  {
    "comment": "geometry - Statement 64",
    "query": "SELECT l.s, b.f1 FROM LSEG_TBL l, BOX_TBL b WHERE l.s \u003c@ b.f1",
    "expected": "SELECT l.s, b.f1 FROM lseg_tbl AS l, box_tbl AS b WHERE l.s \u003c@ b.f1"
  },
  {
    "comment": "geometry - Statement 65",
    "query": "SELECT box(f1) AS box FROM CIRCLE_TBL",
    "expected": "SELECT box(f1) AS box FROM circle_tbl"
  },
  {
    "comment": "geometry - Statement 66",
    "query": "SELECT b.f1 + p.f1 AS translation FROM BOX_TBL b, POINT_TBL p",
    "expected": "SELECT b.f1 + p.f1 AS translation FROM box_tbl AS b, point_tbl AS p"
  },
  {
    "comment": "geometry - Statement 67",
    "query": "SELECT b.f1 - p.f1 AS translation FROM BOX_TBL b, POINT_TBL p",
    "expected": "SELECT b.f1 - p.f1 AS translation FROM box_tbl AS b, point_tbl AS p"
  },
  {
    "comment": "geometry - Statement 68",
    "query": "SELECT b.f1, p.f1, b.f1 * p.f1 FROM BOX_TBL b, POINT_TBL p WHERE p.f1[0] BETWEEN 1 AND 1000",
    "expected": "SELECT b.f1, p.f1, b.f1 * p.f1 FROM box_tbl AS b, point_tbl AS p WHERE p.f1[0] BETWEEN 1 AND 1000"
  },
  {
    "comment": "geometry - Statement 69",
    "query": "SELECT b.f1, p.f1, b.f1 * p.f1 FROM BOX_TBL b, POINT_TBL p WHERE p.f1[0] \u003e 1000",
    "expected": "SELECT b.f1, p.f1, b.f1 * p.f1 FROM box_tbl AS b, point_tbl AS p WHERE p.f1[0] \u003e 1000"
  },
  {
    "comment": "geometry - Statement 70",
    "query": "SELECT b.f1, p.f1, b.f1 / p.f1 FROM BOX_TBL b, POINT_TBL p WHERE p.f1[0] BETWEEN 1 AND 1000",
    "expected": "SELECT b.f1, p.f1, b.f1 / p.f1 FROM box_tbl AS b, point_tbl AS p WHERE p.f1[0] BETWEEN 1 AND 1000"
  },
  {
    "comment": "geometry - Statement 71",
    "query": "SELECT f1::box FROM POINT_TBL",
    "expected": "SELECT CAST(f1 AS box) FROM point_tbl"
  },
  {
    "comment": "geometry - Statement 72",
    "query": "SELECT bound_box(a.f1, b.f1) FROM BOX_TBL a, BOX_TBL b",
    "expected": "SELECT bound_box(a.f1, b.f1) FROM box_tbl AS a, box_tbl AS b"
  },
  {
    "comment": "geometry - Statement 73",
    "query": "SELECT b1.f1, b2.f1, b1.f1 \u003c^ b2.f1 FROM BOX_TBL b1, BOX_TBL b2",
    "expected": "SELECT b1.f1, b2.f1, b1.f1 \u003c^ b2.f1 FROM box_tbl AS b1, box_tbl AS b2"
  },
  {
    "comment": "geometry - Statement 74",
    "query": "SELECT b1.f1, b2.f1, b1.f1 \u003e^ b2.f1 FROM BOX_TBL b1, BOX_TBL b2",
    "expected": "SELECT b1.f1, b2.f1, b1.f1 \u003e^ b2.f1 FROM box_tbl AS b1, box_tbl AS b2"
  },
  {
    "comment": "geometry - Statement 75",
    "query": "SELECT b1.f1, b2.f1, b1.f1 # b2.f1 FROM BOX_TBL b1, BOX_TBL b2",
    "expected": "SELECT b1.f1, b2.f1, b1.f1 # b2.f1 FROM box_tbl AS b1, box_tbl AS b2"
  },
  {
    "comment": "geometry - Statement 76",
    "query": "SELECT f1, diagonal(f1) FROM BOX_TBL",
    "expected": "SELECT f1, diagonal(f1) FROM box_tbl"
  },
  {
    "comment": "geometry - Statement 77",
    "query": "SELECT b1.f1, b2.f1, b1.f1 \u003c-\u003e b2.f1 FROM BOX_TBL b1, BOX_TBL b2",
    "expected": "SELECT b1.f1, b2.f1, b1.f1 \u003c-\u003e b2.f1 FROM box_tbl AS b1, box_tbl AS b2"
  },
  {
    "comment": "geometry - Statement 78",
    "query": "SELECT f1, npoints(f1) FROM PATH_TBL",
    "expected": "SELECT f1, npoints(f1) FROM path_tbl"
  },
  {
    "comment": "geometry - Statement 79",
    "query": "SELECT f1, area(f1) FROM PATH_TBL",
    "expected": "SELECT f1, area(f1) FROM path_tbl"
  },
  {
    "comment": "geometry - Statement 80",
    "query": "SELECT f1, @-@ f1 FROM PATH_TBL",
    "expected": "SELECT f1, @-@f1 FROM path_tbl"
  },
  {
    "comment": "geometry - Statement 81",
    "query": "SELECT f1, f1::polygon FROM PATH_TBL WHERE isclosed(f1)",
    "expected": "SELECT f1, CAST(f1 AS polygon) FROM path_tbl WHERE isclosed(f1)"
  },
  {
    "comment": "geometry - Statement 82",
    "query": "SELECT f1, f1::polygon FROM PATH_TBL WHERE isopen(f1)",
    "expected": "SELECT f1, CAST(f1 AS polygon) FROM path_tbl WHERE isopen(f1)"
  },
  {
    "comment": "geometry - Statement 83",
    "query": "SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 \u003c p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM path_tbl AS p1, path_tbl AS p2 WHERE p1.f1 \u003c p2.f1"
  },
  {
    "comment": "geometry - Statement 84",
    "query": "SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 \u003c= p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM path_tbl AS p1, path_tbl AS p2 WHERE p1.f1 \u003c= p2.f1"
  },
  {
    "comment": "geometry - Statement 85",
    "query": "SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 = p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM path_tbl AS p1, path_tbl AS p2 WHERE p1.f1 = p2.f1"
  },
  {
    "comment": "geometry - Statement 86",
    "query": "SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 \u003e= p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM path_tbl AS p1, path_tbl AS p2 WHERE p1.f1 \u003e= p2.f1"
  },
  {
    "comment": "geometry - Statement 87",
    "query": "SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 \u003e p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM path_tbl AS p1, path_tbl AS p2 WHERE p1.f1 \u003e p2.f1"
  },
  {
    "comment": "geometry - Statement 88",
    "query": "SELECT p1.f1, p2.f1, p1.f1 + p2.f1 FROM PATH_TBL p1, PATH_TBL p2",
    "expected": "SELECT p1.f1, p2.f1, p1.f1 + p2.f1 FROM path_tbl AS p1, path_tbl AS p2"
  },
  {
    "comment": "geometry - Statement 89",
    "query": "SELECT p.f1, p1.f1, p.f1 + p1.f1 FROM PATH_TBL p, POINT_TBL p1",
    "expected": "SELECT p.f1, p1.f1, p.f1 + p1.f1 FROM path_tbl AS p, point_tbl AS p1"
  },
  {
    "comment": "geometry - Statement 90",
    "query": "SELECT p.f1, p1.f1, p.f1 - p1.f1 FROM PATH_TBL p, POINT_TBL p1",
    "expected": "SELECT p.f1, p1.f1, p.f1 - p1.f1 FROM path_tbl AS p, point_tbl AS p1"
  },
  {
    "comment": "geometry - Statement 91",
    "query": "SELECT p.f1, p1.f1, p.f1 * p1.f1 FROM PATH_TBL p, POINT_TBL p1",
    "expected": "SELECT p.f1, p1.f1, p.f1 * p1.f1 FROM path_tbl AS p, point_tbl AS p1"
  },
  {
    "comment": "geometry - Statement 92",
    "query": "SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM PATH_TBL p, POINT_TBL p1 WHERE p1.f1[0] BETWEEN 1 AND 1000",
    "expected": "SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM path_tbl AS p, point_tbl AS p1 WHERE p1.f1[0] BETWEEN 1 AND 1000"
  },
  {
    "comment": "geometry - Statement 93",
    "query": "SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM PATH_TBL p, POINT_TBL p1 WHERE p1.f1 ~= '(0,0)'::point",
    "expected": "SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM path_tbl AS p, point_tbl AS p1 WHERE p1.f1 ~= CAST('(0,0)' AS point)"
  },
  {
    "comment": "geometry - Statement 94",
    "query": "SELECT p1.f1, p2.f1, p1.f1 \u003c-\u003e p2.f1 FROM PATH_TBL p1, PATH_TBL p2",
    "expected": "SELECT p1.f1, p2.f1, p1.f1 \u003c-\u003e p2.f1 FROM path_tbl AS p1, path_tbl AS p2"
  },
  {
    "comment": "geometry - Statement 95",
    "query": "SELECT p.f1, poly.f1, poly.f1 @\u003e p.f1 AS contains FROM POLYGON_TBL poly, POINT_TBL p",
    "expected": "SELECT p.f1, poly.f1, poly.f1 @\u003e p.f1 AS contains FROM polygon_tbl AS poly, point_tbl AS p"
  },
  {
    "comment": "geometry - Statement 96",
    "query": "SELECT p.f1, poly.f1, p.f1 \u003c@ poly.f1 AS contained FROM POLYGON_TBL poly, POINT_TBL p",
    "expected": "SELECT p.f1, poly.f1, p.f1 \u003c@ poly.f1 AS contained FROM polygon_tbl AS poly, point_tbl AS p"
  },
  {
    "comment": "geometry - Statement 97",
    "query": "SELECT npoints(f1) AS npoints, f1 AS polygon FROM POLYGON_TBL",
    "expected": "SELECT npoints(f1) AS npoints, f1 AS polygon FROM polygon_tbl"
  },
  {
    "comment": "geometry - Statement 98",
    "query": "SELECT polygon(f1) FROM BOX_TBL",
    "expected": "SELECT polygon(f1) FROM box_tbl"
  },
  {
    "comment": "geometry - Statement 99",
    "query": "SELECT polygon(f1) FROM PATH_TBL WHERE isclosed(f1)",
    "expected": "SELECT polygon(f1) FROM path_tbl WHERE isclosed(f1)"
  },
  {
    "comment": "geometry - Statement 100",
    "query": "SELECT f1 AS open_path, polygon( pclose(f1)) AS polygon FROM PATH_TBL WHERE isopen(f1)",
    "expected": "SELECT f1 AS open_path, polygon(pclose(f1)) AS polygon FROM path_tbl WHERE isopen(f1)"
  },
  {
    "comment": "geometry - Statement 101",
    "query": "SELECT f1, f1::box FROM POLYGON_TBL",
    "expected": "SELECT f1, CAST(f1 AS box) FROM polygon_tbl"
  },
  {
    "comment": "geometry - Statement 102",
    "query": "SELECT f1, f1::path FROM POLYGON_TBL",
    "expected": "SELECT f1, CAST(f1 AS path) FROM polygon_tbl"
  },
  {
    "comment": "geometry - Statement 103",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 ~= p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 ~= p2.f1"
  },
  {
    "comment": "geometry - Statement 104",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 \u003c@ p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 \u003c@ p2.f1"
  },
  {
    "comment": "geometry - Statement 105",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 @\u003e p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 @\u003e p2.f1"
  },
  {
    "comment": "geometry - Statement 106",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 \u0026\u0026 p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 \u0026\u0026 p2.f1"
  },
  {
    "comment": "geometry - Statement 107",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 \u003c\u003c p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 \u003c\u003c p2.f1"
  },
  {
    "comment": "geometry - Statement 108",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 \u0026\u003c p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 \u0026\u003c p2.f1"
  },
  {
    "comment": "geometry - Statement 109",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 \u003e\u003e p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 \u003e\u003e p2.f1"
  },
  {
    "comment": "geometry - Statement 110",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 \u0026\u003e p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 \u0026\u003e p2.f1"
  },
  {
    "comment": "geometry - Statement 111",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 \u003c\u003c| p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 \u003c\u003c| p2.f1"
  },
  {
    "comment": "geometry - Statement 112",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 \u0026\u003c| p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 \u0026\u003c| p2.f1"
  },
  {
    "comment": "geometry - Statement 113",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 |\u003e\u003e p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 |\u003e\u003e p2.f1"
  },
  {
    "comment": "geometry - Statement 114",
    "query": "SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 |\u0026\u003e p2.f1",
    "expected": "SELECT p1.f1, p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2 WHERE p1.f1 |\u0026\u003e p2.f1"
  },
  {
    "comment": "geometry - Statement 115",
    "query": "SELECT p1.f1, p2.f1, p1.f1 \u003c-\u003e p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2",
    "expected": "SELECT p1.f1, p2.f1, p1.f1 \u003c-\u003e p2.f1 FROM polygon_tbl AS p1, polygon_tbl AS p2"
  },
  {
    "comment": "geometry - Statement 116",
    "query": "SELECT circle(f1, 50.0) FROM POINT_TBL",
    "expected": "SELECT circle(f1, 50.0) FROM point_tbl"
  },
  {
    "comment": "geometry - Statement 117",
    "query": "SELECT circle(f1) FROM BOX_TBL",
    "expected": "SELECT circle(f1) FROM box_tbl"
  },
  {
    "comment": "geometry - Statement 118",
    "query": "SELECT circle(f1) FROM POLYGON_TBL WHERE (# f1) \u003e= 3",
    "expected": "SELECT circle(f1) FROM polygon_tbl WHERE (#f1) \u003e= 3"
  },
  {
    "comment": "geometry - Statement 119",
    "query": "SELECT c1.f1 AS circle, p1.f1 AS point, (p1.f1 \u003c-\u003e c1.f1) AS distance FROM CIRCLE_TBL c1, POINT_TBL p1 WHERE (p1.f1 \u003c-\u003e c1.f1) \u003e 0 ORDER BY distance, area(c1.f1), p1.f1[0]",
    "expected": "SELECT c1.f1 AS circle, p1.f1 AS point, (p1.f1 \u003c-\u003e c1.f1) AS distance FROM circle_tbl AS c1, point_tbl AS p1 WHERE (p1.f1 \u003c-\u003e c1.f1) \u003e 0 ORDER BY distance, area(c1.f1), p1.f1[0]"
  },
  {
    "comment": "geometry - Statement 120",
    "query": "SELECT f1, f1::polygon FROM CIRCLE_TBL WHERE f1 \u003e= '\u003c(0,0),1\u003e'",
    "expected": "SELECT f1, CAST(f1 AS polygon) FROM circle_tbl WHERE f1 \u003e= '\u003c(0,0),1\u003e'"
  },
  {
    "comment": "geometry - Statement 121",
    "query": "SELECT f1, polygon(8, f1) FROM CIRCLE_TBL WHERE f1 \u003e= '\u003c(0,0),1\u003e'",
    "expected": "SELECT f1, polygon(8, f1) FROM circle_tbl WHERE f1 \u003e= '\u003c(0,0),1\u003e'"
  },
  {
    "comment": "geometry - Statement 122",
    "query": "SELECT f1, polygon(1, f1) FROM CIRCLE_TBL WHERE f1 \u003e= '\u003c(0,0),1\u003e'",
    "expected": "SELECT f1, polygon(1, f1) FROM circle_tbl WHERE f1 \u003e= '\u003c(0,0),1\u003e'"
  },
  {
    "comment": "geometry - Statement 123",
    "query": "SELECT f1, polygon(10, f1) FROM CIRCLE_TBL WHERE f1 \u003c '\u003c(0,0),1\u003e'",
    "expected": "SELECT f1, polygon(10, f1) FROM circle_tbl WHERE f1 \u003c '\u003c(0,0),1\u003e'"
  },
  {
    "comment": "geometry - Statement 124",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 ~= c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 ~= c2.f1"
  },
  {
    "comment": "geometry - Statement 125",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u0026\u0026 c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u0026\u0026 c2.f1"
  },
  {
    "comment": "geometry - Statement 126",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u0026\u003c c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u0026\u003c c2.f1"
  },
  {
    "comment": "geometry - Statement 127",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u003c\u003c c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u003c\u003c c2.f1"
  },
  {
    "comment": "geometry - Statement 128",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u003e\u003e c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u003e\u003e c2.f1"
  },
  {
    "comment": "geometry - Statement 129",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u0026\u003e c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u0026\u003e c2.f1"
  },
  {
    "comment": "geometry - Statement 130",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u003c@ c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u003c@ c2.f1"
  },
  {
    "comment": "geometry - Statement 131",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 @\u003e c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 @\u003e c2.f1"
  },
  {
    "comment": "geometry - Statement 132",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u003c\u003c| c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u003c\u003c| c2.f1"
  },
  {
    "comment": "geometry - Statement 133",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 |\u003e\u003e c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 |\u003e\u003e c2.f1"
  },
  {
    "comment": "geometry - Statement 134",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u0026\u003c| c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u0026\u003c| c2.f1"
  },
  {
    "comment": "geometry - Statement 135",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 |\u0026\u003e c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 |\u0026\u003e c2.f1"
  },
  {
    "comment": "geometry - Statement 136",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 = c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 = c2.f1"
  },
  {
    "comment": "geometry - Statement 137",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 != c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u003c\u003e c2.f1"
  },
  {
    "comment": "geometry - Statement 138",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u003c c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u003c c2.f1"
  },
  {
    "comment": "geometry - Statement 139",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u003e c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u003e c2.f1"
  },
  {
    "comment": "geometry - Statement 140",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u003c= c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u003c= c2.f1"
  },
  {
    "comment": "geometry - Statement 141",
    "query": "SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 \u003e= c2.f1",
    "expected": "SELECT c1.f1, c2.f1 FROM circle_tbl AS c1, circle_tbl AS c2 WHERE c1.f1 \u003e= c2.f1"
  },
  {
    "comment": "geometry - Statement 142",
    "query": "SELECT c.f1, p.f1, c.f1 + p.f1 FROM CIRCLE_TBL c, POINT_TBL p",
    "expected": "SELECT c.f1, p.f1, c.f1 + p.f1 FROM circle_tbl AS c, point_tbl AS p"
  },
  {
    "comment": "geometry - Statement 143",
    "query": "SELECT c.f1, p.f1, c.f1 - p.f1 FROM CIRCLE_TBL c, POINT_TBL p",
    "expected": "SELECT c.f1, p.f1, c.f1 - p.f1 FROM circle_tbl AS c, point_tbl AS p"
  },
  {
    "comment": "geometry - Statement 144",
    "query": "SELECT c.f1, p.f1, c.f1 * p.f1 FROM CIRCLE_TBL c, POINT_TBL p",
    "expected": "SELECT c.f1, p.f1, c.f1 * p.f1 FROM circle_tbl AS c, point_tbl AS p"
  },
  {
    "comment": "geometry - Statement 145",
    "query": "SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1[0] BETWEEN 1 AND 1000",
    "expected": "SELECT c.f1, p.f1, c.f1 / p.f1 FROM circle_tbl AS c, point_tbl AS p WHERE p.f1[0] BETWEEN 1 AND 1000"
  },
  {
    "comment": "geometry - Statement 146",
    "query": "SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1[0] \u003e 1000",
    "expected": "SELECT c.f1, p.f1, c.f1 / p.f1 FROM circle_tbl AS c, point_tbl AS p WHERE p.f1[0] \u003e 1000"
  },
  {
    "comment": "geometry - Statement 147",
    "query": "SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1 ~= '(0,0)'::point",
    "expected": "SELECT c.f1, p.f1, c.f1 / p.f1 FROM circle_tbl AS c, point_tbl AS p WHERE p.f1 ~= CAST('(0,0)' AS point)"
  },
  {
    "comment": "geometry - Statement 148",
    "query": "SELECT c.f1, p.f1, c.f1 \u003c-\u003e p.f1 FROM CIRCLE_TBL c, POLYGON_TBL p",
    "expected": "SELECT c.f1, p.f1, c.f1 \u003c-\u003e p.f1 FROM circle_tbl AS c, polygon_tbl AS p"
  },
  {
    "comment": "geometry - Statement 149",
    "query": "CREATE INDEX gcircleind ON circle_tbl USING gist (f1)",
    "expected": "CREATE INDEX gcircleind ON circle_tbl USING gist ( f1 )"
  },
  {
    "comment": "geometry - Statement 150",
    "query": "SELECT * FROM circle_tbl WHERE f1 \u0026\u0026 circle(point(1,-2), 1) ORDER BY area(f1)",
    "expected": "SELECT * FROM circle_tbl WHERE f1 \u0026\u0026 circle(point(1, -2), 1) ORDER BY area(f1)"
  },
  {
    "comment": "geometry - Statement 151",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM circle_tbl WHERE f1 \u0026\u0026 circle(point(1,-2), 1) ORDER BY area(f1)",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM circle_tbl WHERE f1 \u0026\u0026 circle(point(1, -2), 1) ORDER BY area(f1)"
  },
  {
    "comment": "geometry - Statement 152",
    "query": "CREATE INDEX gpolygonind ON polygon_tbl USING gist (f1)",
    "expected": "CREATE INDEX gpolygonind ON polygon_tbl USING gist ( f1 )"
  },
  {
    "comment": "geometry - Statement 153",
    "query": "SELECT * FROM polygon_tbl WHERE f1 @\u003e '((1,1),(2,2),(2,1))'::polygon ORDER BY (poly_center(f1))[0]",
    "expected": "SELECT * FROM polygon_tbl WHERE f1 @\u003e CAST('((1,1),(2,2),(2,1))' AS polygon) ORDER BY (poly_center(f1))[0]"
  },
  {
    "comment": "geometry - Statement 154",
    "query": "EXPLAIN (COSTS OFF) SELECT * FROM polygon_tbl WHERE f1 @\u003e '((1,1),(2,2),(2,1))'::polygon ORDER BY (poly_center(f1))[0]",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM polygon_tbl WHERE f1 @\u003e CAST('((1,1),(2,2),(2,1))' AS polygon) ORDER BY (poly_center(f1))[0]"
  },
  {
    "comment": "geometry - Statement 155",
    "query": "SELECT pg_input_is_valid('(1', 'circle')"
  },
  {
    "comment": "geometry - Statement 156",
    "query": "SELECT * FROM pg_input_error_info('1,', 'circle')"
  },
  {
    "comment": "geometry - Statement 157",
    "query": "SELECT pg_input_is_valid('(1,2),-1', 'circle')"
  },
  {
    "comment": "geometry - Statement 158",
    "query": "SELECT * FROM pg_input_error_info('(1,2),-1', 'circle')"
  }
]
