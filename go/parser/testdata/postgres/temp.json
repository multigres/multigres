[
  {
    "comment": "temp - Statement 1",
    "query": "CREATE TABLE temptest(col int)"
  },
  {
    "comment": "temp - Statement 2",
    "query": "CREATE INDEX i_temptest ON temptest(col)"
  },
  {
    "comment": "temp - Statement 3",
    "query": "CREATE TEMP TABLE temptest(tcol int)"
  },
  {
    "comment": "temp - Statement 4",
    "query": "CREATE INDEX i_temptest ON temptest(tcol)"
  },
  {
    "comment": "temp - Statement 5",
    "query": "SELECT * FROM temptest"
  },
  {
    "comment": "temp - Statement 6",
    "query": "DROP INDEX i_temptest"
  },
  {
    "comment": "temp - Statement 7",
    "query": "DROP TABLE temptest"
  },
  {
    "comment": "temp - Statement 8",
    "query": "INSERT INTO temptest VALUES (1)"
  },
  {
    "comment": "temp - Statement 9",
    "query": "CREATE TEMP TABLE temptest(tcol float)"
  },
  {
    "comment": "temp - Statement 10",
    "query": "INSERT INTO temptest VALUES (2.1)"
  },
  {
    "comment": "temp - Statement 11",
    "query": "CREATE TEMP TABLE temptest(col int)"
  },
  {
    "comment": "temp - Statement 12",
    "query": "CREATE TEMP TABLE temptest(col int) ON COMMIT DELETE ROWS"
  },
  {
    "comment": "temp - Statement 13",
    "query": "CREATE INDEX ON temptest(bit_length(''))"
  },
  {
    "comment": "temp - Statement 14",
    "query": "BEGIN"
  },
  {
    "comment": "temp - Statement 15",
    "query": "INSERT INTO temptest VALUES (2)"
  },
  {
    "comment": "temp - Statement 16",
    "query": "COMMIT"
  },
  {
    "comment": "temp - Statement 17",
    "query": "CREATE TEMP TABLE temptest(col) ON COMMIT DELETE ROWS AS SELECT 1"
  },
  {
    "comment": "temp - Statement 18",
    "query": "CREATE TEMP TABLE temptest(col int) ON COMMIT DROP"
  },
  {
    "comment": "temp - Statement 19",
    "query": "CREATE TEMP TABLE temptest(col) ON COMMIT DROP AS SELECT 1"
  },
  {
    "comment": "temp - Statement 20",
    "query": "do $$ begin execute format($cmd$ CREATE TEMP TABLE temptest (col text CHECK (col < %L)) ON COMMIT DROP $cmd$, (SELECT string_agg(g.i::text || ':' || random()::text, '|') FROM generate_series(1, 100) g(i)))"
  },
  {
    "comment": "temp - Statement 21",
    "query": "end$$"
  },
  {
    "comment": "temp - Statement 22",
    "query": "CREATE TABLE temptest(col int) ON COMMIT DELETE ROWS"
  },
  {
    "comment": "temp - Statement 23",
    "query": "CREATE TABLE temptest(col) ON COMMIT DELETE ROWS AS SELECT 1"
  },
  {
    "comment": "temp - Statement 24",
    "query": "CREATE TEMP TABLE temptest1(col int PRIMARY KEY)"
  },
  {
    "comment": "temp - Statement 25",
    "query": "CREATE TEMP TABLE temptest2(col int REFERENCES temptest1) ON COMMIT DELETE ROWS"
  },
  {
    "comment": "temp - Statement 26",
    "query": "INSERT INTO temptest1 VALUES (1)"
  },
  {
    "comment": "temp - Statement 27",
    "query": "INSERT INTO temptest2 VALUES (1)"
  },
  {
    "comment": "temp - Statement 28",
    "query": "SELECT * FROM temptest1"
  },
  {
    "comment": "temp - Statement 29",
    "query": "SELECT * FROM temptest2"
  },
  {
    "comment": "temp - Statement 30",
    "query": "CREATE TEMP TABLE temptest3(col int PRIMARY KEY) ON COMMIT DELETE ROWS"
  },
  {
    "comment": "temp - Statement 31",
    "query": "CREATE TEMP TABLE temptest4(col int REFERENCES temptest3)"
  },
  {
    "comment": "temp - Statement 32",
    "query": "create table public.whereami (f1 text)"
  },
  {
    "comment": "temp - Statement 33",
    "query": "insert into public.whereami values ('public')"
  },
  {
    "comment": "temp - Statement 34",
    "query": "create temp table whereami (f1 text)"
  },
  {
    "comment": "temp - Statement 35",
    "query": "insert into whereami values ('temp')"
  },
  {
    "comment": "temp - Statement 36",
    "query": "create function public.whoami() returns text as $$select 'public'::text$$ language sql"
  },
  {
    "comment": "temp - Statement 37",
    "query": "create function pg_temp.whoami() returns text as $$select 'temp'::text$$ language sql"
  },
  {
    "comment": "temp - Statement 38",
    "query": "select * from whereami"
  },
  {
    "comment": "temp - Statement 39",
    "query": "select whoami()"
  },
  {
    "comment": "temp - Statement 40",
    "query": "set search_path = pg_temp, public"
  },
  {
    "comment": "temp - Statement 41",
    "query": "set search_path = public, pg_temp"
  },
  {
    "comment": "temp - Statement 42",
    "query": "select pg_temp.whoami()"
  },
  {
    "comment": "temp - Statement 43",
    "query": "drop table public.whereami"
  },
  {
    "comment": "temp - Statement 44",
    "query": "create domain pg_temp.nonempty as text check (value <> '')"
  },
  {
    "comment": "temp - Statement 45",
    "query": "select nonempty('')"
  },
  {
    "comment": "temp - Statement 46",
    "query": "select pg_temp.nonempty('')"
  },
  {
    "comment": "temp - Statement 47",
    "query": "select ''::nonempty"
  },
  {
    "comment": "temp - Statement 48",
    "query": "reset search_path"
  },
  {
    "comment": "temp - Statement 49",
    "query": "create temp table temp_parted_oncommit (a int) partition by list (a) on commit delete rows"
  },
  {
    "comment": "temp - Statement 50",
    "query": "create temp table temp_parted_oncommit_1 partition of temp_parted_oncommit for values in (1) on commit delete rows"
  },
  {
    "comment": "temp - Statement 51",
    "query": "insert into temp_parted_oncommit values (1)"
  },
  {
    "comment": "temp - Statement 52",
    "query": "select * from temp_parted_oncommit"
  },
  {
    "comment": "temp - Statement 53",
    "query": "drop table temp_parted_oncommit"
  },
  {
    "comment": "temp - Statement 54",
    "query": "create temp table temp_parted_oncommit_test (a int) partition by list (a) on commit drop"
  },
  {
    "comment": "temp - Statement 55",
    "query": "create temp table temp_parted_oncommit_test1 partition of temp_parted_oncommit_test for values in (1) on commit delete rows"
  },
  {
    "comment": "temp - Statement 56",
    "query": "create temp table temp_parted_oncommit_test2 partition of temp_parted_oncommit_test for values in (2) on commit drop"
  },
  {
    "comment": "temp - Statement 57",
    "query": "insert into temp_parted_oncommit_test values (1), (2)"
  },
  {
    "comment": "temp - Statement 58",
    "query": "select relname from pg_class where relname ~ '^temp_parted_oncommit_test'"
  },
  {
    "comment": "temp - Statement 59",
    "query": "create temp table temp_parted_oncommit_test (a int) partition by list (a) on commit delete rows"
  },
  {
    "comment": "temp - Statement 60",
    "query": "create temp table temp_parted_oncommit_test1 partition of temp_parted_oncommit_test for values in (1) on commit preserve rows"
  },
  {
    "comment": "temp - Statement 61",
    "query": "select * from temp_parted_oncommit_test"
  },
  {
    "comment": "temp - Statement 62",
    "query": "select relname from pg_class where relname ~ '^temp_parted_oncommit_test' order by relname"
  },
  {
    "comment": "temp - Statement 63",
    "query": "drop table temp_parted_oncommit_test"
  },
  {
    "comment": "temp - Statement 64",
    "query": "create temp table temp_inh_oncommit_test (a int) on commit drop"
  },
  {
    "comment": "temp - Statement 65",
    "query": "create temp table temp_inh_oncommit_test1 () inherits(temp_inh_oncommit_test) on commit delete rows"
  },
  {
    "comment": "temp - Statement 66",
    "query": "insert into temp_inh_oncommit_test1 values (1)"
  },
  {
    "comment": "temp - Statement 67",
    "query": "select relname from pg_class where relname ~ '^temp_inh_oncommit_test'"
  },
  {
    "comment": "temp - Statement 68",
    "query": "create temp table temp_inh_oncommit_test (a int) on commit delete rows"
  },
  {
    "comment": "temp - Statement 69",
    "query": "create temp table temp_inh_oncommit_test1 () inherits(temp_inh_oncommit_test) on commit drop"
  },
  {
    "comment": "temp - Statement 70",
    "query": "insert into temp_inh_oncommit_test values (1)"
  },
  {
    "comment": "temp - Statement 71",
    "query": "select * from temp_inh_oncommit_test"
  },
  {
    "comment": "temp - Statement 72",
    "query": "drop table temp_inh_oncommit_test"
  },
  {
    "comment": "temp - Statement 73",
    "query": "create function pg_temp.twophase_func() returns void as $$ select '2pc_func'::text $$ language sql"
  },
  {
    "comment": "temp - Statement 74",
    "query": "prepare transaction 'twophase_func'"
  },
  {
    "comment": "temp - Statement 75",
    "query": "drop function pg_temp.twophase_func()"
  },
  {
    "comment": "temp - Statement 76",
    "query": "create operator pg_temp.@@ (leftarg = int4, rightarg = int4, procedure = int4mi)"
  },
  {
    "comment": "temp - Statement 77",
    "query": "prepare transaction 'twophase_operator'"
  },
  {
    "comment": "temp - Statement 78",
    "query": "create type pg_temp.twophase_type as (a int)"
  },
  {
    "comment": "temp - Statement 79",
    "query": "prepare transaction 'twophase_type'"
  },
  {
    "comment": "temp - Statement 80",
    "query": "create view pg_temp.twophase_view as select 1"
  },
  {
    "comment": "temp - Statement 81",
    "query": "prepare transaction 'twophase_view'"
  },
  {
    "comment": "temp - Statement 82",
    "query": "create sequence pg_temp.twophase_seq"
  },
  {
    "comment": "temp - Statement 83",
    "query": "prepare transaction 'twophase_sequence'"
  },
  {
    "comment": "temp - Statement 84",
    "query": "create temp table twophase_tab (a int)"
  },
  {
    "comment": "temp - Statement 85",
    "query": "select a from twophase_tab"
  },
  {
    "comment": "temp - Statement 86",
    "query": "prepare transaction 'twophase_tab'"
  },
  {
    "comment": "temp - Statement 87",
    "query": "insert into twophase_tab values (1)"
  },
  {
    "comment": "temp - Statement 88",
    "query": "lock twophase_tab in access exclusive mode"
  },
  {
    "comment": "temp - Statement 89",
    "query": "drop table twophase_tab"
  },
  {
    "comment": "temp - Statement 90",
    "query": "SELECT current_schema() ~ 'pg_temp' AS is_temp_schema"
  },
  {
    "comment": "temp - Statement 91",
    "query": "PREPARE TRANSACTION 'twophase_search'"
  }
]