[
  {
    "comment": "tsearch - Statement 1",
    "query": "SELECT oid, dictname FROM pg_ts_dict WHERE dictnamespace = 0 OR dictowner = 0 OR dicttemplate = 0"
  },
  {
    "comment": "tsearch - Statement 2",
    "query": "SELECT oid, tmplname FROM pg_ts_template WHERE tmplnamespace = 0 OR tmpllexize = 0"
  },
  {
    "comment": "tsearch - Statement 3",
    "query": "SELECT oid, cfgname FROM pg_ts_config WHERE cfgnamespace = 0 OR cfgowner = 0 OR cfgparser = 0"
  },
  {
    "comment": "tsearch - Statement 4",
    "query": "SELECT mapcfg, maptokentype, mapseqno FROM pg_ts_config_map WHERE mapcfg = 0 OR mapdict = 0"
  },
  {
    "comment": "tsearch - Statement 5",
    "query": "SELECT * FROM ( SELECT oid AS cfgid, (ts_token_type(cfgparser)).tokid AS tokid FROM pg_ts_config ) AS tt RIGHT JOIN pg_ts_config_map AS m ON (tt.cfgid=m.mapcfg AND tt.tokid=m.maptokentype) WHERE tt.cfgid IS NULL OR tt.tokid IS NULL",
    "expected": "SELECT * FROM (SELECT oid AS cfgid, (ts_token_type(cfgparser)).tokid AS tokid FROM pg_ts_config) AS tt RIGHT OUTER JOIN pg_ts_config_map AS m ON (tt.cfgid = m.mapcfg AND tt.tokid = m.maptokentype) WHERE tt.cfgid IS NULL OR tt.tokid IS NULL"
  },
  {
    "comment": "tsearch - Statement 6",
    "query": "CREATE TABLE test_tsvector( t text, a tsvector )",
    "expected": "CREATE TABLE test_tsvector (t TEXT, a tsvector)"
  },
  {
    "comment": "tsearch - Statement 7",
    "query": "ANALYZE test_tsvector"
  },
  {
    "comment": "tsearch - Statement 8",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'wr|qh'"
  },
  {
    "comment": "tsearch - Statement 9",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'wr\u0026qh'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'wr\u0026qh'"
  },
  {
    "comment": "tsearch - Statement 10",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'eq\u0026yt'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'eq\u0026yt'"
  },
  {
    "comment": "tsearch - Statement 11",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'eq|yt'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'eq|yt'"
  },
  {
    "comment": "tsearch - Statement 12",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '(eq\u0026yt)|(wr\u0026qh)'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '(eq\u0026yt)|(wr\u0026qh)'"
  },
  {
    "comment": "tsearch - Statement 13",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '(eq|yt)\u0026(wr|qh)'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '(eq|yt)\u0026(wr|qh)'"
  },
  {
    "comment": "tsearch - Statement 14",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'w:*|q:*'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'w:*|q:*'"
  },
  {
    "comment": "tsearch - Statement 15",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ any ('{wr,qh}')",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ ANY ('{wr,qh}')"
  },
  {
    "comment": "tsearch - Statement 16",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'no_such_lexeme'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'no_such_lexeme'"
  },
  {
    "comment": "tsearch - Statement 17",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!no_such_lexeme'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!no_such_lexeme'"
  },
  {
    "comment": "tsearch - Statement 18",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'pl \u003c-\u003e yh'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'pl \u003c-\u003e yh'"
  },
  {
    "comment": "tsearch - Statement 19",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'yh \u003c-\u003e pl'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'yh \u003c-\u003e pl'"
  },
  {
    "comment": "tsearch - Statement 20",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'qe \u003c2\u003e qt'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'qe \u003c2\u003e qt'"
  },
  {
    "comment": "tsearch - Statement 21",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!pl \u003c-\u003e yh'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!pl \u003c-\u003e yh'"
  },
  {
    "comment": "tsearch - Statement 22",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!pl \u003c-\u003e !yh'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!pl \u003c-\u003e !yh'"
  },
  {
    "comment": "tsearch - Statement 23",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!yh \u003c-\u003e pl'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!yh \u003c-\u003e pl'"
  },
  {
    "comment": "tsearch - Statement 24",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!qe \u003c2\u003e qt'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!qe \u003c2\u003e qt'"
  },
  {
    "comment": "tsearch - Statement 25",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!(pl \u003c-\u003e yh)'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!(pl \u003c-\u003e yh)'"
  },
  {
    "comment": "tsearch - Statement 26",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!(yh \u003c-\u003e pl)'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!(yh \u003c-\u003e pl)'"
  },
  {
    "comment": "tsearch - Statement 27",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!(qe \u003c2\u003e qt)'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!(qe \u003c2\u003e qt)'"
  },
  {
    "comment": "tsearch - Statement 28",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:A'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'wd:A'"
  },
  {
    "comment": "tsearch - Statement 29",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'wd:D'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'wd:D'"
  },
  {
    "comment": "tsearch - Statement 30",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:A'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!wd:A'"
  },
  {
    "comment": "tsearch - Statement 31",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!wd:D'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!wd:D'"
  },
  {
    "comment": "tsearch - Statement 32",
    "query": "create index wowidx on test_tsvector using gist (a)",
    "expected": "CREATE INDEX wowidx ON test_tsvector USING gist ( a )"
  },
  {
    "comment": "tsearch - Statement 33",
    "query": "SET enable_seqscan=OFF",
    "expected": "SET enable_seqscan = off"
  },
  {
    "comment": "tsearch - Statement 34",
    "query": "SET enable_indexscan=ON",
    "expected": "SET enable_indexscan = on"
  },
  {
    "comment": "tsearch - Statement 35",
    "query": "SET enable_bitmapscan=OFF",
    "expected": "SET enable_bitmapscan = off"
  },
  {
    "comment": "tsearch - Statement 36",
    "query": "explain (costs off) SELECT count(*) FROM test_tsvector WHERE a @@ 'wr|qh'",
    "expected": "EXPLAIN (COSTS false) SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'wr|qh'"
  },
  {
    "comment": "tsearch - Statement 37",
    "query": "SET enable_indexscan=OFF",
    "expected": "SET enable_indexscan = off"
  },
  {
    "comment": "tsearch - Statement 38",
    "query": "SET enable_bitmapscan=ON",
    "expected": "SET enable_bitmapscan = on"
  },
  {
    "comment": "tsearch - Statement 39",
    "query": "CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(foo=1))",
    "expected": "CREATE INDEX wowidx1 ON test_tsvector USING gist ( a tsvector_ops(foo = 1) )"
  },
  {
    "comment": "tsearch - Statement 40",
    "query": "CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=0))",
    "expected": "CREATE INDEX wowidx1 ON test_tsvector USING gist ( a tsvector_ops(siglen = 0) )"
  },
  {
    "comment": "tsearch - Statement 41",
    "query": "CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=2048))",
    "expected": "CREATE INDEX wowidx1 ON test_tsvector USING gist ( a tsvector_ops(siglen = 2048) )"
  },
  {
    "comment": "tsearch - Statement 42",
    "query": "CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=100,foo='bar'))",
    "expected": "CREATE INDEX wowidx1 ON test_tsvector USING gist ( a tsvector_ops(siglen = 100, foo = 'bar') )"
  },
  {
    "comment": "tsearch - Statement 43",
    "query": "CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=100, siglen = 200))",
    "expected": "CREATE INDEX wowidx1 ON test_tsvector USING gist ( a tsvector_ops(siglen = 100, siglen = 200) )"
  },
  {
    "comment": "tsearch - Statement 44",
    "query": "CREATE INDEX wowidx2 ON test_tsvector USING gist (a tsvector_ops(siglen=1))",
    "expected": "CREATE INDEX wowidx2 ON test_tsvector USING gist ( a tsvector_ops(siglen = 1) )"
  },
  {
    "comment": "tsearch - Statement 45",
    "query": "DROP INDEX wowidx2"
  },
  {
    "comment": "tsearch - Statement 46",
    "query": "CREATE INDEX wowidx ON test_tsvector USING gist (a tsvector_ops(siglen=484))",
    "expected": "CREATE INDEX wowidx ON test_tsvector USING gist ( a tsvector_ops(siglen = 484) )"
  },
  {
    "comment": "tsearch - Statement 47",
    "query": "RESET enable_seqscan"
  },
  {
    "comment": "tsearch - Statement 48",
    "query": "RESET enable_indexscan"
  },
  {
    "comment": "tsearch - Statement 49",
    "query": "RESET enable_bitmapscan"
  },
  {
    "comment": "tsearch - Statement 50",
    "query": "DROP INDEX wowidx"
  },
  {
    "comment": "tsearch - Statement 51",
    "query": "CREATE INDEX wowidx ON test_tsvector USING gin (a)",
    "expected": "CREATE INDEX wowidx ON test_tsvector USING gin ( a )"
  },
  {
    "comment": "tsearch - Statement 52",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tsvector WHERE a @@ '!qh'",
    "expected": "EXPLAIN (COSTS false) SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!qh'"
  },
  {
    "comment": "tsearch - Statement 53",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ '!qh'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ '!qh'"
  },
  {
    "comment": "tsearch - Statement 54",
    "query": "EXPLAIN (COSTS OFF) SELECT count(*) FROM test_tsvector WHERE a @@ 'wr' AND a @@ '!qh'",
    "expected": "EXPLAIN (COSTS false) SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'wr' AND a @@ '!qh'"
  },
  {
    "comment": "tsearch - Statement 55",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ 'wr' AND a @@ '!qh'",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ 'wr' AND a @@ '!qh'"
  },
  {
    "comment": "tsearch - Statement 56",
    "query": "INSERT INTO test_tsvector VALUES ('???', 'DFG:1A,2B,6C,10 FGH')"
  },
  {
    "comment": "tsearch - Statement 57",
    "query": "SELECT * FROM ts_stat('SELECT a FROM test_tsvector') ORDER BY ndoc DESC, nentry DESC, word LIMIT 10"
  },
  {
    "comment": "tsearch - Statement 58",
    "query": "SELECT * FROM ts_stat('SELECT a FROM test_tsvector', 'AB') ORDER BY ndoc DESC, nentry DESC, word"
  },
  {
    "comment": "tsearch - Statement 59",
    "query": "SELECT ts_lexize('english_stem', 'skies')"
  },
  {
    "comment": "tsearch - Statement 60",
    "query": "SELECT ts_lexize('english_stem', 'identity')"
  },
  {
    "comment": "tsearch - Statement 61",
    "query": "SELECT * FROM ts_token_type('default')"
  },
  {
    "comment": "tsearch - Statement 62",
    "query": "SELECT * FROM ts_parse('default', '345 qwe@efd.r '' http://www.com/ http://aew.werc.ewr/?ad=qwe\u0026dw 1aew.werc.ewr/?ad=qwe\u0026dw 2aew.werc.ewr http://3aew.werc.ewr/?ad=qwe\u0026dw http://4aew.werc.ewr http://5aew.werc.ewr:8100/?  ad=qwe\u0026dw 6aew.werc.ewr:8100/?ad=qwe\u0026dw 7aew.werc.ewr:8100/?ad=qwe\u0026dw=%20%32 +4.0e-10 qwe qwe qwqwe 234.435 455 5.005 teodor@stack.net teodor@123-stack.net 123_teodor@stack.net 123-teodor@stack.net qwe-wer asdf \u003cfr\u003eqwer jf sdjk\u003cwe hjwer \u003cwerrwe\u003e ewr1\u003e ewri2 \u003ca href=\"qwe\u003cqwe\u003e\"\u003e /usr/local/fff /awdf/dwqe/4325 rewt/ewr wefjn /wqe-324/ewr gist.h gist.h.c gist.c. readline 4.2 4.2. 4.2, readline-4.2 readline-4.2. 234 \u003ci \u003cb\u003e wow  \u003c jqw \u003c\u003e qwerty')"
  },
  {
    "comment": "tsearch - Statement 63",
    "query": "SELECT to_tsvector('english', '345 qwe@efd.r '' http://www.com/ http://aew.werc.ewr/?ad=qwe\u0026dw 1aew.werc.ewr/?ad=qwe\u0026dw 2aew.werc.ewr http://3aew.werc.ewr/?ad=qwe\u0026dw http://4aew.werc.ewr http://5aew.werc.ewr:8100/?  ad=qwe\u0026dw 6aew.werc.ewr:8100/?ad=qwe\u0026dw 7aew.werc.ewr:8100/?ad=qwe\u0026dw=%20%32 +4.0e-10 qwe qwe qwqwe 234.435 455 5.005 teodor@stack.net teodor@123-stack.net 123_teodor@stack.net 123-teodor@stack.net qwe-wer asdf \u003cfr\u003eqwer jf sdjk\u003cwe hjwer \u003cwerrwe\u003e ewr1\u003e ewri2 \u003ca href=\"qwe\u003cqwe\u003e\"\u003e /usr/local/fff /awdf/dwqe/4325 rewt/ewr wefjn /wqe-324/ewr gist.h gist.h.c gist.c. readline 4.2 4.2. 4.2, readline-4.2 readline-4.2. 234 \u003ci \u003cb\u003e wow  \u003c jqw \u003c\u003e qwerty')"
  },
  {
    "comment": "tsearch - Statement 64",
    "query": "SELECT length(to_tsvector('english', '345 qwe@efd.r '' http://www.com/ http://aew.werc.ewr/?ad=qwe\u0026dw 1aew.werc.ewr/?ad=qwe\u0026dw 2aew.werc.ewr http://3aew.werc.ewr/?ad=qwe\u0026dw http://4aew.werc.ewr http://5aew.werc.ewr:8100/?  ad=qwe\u0026dw 6aew.werc.ewr:8100/?ad=qwe\u0026dw 7aew.werc.ewr:8100/?ad=qwe\u0026dw=%20%32 +4.0e-10 qwe qwe qwqwe 234.435 455 5.005 teodor@stack.net teodor@123-stack.net 123_teodor@stack.net 123-teodor@stack.net qwe-wer asdf \u003cfr\u003eqwer jf sdjk\u003cwe hjwer \u003cwerrwe\u003e ewr1\u003e ewri2 \u003ca href=\"qwe\u003cqwe\u003e\"\u003e /usr/local/fff /awdf/dwqe/4325 rewt/ewr wefjn /wqe-324/ewr gist.h gist.h.c gist.c. readline 4.2 4.2. 4.2, readline-4.2 readline-4.2. 234 \u003ci \u003cb\u003e wow  \u003c jqw \u003c\u003e qwerty'))"
  },
  {
    "comment": "tsearch - Statement 65",
    "query": "SELECT * from ts_debug('english', '\u003cmyns:foo-bar_baz.blurfl\u003eabc\u0026nm1;def\u0026#xa9;ghi\u0026#245;jkl\u003c/myns:foo-bar_baz.blurfl\u003e')",
    "expected": "SELECT * FROM ts_debug('english', '\u003cmyns:foo-bar_baz.blurfl\u003eabc\u0026nm1;def\u0026#xa9;ghi\u0026#245;jkl\u003c/myns:foo-bar_baz.blurfl\u003e')"
  },
  {
    "comment": "tsearch - Statement 66",
    "query": "SELECT * from ts_debug('english', 'http://www.harewoodsolutions.co.uk/press.aspx\u003c/span\u003e')",
    "expected": "SELECT * FROM ts_debug('english', 'http://www.harewoodsolutions.co.uk/press.aspx\u003c/span\u003e')"
  },
  {
    "comment": "tsearch - Statement 67",
    "query": "SELECT * from ts_debug('english', 'http://aew.wer0c.ewr/id?ad=qwe\u0026dw\u003cspan\u003e')",
    "expected": "SELECT * FROM ts_debug('english', 'http://aew.wer0c.ewr/id?ad=qwe\u0026dw\u003cspan\u003e')"
  },
  {
    "comment": "tsearch - Statement 68",
    "query": "SELECT * from ts_debug('english', 'http://5aew.werc.ewr:8100/?')",
    "expected": "SELECT * FROM ts_debug('english', 'http://5aew.werc.ewr:8100/?')"
  },
  {
    "comment": "tsearch - Statement 69",
    "query": "SELECT * from ts_debug('english', '5aew.werc.ewr:8100/?xx')",
    "expected": "SELECT * FROM ts_debug('english', '5aew.werc.ewr:8100/?xx')"
  },
  {
    "comment": "tsearch - Statement 70",
    "query": "SELECT token, alias, dictionaries, dictionaries is null as dnull, array_dims(dictionaries) as ddims, lexemes, lexemes is null as lnull, array_dims(lexemes) as ldims from ts_debug('english', 'a title')",
    "expected": "SELECT token, alias, dictionaries, dictionaries IS NULL AS dnull, array_dims(dictionaries) AS ddims, lexemes, lexemes IS NULL AS lnull, array_dims(lexemes) AS ldims FROM ts_debug('english', 'a title')"
  },
  {
    "comment": "tsearch - Statement 71",
    "query": "SELECT to_tsquery('english', 'qwe \u0026 sKies ')"
  },
  {
    "comment": "tsearch - Statement 72",
    "query": "SELECT to_tsquery('simple', 'qwe \u0026 sKies ')"
  },
  {
    "comment": "tsearch - Statement 73",
    "query": "SELECT to_tsquery('english', '''the wether'':dc \u0026 ''           sKies '':BC ')"
  },
  {
    "comment": "tsearch - Statement 74",
    "query": "SELECT to_tsquery('english', 'asd\u0026(and|fghj)')"
  },
  {
    "comment": "tsearch - Statement 75",
    "query": "SELECT to_tsquery('english', '(asd\u0026and)|fghj')"
  },
  {
    "comment": "tsearch - Statement 76",
    "query": "SELECT to_tsquery('english', '(asd\u0026!and)|fghj')"
  },
  {
    "comment": "tsearch - Statement 77",
    "query": "SELECT to_tsquery('english', '(the|and\u0026(i\u00261))\u0026fghj')"
  },
  {
    "comment": "tsearch - Statement 78",
    "query": "SELECT plainto_tsquery('english', 'the and z 1))\u0026 fghj')"
  },
  {
    "comment": "tsearch - Statement 79",
    "query": "SELECT plainto_tsquery('english', 'foo bar') \u0026\u0026 plainto_tsquery('english', 'asd')"
  },
  {
    "comment": "tsearch - Statement 80",
    "query": "SELECT plainto_tsquery('english', 'foo bar') || plainto_tsquery('english', 'asd fg')"
  },
  {
    "comment": "tsearch - Statement 81",
    "query": "SELECT plainto_tsquery('english', 'foo bar') || !!plainto_tsquery('english', 'asd fg')"
  },
  {
    "comment": "tsearch - Statement 82",
    "query": "SELECT plainto_tsquery('english', 'foo bar') \u0026\u0026 'asd | fg'"
  },
  {
    "comment": "tsearch - Statement 83",
    "query": "SELECT to_tsquery('english', '!(a \u0026 !b) \u0026 c')"
  },
  {
    "comment": "tsearch - Statement 84",
    "query": "SELECT to_tsquery('english', '!(a \u0026 !b)')"
  },
  {
    "comment": "tsearch - Statement 85",
    "query": "SELECT to_tsquery('english', '(1 \u003c-\u003e 2) \u003c-\u003e a')"
  },
  {
    "comment": "tsearch - Statement 86",
    "query": "SELECT to_tsquery('english', '(1 \u003c-\u003e a) \u003c-\u003e 2')"
  },
  {
    "comment": "tsearch - Statement 87",
    "query": "SELECT to_tsquery('english', '(a \u003c-\u003e 1) \u003c-\u003e 2')"
  },
  {
    "comment": "tsearch - Statement 88",
    "query": "SELECT to_tsquery('english', 'a \u003c-\u003e (1 \u003c-\u003e 2)')"
  },
  {
    "comment": "tsearch - Statement 89",
    "query": "SELECT to_tsquery('english', '1 \u003c-\u003e (a \u003c-\u003e 2)')"
  },
  {
    "comment": "tsearch - Statement 90",
    "query": "SELECT to_tsquery('english', '1 \u003c-\u003e (2 \u003c-\u003e a)')"
  },
  {
    "comment": "tsearch - Statement 91",
    "query": "SELECT to_tsquery('english', '(1 \u003c-\u003e 2) \u003c3\u003e a')"
  },
  {
    "comment": "tsearch - Statement 92",
    "query": "SELECT to_tsquery('english', '(1 \u003c-\u003e a) \u003c3\u003e 2')"
  },
  {
    "comment": "tsearch - Statement 93",
    "query": "SELECT to_tsquery('english', '(a \u003c-\u003e 1) \u003c3\u003e 2')"
  },
  {
    "comment": "tsearch - Statement 94",
    "query": "SELECT to_tsquery('english', 'a \u003c3\u003e (1 \u003c-\u003e 2)')"
  },
  {
    "comment": "tsearch - Statement 95",
    "query": "SELECT to_tsquery('english', '1 \u003c3\u003e (a \u003c-\u003e 2)')"
  },
  {
    "comment": "tsearch - Statement 96",
    "query": "SELECT to_tsquery('english', '1 \u003c3\u003e (2 \u003c-\u003e a)')"
  },
  {
    "comment": "tsearch - Statement 97",
    "query": "SELECT to_tsquery('english', '(1 \u003c3\u003e 2) \u003c-\u003e a')"
  },
  {
    "comment": "tsearch - Statement 98",
    "query": "SELECT to_tsquery('english', '(1 \u003c3\u003e a) \u003c-\u003e 2')"
  },
  {
    "comment": "tsearch - Statement 99",
    "query": "SELECT to_tsquery('english', '(a \u003c3\u003e 1) \u003c-\u003e 2')"
  },
  {
    "comment": "tsearch - Statement 100",
    "query": "SELECT to_tsquery('english', 'a \u003c-\u003e (1 \u003c3\u003e 2)')"
  },
  {
    "comment": "tsearch - Statement 101",
    "query": "SELECT to_tsquery('english', '1 \u003c-\u003e (a \u003c3\u003e 2)')"
  },
  {
    "comment": "tsearch - Statement 102",
    "query": "SELECT to_tsquery('english', '1 \u003c-\u003e (2 \u003c3\u003e a)')"
  },
  {
    "comment": "tsearch - Statement 103",
    "query": "SELECT to_tsquery('english', '((a \u003c-\u003e 1) \u003c-\u003e 2) \u003c-\u003e s')"
  },
  {
    "comment": "tsearch - Statement 104",
    "query": "SELECT to_tsquery('english', '(2 \u003c-\u003e (a \u003c-\u003e 1)) \u003c-\u003e s')"
  },
  {
    "comment": "tsearch - Statement 105",
    "query": "SELECT to_tsquery('english', '((1 \u003c-\u003e a) \u003c-\u003e 2) \u003c-\u003e s')"
  },
  {
    "comment": "tsearch - Statement 106",
    "query": "SELECT to_tsquery('english', '(2 \u003c-\u003e (1 \u003c-\u003e a)) \u003c-\u003e s')"
  },
  {
    "comment": "tsearch - Statement 107",
    "query": "SELECT to_tsquery('english', 's \u003c-\u003e ((a \u003c-\u003e 1) \u003c-\u003e 2)')"
  },
  {
    "comment": "tsearch - Statement 108",
    "query": "SELECT to_tsquery('english', 's \u003c-\u003e (2 \u003c-\u003e (a \u003c-\u003e 1))')"
  },
  {
    "comment": "tsearch - Statement 109",
    "query": "SELECT to_tsquery('english', 's \u003c-\u003e ((1 \u003c-\u003e a) \u003c-\u003e 2)')"
  },
  {
    "comment": "tsearch - Statement 110",
    "query": "SELECT to_tsquery('english', 's \u003c-\u003e (2 \u003c-\u003e (1 \u003c-\u003e a))')"
  },
  {
    "comment": "tsearch - Statement 111",
    "query": "SELECT to_tsquery('english', '((a \u003c-\u003e 1) \u003c-\u003e s) \u003c-\u003e 2')"
  },
  {
    "comment": "tsearch - Statement 112",
    "query": "SELECT to_tsquery('english', '(s \u003c-\u003e (a \u003c-\u003e 1)) \u003c-\u003e 2')"
  },
  {
    "comment": "tsearch - Statement 113",
    "query": "SELECT to_tsquery('english', '((1 \u003c-\u003e a) \u003c-\u003e s) \u003c-\u003e 2')"
  },
  {
    "comment": "tsearch - Statement 114",
    "query": "SELECT to_tsquery('english', '(s \u003c-\u003e (1 \u003c-\u003e a)) \u003c-\u003e 2')"
  },
  {
    "comment": "tsearch - Statement 115",
    "query": "SELECT to_tsquery('english', '2 \u003c-\u003e ((a \u003c-\u003e 1) \u003c-\u003e s)')"
  },
  {
    "comment": "tsearch - Statement 116",
    "query": "SELECT to_tsquery('english', '2 \u003c-\u003e (s \u003c-\u003e (a \u003c-\u003e 1))')"
  },
  {
    "comment": "tsearch - Statement 117",
    "query": "SELECT to_tsquery('english', '2 \u003c-\u003e ((1 \u003c-\u003e a) \u003c-\u003e s)')"
  },
  {
    "comment": "tsearch - Statement 118",
    "query": "SELECT to_tsquery('english', '2 \u003c-\u003e (s \u003c-\u003e (1 \u003c-\u003e a))')"
  },
  {
    "comment": "tsearch - Statement 119",
    "query": "SELECT to_tsquery('english', 'foo \u003c-\u003e (a \u003c-\u003e (the \u003c-\u003e bar))')"
  },
  {
    "comment": "tsearch - Statement 120",
    "query": "SELECT to_tsquery('english', '((foo \u003c-\u003e a) \u003c-\u003e the) \u003c-\u003e bar')"
  },
  {
    "comment": "tsearch - Statement 121",
    "query": "SELECT to_tsquery('english', 'foo \u003c-\u003e a \u003c-\u003e the \u003c-\u003e bar')"
  },
  {
    "comment": "tsearch - Statement 122",
    "query": "SELECT phraseto_tsquery('english', 'PostgreSQL can be extended by the user in many ways')"
  },
  {
    "comment": "tsearch - Statement 123",
    "query": "SELECT ts_rank_cd(to_tsvector('english', ' Day after day, day after day, We stuck, nor breath nor motion, As idle as a painted Ship Upon a painted Ocean. Water, water, every where And all the boards did shrink",
    "error": "unterminated quoted string"
  },
  {
    "comment": "tsearch - Statement 128",
    "query": "SELECT ts_rank_cd(strip(to_tsvector('both stripped')), to_tsquery('both \u0026 stripped'))"
  },
  {
    "comment": "tsearch - Statement 129",
    "query": "SELECT ts_rank_cd(to_tsvector('unstripped') || strip(to_tsvector('stripped')), to_tsquery('unstripped \u0026 stripped'))"
  },
  {
    "comment": "tsearch - Statement 130",
    "query": "SELECT ts_headline('english', ' Day after day, day after day, We stuck, nor breath nor motion, As idle as a painted Ship Upon a painted Ocean. Water, water, every where And all the boards did shrink; Water, water, every where, Nor any drop to drink. S. T. Coleridge (1772-1834) ', to_tsquery('english', 'paint\u0026water'))"
  },
  {
    "comment": "tsearch - Statement 142",
    "query": "SELECT ts_headline('english', 'Lorem ipsum urna.  Nullam nullam ullamcorper urna.', to_tsquery('english','Lorem') \u0026\u0026 phraseto_tsquery('english','ullamcorper urna'), 'MaxWords=100, MinWords=1')",
    "expected": "SELECT ts_headline('english', 'Lorem ipsum urna.  Nullam nullam ullamcorper urna.', to_tsquery('english', 'Lorem') \u0026\u0026 phraseto_tsquery('english', 'ullamcorper urna'), 'MaxWords=100, MinWords=1')"
  },
  {
    "comment": "tsearch - Statement 143",
    "query": "SELECT ts_headline('english', 'Lorem ipsum urna.  Nullam nullam ullamcorper urna.', phraseto_tsquery('english','ullamcorper urna'), 'MaxWords=100, MinWords=5')",
    "expected": "SELECT ts_headline('english', 'Lorem ipsum urna.  Nullam nullam ullamcorper urna.', phraseto_tsquery('english', 'ullamcorper urna'), 'MaxWords=100, MinWords=5')"
  },
  {
    "comment": "tsearch - Statement 144",
    "query": "SELECT ts_headline('english', ' \u003chtml\u003e \u003c! \u003cbody\u003e Sea view wow \u003cu\u003efoo bar\u003c/u\u003e \u003ci\u003eqq\u003c/i\u003e \u003ca href=\"http://www.google.com/foo.bar.html\" target=\"_blank\"\u003eYES \u0026nbsp;\u003c/a\u003e ff-bg \u003cscript\u003e document.write(15); \u003c/script\u003e \u003c/body\u003e \u003c/html\u003e', to_tsquery('english', 'sea\u0026foo'), 'HighlightAll=true')"
  },
  {
    "comment": "tsearch - Statement 146",
    "query": "SELECT ts_headline('simple', '1 2 3 1 3'::text, '1 \u003c-\u003e 3', 'MaxWords=2, MinWords=1')",
    "expected": "SELECT ts_headline('simple', CAST('1 2 3 1 3' AS TEXT), '1 \u003c-\u003e 3', 'MaxWords=2, MinWords=1')"
  },
  {
    "comment": "tsearch - Statement 147",
    "query": "SELECT ts_headline('simple', '1 2 3 1 3'::text, '1 \u0026 3', 'MaxWords=4, MinWords=1')",
    "expected": "SELECT ts_headline('simple', CAST('1 2 3 1 3' AS TEXT), '1 \u0026 3', 'MaxWords=4, MinWords=1')"
  },
  {
    "comment": "tsearch - Statement 148",
    "query": "SELECT ts_headline('simple', '1 2 3 1 3'::text, '1 \u003c-\u003e 3', 'MaxWords=4, MinWords=1')",
    "expected": "SELECT ts_headline('simple', CAST('1 2 3 1 3' AS TEXT), '1 \u003c-\u003e 3', 'MaxWords=4, MinWords=1')"
  },
  {
    "comment": "tsearch - Statement 153",
    "query": "SELECT ts_headline('english', 'Lorem ipsum urna.  Nullam nullam ullamcorper urna.', to_tsquery('english','Lorem') \u0026\u0026 phraseto_tsquery('english','ullamcorper urna'), 'MaxFragments=100, MaxWords=100, MinWords=1')",
    "expected": "SELECT ts_headline('english', 'Lorem ipsum urna.  Nullam nullam ullamcorper urna.', to_tsquery('english', 'Lorem') \u0026\u0026 phraseto_tsquery('english', 'ullamcorper urna'), 'MaxFragments=100, MaxWords=100, MinWords=1')"
  },
  {
    "comment": "tsearch - Statement 154",
    "query": "SELECT ts_headline('english', '', to_tsquery('english', ''))"
  },
  {
    "comment": "tsearch - Statement 155",
    "query": "SELECT ts_headline('english', 'foo bar', to_tsquery('english', ''))"
  },
  {
    "comment": "tsearch - Statement 156",
    "query": "CREATE TABLE test_tsquery (txtkeyword TEXT, txtsample TEXT)"
  },
  {
    "comment": "tsearch - Statement 157",
    "query": "UPDATE test_tsquery SET keyword = to_tsquery('english', txtkeyword)"
  },
  {
    "comment": "tsearch - Statement 158",
    "query": "ALTER TABLE test_tsquery ADD COLUMN sample tsquery"
  },
  {
    "comment": "tsearch - Statement 159",
    "query": "UPDATE test_tsquery SET sample = to_tsquery('english', txtsample::text)",
    "expected": "UPDATE test_tsquery SET sample = to_tsquery('english', CAST(txtsample AS TEXT))"
  },
  {
    "comment": "tsearch - Statement 160",
    "query": "SELECT COUNT(*) FROM test_tsquery WHERE keyword \u003c  'new \u003c-\u003e york'",
    "expected": "SELECT COUNT(*) FROM test_tsquery WHERE keyword \u003c 'new \u003c-\u003e york'"
  },
  {
    "comment": "tsearch - Statement 161",
    "query": "SELECT COUNT(*) FROM test_tsquery WHERE keyword \u003c= 'new \u003c-\u003e york'"
  },
  {
    "comment": "tsearch - Statement 162",
    "query": "SELECT COUNT(*) FROM test_tsquery WHERE keyword = 'new \u003c-\u003e york'"
  },
  {
    "comment": "tsearch - Statement 163",
    "query": "SELECT COUNT(*) FROM test_tsquery WHERE keyword \u003e= 'new \u003c-\u003e york'"
  },
  {
    "comment": "tsearch - Statement 164",
    "query": "SELECT COUNT(*) FROM test_tsquery WHERE keyword \u003e  'new \u003c-\u003e york'",
    "expected": "SELECT COUNT(*) FROM test_tsquery WHERE keyword \u003e 'new \u003c-\u003e york'"
  },
  {
    "comment": "tsearch - Statement 165",
    "query": "CREATE UNIQUE INDEX bt_tsq ON test_tsquery (keyword)",
    "expected": "CREATE UNIQUE INDEX bt_tsq ON test_tsquery USING btree ( keyword )"
  },
  {
    "comment": "tsearch - Statement 166",
    "query": "SELECT ts_rewrite('foo \u0026 bar \u0026 qq \u0026 new \u0026 york',  'new \u0026 york'::tsquery, 'big \u0026 apple | nyc | new \u0026 york \u0026 city')",
    "expected": "SELECT ts_rewrite('foo \u0026 bar \u0026 qq \u0026 new \u0026 york', CAST('new \u0026 york' AS tsquery), 'big \u0026 apple | nyc | new \u0026 york \u0026 city')"
  },
  {
    "comment": "tsearch - Statement 167",
    "query": "SELECT ts_rewrite(ts_rewrite('new \u0026 !york ', 'york', '!jersey'), 'jersey', 'mexico')"
  },
  {
    "comment": "tsearch - Statement 168",
    "query": "SELECT ts_rewrite('moscow', 'SELECT keyword, sample FROM test_tsquery'::text )",
    "expected": "SELECT ts_rewrite('moscow', CAST('SELECT keyword, sample FROM test_tsquery' AS TEXT))"
  },
  {
    "comment": "tsearch - Statement 169",
    "query": "SELECT ts_rewrite('moscow \u0026 hotel', 'SELECT keyword, sample FROM test_tsquery'::text )",
    "expected": "SELECT ts_rewrite('moscow \u0026 hotel', CAST('SELECT keyword, sample FROM test_tsquery' AS TEXT))"
  },
  {
    "comment": "tsearch - Statement 170",
    "query": "SELECT ts_rewrite('bar \u0026 qq \u0026 foo \u0026 (new \u003c-\u003e york)', 'SELECT keyword, sample FROM test_tsquery'::text )",
    "expected": "SELECT ts_rewrite('bar \u0026 qq \u0026 foo \u0026 (new \u003c-\u003e york)', CAST('SELECT keyword, sample FROM test_tsquery' AS TEXT))"
  },
  {
    "comment": "tsearch - Statement 171",
    "query": "SELECT ts_rewrite( 'moscow', 'SELECT keyword, sample FROM test_tsquery')",
    "expected": "SELECT ts_rewrite('moscow', 'SELECT keyword, sample FROM test_tsquery')"
  },
  {
    "comment": "tsearch - Statement 172",
    "query": "SELECT ts_rewrite( 'moscow \u0026 hotel', 'SELECT keyword, sample FROM test_tsquery')",
    "expected": "SELECT ts_rewrite('moscow \u0026 hotel', 'SELECT keyword, sample FROM test_tsquery')"
  },
  {
    "comment": "tsearch - Statement 173",
    "query": "SELECT ts_rewrite( 'bar \u0026 qq \u0026 foo \u0026 (new \u003c-\u003e york)', 'SELECT keyword, sample FROM test_tsquery')",
    "expected": "SELECT ts_rewrite('bar \u0026 qq \u0026 foo \u0026 (new \u003c-\u003e york)', 'SELECT keyword, sample FROM test_tsquery')"
  },
  {
    "comment": "tsearch - Statement 174",
    "query": "SELECT ts_rewrite('1 \u0026 (2 \u003c-\u003e 3)', 'SELECT keyword, sample FROM test_tsquery'::text )",
    "expected": "SELECT ts_rewrite('1 \u0026 (2 \u003c-\u003e 3)', CAST('SELECT keyword, sample FROM test_tsquery' AS TEXT))"
  },
  {
    "comment": "tsearch - Statement 175",
    "query": "SELECT ts_rewrite('1 \u0026 (2 \u003c2\u003e 3)', 'SELECT keyword, sample FROM test_tsquery'::text )",
    "expected": "SELECT ts_rewrite('1 \u0026 (2 \u003c2\u003e 3)', CAST('SELECT keyword, sample FROM test_tsquery' AS TEXT))"
  },
  {
    "comment": "tsearch - Statement 176",
    "query": "SELECT ts_rewrite('5 \u003c-\u003e (1 \u0026 (2 \u003c-\u003e 3))', 'SELECT keyword, sample FROM test_tsquery'::text )",
    "expected": "SELECT ts_rewrite('5 \u003c-\u003e (1 \u0026 (2 \u003c-\u003e 3))', CAST('SELECT keyword, sample FROM test_tsquery' AS TEXT))"
  },
  {
    "comment": "tsearch - Statement 177",
    "query": "SELECT ts_rewrite('5 \u003c-\u003e (6 | 8)', 'SELECT keyword, sample FROM test_tsquery'::text )",
    "expected": "SELECT ts_rewrite('5 \u003c-\u003e (6 | 8)', CAST('SELECT keyword, sample FROM test_tsquery' AS TEXT))"
  },
  {
    "comment": "tsearch - Statement 178",
    "query": "SELECT ts_rewrite(to_tsquery('5 \u0026 (6 | 5)'), to_tsquery('5'), to_tsquery(''))"
  },
  {
    "comment": "tsearch - Statement 179",
    "query": "SELECT ts_rewrite(to_tsquery('!5'), to_tsquery('5'), to_tsquery(''))"
  },
  {
    "comment": "tsearch - Statement 180",
    "query": "SELECT keyword FROM test_tsquery WHERE keyword @\u003e 'new'"
  },
  {
    "comment": "tsearch - Statement 181",
    "query": "SELECT keyword FROM test_tsquery WHERE keyword @\u003e 'moscow'"
  },
  {
    "comment": "tsearch - Statement 182",
    "query": "SELECT keyword FROM test_tsquery WHERE keyword \u003c@ 'new'"
  },
  {
    "comment": "tsearch - Statement 183",
    "query": "SELECT keyword FROM test_tsquery WHERE keyword \u003c@ 'moscow'"
  },
  {
    "comment": "tsearch - Statement 184",
    "query": "SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'moscow') AS query",
    "expected": "SELECT ts_rewrite(query, 'SELECT keyword, sample FROM test_tsquery') FROM to_tsquery('english', 'moscow') AS query"
  },
  {
    "comment": "tsearch - Statement 185",
    "query": "SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'moscow \u0026 hotel') AS query",
    "expected": "SELECT ts_rewrite(query, 'SELECT keyword, sample FROM test_tsquery') FROM to_tsquery('english', 'moscow \u0026 hotel') AS query"
  },
  {
    "comment": "tsearch - Statement 186",
    "query": "SELECT ts_rewrite( query, 'SELECT keyword, sample FROM test_tsquery' ) FROM to_tsquery('english', 'bar \u0026 qq \u0026 foo \u0026 (new \u003c-\u003e york)') AS query",
    "expected": "SELECT ts_rewrite(query, 'SELECT keyword, sample FROM test_tsquery') FROM to_tsquery('english', 'bar \u0026 qq \u0026 foo \u0026 (new \u003c-\u003e york)') AS query"
  },
  {
    "comment": "tsearch - Statement 187",
    "query": "CREATE INDEX qq ON test_tsquery USING gist (keyword tsquery_ops)",
    "expected": "CREATE INDEX qq ON test_tsquery USING gist ( keyword tsquery_ops )"
  },
  {
    "comment": "tsearch - Statement 188",
    "query": "SELECT ts_rewrite(tsquery_phrase('foo', 'foo'), 'foo', 'bar | baz')"
  },
  {
    "comment": "tsearch - Statement 189",
    "query": "SELECT to_tsvector('foo bar') @@ ts_rewrite(tsquery_phrase('foo', 'foo'), 'foo', 'bar | baz')"
  },
  {
    "comment": "tsearch - Statement 190",
    "query": "SELECT to_tsvector('bar baz') @@ ts_rewrite(tsquery_phrase('foo', 'foo'), 'foo', 'bar | baz')"
  },
  {
    "comment": "tsearch - Statement 191",
    "query": "SET default_text_search_config=simple",
    "expected": "SET default_text_search_config = 'simple'"
  },
  {
    "comment": "tsearch - Statement 192",
    "query": "SELECT to_tsvector('SKIES My booKs')"
  },
  {
    "comment": "tsearch - Statement 193",
    "query": "SELECT plainto_tsquery('SKIES My booKs')"
  },
  {
    "comment": "tsearch - Statement 194",
    "query": "SELECT to_tsquery('SKIES \u0026 My | booKs')"
  },
  {
    "comment": "tsearch - Statement 195",
    "query": "SET default_text_search_config=english",
    "expected": "SET default_text_search_config = 'english'"
  },
  {
    "comment": "tsearch - Statement 196",
    "query": "CREATE TRIGGER tsvectorupdate BEFORE UPDATE OR INSERT ON test_tsvector FOR EACH ROW EXECUTE PROCEDURE tsvector_update_trigger(a, 'pg_catalog.english', t)",
    "expected": "CREATE TRIGGER tsvectorupdate BEFORE INSERT OR UPDATE ON test_tsvector FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('a', 'pg_catalog.english', 't')"
  },
  {
    "comment": "tsearch - Statement 197",
    "query": "SELECT count(*) FROM test_tsvector WHERE a @@ to_tsquery('345\u0026qwerty')",
    "expected": "SELECT COUNT(*) FROM test_tsvector WHERE a @@ to_tsquery('345\u0026qwerty')"
  },
  {
    "comment": "tsearch - Statement 198",
    "query": "INSERT INTO test_tsvector (t) VALUES ('345 qwerty')"
  },
  {
    "comment": "tsearch - Statement 199",
    "query": "UPDATE test_tsvector SET t = null WHERE t = '345 qwerty'",
    "expected": "UPDATE test_tsvector SET t = NULL WHERE t = '345 qwerty'"
  },
  {
    "comment": "tsearch - Statement 200",
    "query": "explain (costs off) select * from test_tsquery, to_tsquery('new') q where txtsample @@ q",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM test_tsquery, to_tsquery('new') AS q WHERE txtsample @@ q"
  },
  {
    "comment": "tsearch - Statement 201",
    "query": "explain (costs off) select * from test_tsquery, to_tsquery('english', 'new') q where txtsample @@ q",
    "expected": "EXPLAIN (COSTS false) SELECT * FROM test_tsquery, to_tsquery('english', 'new') AS q WHERE txtsample @@ q"
  },
  {
    "comment": "tsearch - Statement 202",
    "query": "create temp table pendtest (ts tsvector)",
    "expected": "CREATE TEMPORARY TABLE pendtest (ts tsvector)"
  },
  {
    "comment": "tsearch - Statement 203",
    "query": "create index pendtest_idx on pendtest using gin(ts)",
    "expected": "CREATE INDEX pendtest_idx ON pendtest USING gin ( ts )"
  },
  {
    "comment": "tsearch - Statement 204",
    "query": "insert into pendtest values (to_tsvector('Lore ipsam'))",
    "expected": "INSERT INTO pendtest VALUES (to_tsvector('Lore ipsam'))"
  },
  {
    "comment": "tsearch - Statement 205",
    "query": "insert into pendtest values (to_tsvector('Lore ipsum'))",
    "expected": "INSERT INTO pendtest VALUES (to_tsvector('Lore ipsum'))"
  },
  {
    "comment": "tsearch - Statement 206",
    "query": "select * from pendtest where 'ipsu:*'::tsquery @@ ts",
    "expected": "SELECT * FROM pendtest WHERE CAST('ipsu:*' AS tsquery) @@ ts"
  },
  {
    "comment": "tsearch - Statement 207",
    "query": "select * from pendtest where 'ipsa:*'::tsquery @@ ts",
    "expected": "SELECT * FROM pendtest WHERE CAST('ipsa:*' AS tsquery) @@ ts"
  },
  {
    "comment": "tsearch - Statement 208",
    "query": "select * from pendtest where 'ips:*'::tsquery @@ ts",
    "expected": "SELECT * FROM pendtest WHERE CAST('ips:*' AS tsquery) @@ ts"
  },
  {
    "comment": "tsearch - Statement 209",
    "query": "select * from pendtest where 'ipt:*'::tsquery @@ ts",
    "expected": "SELECT * FROM pendtest WHERE CAST('ipt:*' AS tsquery) @@ ts"
  },
  {
    "comment": "tsearch - Statement 210",
    "query": "select * from pendtest where 'ipi:*'::tsquery @@ ts",
    "expected": "SELECT * FROM pendtest WHERE CAST('ipi:*' AS tsquery) @@ ts"
  },
  {
    "comment": "tsearch - Statement 211",
    "query": "create temp table phrase_index_test(fts tsvector)",
    "expected": "CREATE TEMPORARY TABLE phrase_index_test (fts tsvector)"
  },
  {
    "comment": "tsearch - Statement 212",
    "query": "insert into phrase_index_test values ('A fat cat has just eaten a rat.')",
    "expected": "INSERT INTO phrase_index_test VALUES ('A fat cat has just eaten a rat.')"
  },
  {
    "comment": "tsearch - Statement 213",
    "query": "insert into phrase_index_test values (to_tsvector('english', 'A fat cat has just eaten a rat.'))",
    "expected": "INSERT INTO phrase_index_test VALUES (to_tsvector('english', 'A fat cat has just eaten a rat.'))"
  },
  {
    "comment": "tsearch - Statement 214",
    "query": "create index phrase_index_test_idx on phrase_index_test using gin(fts)",
    "expected": "CREATE INDEX phrase_index_test_idx ON phrase_index_test USING gin ( fts )"
  },
  {
    "comment": "tsearch - Statement 215",
    "query": "set enable_seqscan = off",
    "expected": "SET enable_seqscan = off"
  },
  {
    "comment": "tsearch - Statement 216",
    "query": "select * from phrase_index_test where fts @@ phraseto_tsquery('english', 'fat cat')",
    "expected": "SELECT * FROM phrase_index_test WHERE fts @@ phraseto_tsquery('english', 'fat cat')"
  },
  {
    "comment": "tsearch - Statement 217",
    "query": "set enable_seqscan = on",
    "expected": "SET enable_seqscan = on"
  },
  {
    "comment": "tsearch - Statement 218",
    "query": "select websearch_to_tsquery('simple', 'I have a fat:*ABCD cat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'I have a fat:*ABCD cat')"
  },
  {
    "comment": "tsearch - Statement 219",
    "query": "select websearch_to_tsquery('simple', 'orange:**AABBCCDD')",
    "expected": "SELECT websearch_to_tsquery('simple', 'orange:**AABBCCDD')"
  },
  {
    "comment": "tsearch - Statement 220",
    "query": "select websearch_to_tsquery('simple', 'fat:A!cat:B|rat:C\u003c')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat:A!cat:B|rat:C\u003c')"
  },
  {
    "comment": "tsearch - Statement 221",
    "query": "select websearch_to_tsquery('simple', 'fat:A : cat:B')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat:A : cat:B')"
  },
  {
    "comment": "tsearch - Statement 222",
    "query": "select websearch_to_tsquery('simple', 'fat*rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat*rat')"
  },
  {
    "comment": "tsearch - Statement 223",
    "query": "select websearch_to_tsquery('simple', 'fat-rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat-rat')"
  },
  {
    "comment": "tsearch - Statement 224",
    "query": "select websearch_to_tsquery('simple', 'fat_rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat_rat')"
  },
  {
    "comment": "tsearch - Statement 225",
    "query": "select websearch_to_tsquery('simple', 'abc : def')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc : def')"
  },
  {
    "comment": "tsearch - Statement 226",
    "query": "select websearch_to_tsquery('simple', 'abc:def')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc:def')"
  },
  {
    "comment": "tsearch - Statement 227",
    "query": "select websearch_to_tsquery('simple', 'a:::b')",
    "expected": "SELECT websearch_to_tsquery('simple', 'a:::b')"
  },
  {
    "comment": "tsearch - Statement 228",
    "query": "select websearch_to_tsquery('simple', 'abc:d')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc:d')"
  },
  {
    "comment": "tsearch - Statement 229",
    "query": "select websearch_to_tsquery('simple', ':')",
    "expected": "SELECT websearch_to_tsquery('simple', ':')"
  },
  {
    "comment": "tsearch - Statement 230",
    "query": "select websearch_to_tsquery('simple', 'abc \u0026 def')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc \u0026 def')"
  },
  {
    "comment": "tsearch - Statement 231",
    "query": "select websearch_to_tsquery('simple', 'abc | def')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc | def')"
  },
  {
    "comment": "tsearch - Statement 232",
    "query": "select websearch_to_tsquery('simple', 'abc \u003c-\u003e def')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc \u003c-\u003e def')"
  },
  {
    "comment": "tsearch - Statement 233",
    "query": "select websearch_to_tsquery('simple', 'abc (pg or class)')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc (pg or class)')"
  },
  {
    "comment": "tsearch - Statement 234",
    "query": "select websearch_to_tsquery('simple', '(foo bar) or (ding dong)')",
    "expected": "SELECT websearch_to_tsquery('simple', '(foo bar) or (ding dong)')"
  },
  {
    "comment": "tsearch - Statement 235",
    "query": "select websearch_to_tsquery('english', 'My brand new smartphone')",
    "expected": "SELECT websearch_to_tsquery('english', 'My brand new smartphone')"
  },
  {
    "comment": "tsearch - Statement 236",
    "query": "select websearch_to_tsquery('english', 'My brand \"new smartphone\"')",
    "expected": "SELECT websearch_to_tsquery('english', 'My brand \"new smartphone\"')"
  },
  {
    "comment": "tsearch - Statement 237",
    "query": "select websearch_to_tsquery('english', 'My brand \"new -smartphone\"')",
    "expected": "SELECT websearch_to_tsquery('english', 'My brand \"new -smartphone\"')"
  },
  {
    "comment": "tsearch - Statement 238",
    "query": "select websearch_to_tsquery('simple', 'cat or rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'cat or rat')"
  },
  {
    "comment": "tsearch - Statement 239",
    "query": "select websearch_to_tsquery('simple', 'cat \"OR\" rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'cat \"OR\" rat')"
  },
  {
    "comment": "tsearch - Statement 240",
    "query": "select websearch_to_tsquery('simple', 'cat OR')",
    "expected": "SELECT websearch_to_tsquery('simple', 'cat OR')"
  },
  {
    "comment": "tsearch - Statement 241",
    "query": "select websearch_to_tsquery('simple', 'OR rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'OR rat')"
  },
  {
    "comment": "tsearch - Statement 242",
    "query": "select websearch_to_tsquery('simple', '\"fat cat OR rat\"')",
    "expected": "SELECT websearch_to_tsquery('simple', '\"fat cat OR rat\"')"
  },
  {
    "comment": "tsearch - Statement 243",
    "query": "select websearch_to_tsquery('simple', 'fat (cat OR rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat (cat OR rat')"
  },
  {
    "comment": "tsearch - Statement 244",
    "query": "select websearch_to_tsquery('simple', 'or OR or')",
    "expected": "SELECT websearch_to_tsquery('simple', 'or OR or')"
  },
  {
    "comment": "tsearch - Statement 245",
    "query": "select websearch_to_tsquery('simple', '\"fat cat\"or\"fat rat\"')",
    "expected": "SELECT websearch_to_tsquery('simple', '\"fat cat\"or\"fat rat\"')"
  },
  {
    "comment": "tsearch - Statement 246",
    "query": "select websearch_to_tsquery('simple', 'fat or(rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat or(rat')"
  },
  {
    "comment": "tsearch - Statement 247",
    "query": "select websearch_to_tsquery('simple', 'fat or)rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat or)rat')"
  },
  {
    "comment": "tsearch - Statement 248",
    "query": "select websearch_to_tsquery('simple', 'fat or\u0026rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat or\u0026rat')"
  },
  {
    "comment": "tsearch - Statement 249",
    "query": "select websearch_to_tsquery('simple', 'fat or|rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat or|rat')"
  },
  {
    "comment": "tsearch - Statement 250",
    "query": "select websearch_to_tsquery('simple', 'fat or!rat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat or!rat')"
  },
  {
    "comment": "tsearch - Statement 251",
    "query": "select websearch_to_tsquery('simple', 'fat or\u003crat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat or\u003crat')"
  },
  {
    "comment": "tsearch - Statement 252",
    "query": "select websearch_to_tsquery('simple', 'fat or\u003erat')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat or\u003erat')"
  },
  {
    "comment": "tsearch - Statement 253",
    "query": "select websearch_to_tsquery('simple', 'fat or ')",
    "expected": "SELECT websearch_to_tsquery('simple', 'fat or ')"
  },
  {
    "comment": "tsearch - Statement 254",
    "query": "select websearch_to_tsquery('simple', 'abc orange')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc orange')"
  },
  {
    "comment": "tsearch - Statement 255",
    "query": "select websearch_to_tsquery('simple', 'abc OR1234')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc OR1234')"
  },
  {
    "comment": "tsearch - Statement 256",
    "query": "select websearch_to_tsquery('simple', 'abc or-abc')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc or-abc')"
  },
  {
    "comment": "tsearch - Statement 257",
    "query": "select websearch_to_tsquery('simple', 'abc OR_abc')",
    "expected": "SELECT websearch_to_tsquery('simple', 'abc OR_abc')"
  },
  {
    "comment": "tsearch - Statement 258",
    "query": "select websearch_to_tsquery('english', '\"pg_class pg')",
    "expected": "SELECT websearch_to_tsquery('english', '\"pg_class pg')"
  },
  {
    "comment": "tsearch - Statement 259",
    "query": "select websearch_to_tsquery('english', 'pg_class pg\"')",
    "expected": "SELECT websearch_to_tsquery('english', 'pg_class pg\"')"
  },
  {
    "comment": "tsearch - Statement 260",
    "query": "select websearch_to_tsquery('english', '\"pg_class pg\"')",
    "expected": "SELECT websearch_to_tsquery('english', '\"pg_class pg\"')"
  },
  {
    "comment": "tsearch - Statement 261",
    "query": "select websearch_to_tsquery('english', '\"pg_class : pg\"')",
    "expected": "SELECT websearch_to_tsquery('english', '\"pg_class : pg\"')"
  },
  {
    "comment": "tsearch - Statement 262",
    "query": "select websearch_to_tsquery('english', 'abc \"pg_class pg\"')",
    "expected": "SELECT websearch_to_tsquery('english', 'abc \"pg_class pg\"')"
  },
  {
    "comment": "tsearch - Statement 263",
    "query": "select websearch_to_tsquery('english', '\"pg_class pg\" def')",
    "expected": "SELECT websearch_to_tsquery('english', '\"pg_class pg\" def')"
  },
  {
    "comment": "tsearch - Statement 264",
    "query": "select websearch_to_tsquery('english', 'abc \"pg pg_class pg\" def')",
    "expected": "SELECT websearch_to_tsquery('english', 'abc \"pg pg_class pg\" def')"
  },
  {
    "comment": "tsearch - Statement 265",
    "query": "select websearch_to_tsquery('english', ' or \"pg pg_class pg\" or ')",
    "expected": "SELECT websearch_to_tsquery('english', ' or \"pg pg_class pg\" or ')"
  },
  {
    "comment": "tsearch - Statement 266",
    "query": "select websearch_to_tsquery('english', '\"\"pg pg_class pg\"\"')",
    "expected": "SELECT websearch_to_tsquery('english', '\"\"pg pg_class pg\"\"')"
  },
  {
    "comment": "tsearch - Statement 267",
    "query": "select websearch_to_tsquery('english', 'abc \"\"\"\"\" def')",
    "expected": "SELECT websearch_to_tsquery('english', 'abc \"\"\"\"\" def')"
  },
  {
    "comment": "tsearch - Statement 268",
    "query": "select websearch_to_tsquery('english', 'cat -\"fat rat\"')",
    "expected": "SELECT websearch_to_tsquery('english', 'cat -\"fat rat\"')"
  },
  {
    "comment": "tsearch - Statement 269",
    "query": "select websearch_to_tsquery('english', 'cat -\"fat rat\" cheese')",
    "expected": "SELECT websearch_to_tsquery('english', 'cat -\"fat rat\" cheese')"
  },
  {
    "comment": "tsearch - Statement 270",
    "query": "select websearch_to_tsquery('english', 'abc \"def -\"')",
    "expected": "SELECT websearch_to_tsquery('english', 'abc \"def -\"')"
  },
  {
    "comment": "tsearch - Statement 271",
    "query": "select websearch_to_tsquery('english', 'abc \"def :\"')",
    "expected": "SELECT websearch_to_tsquery('english', 'abc \"def :\"')"
  },
  {
    "comment": "tsearch - Statement 272",
    "query": "select websearch_to_tsquery('english', '\"A fat cat\" has just eaten a -rat.')",
    "expected": "SELECT websearch_to_tsquery('english', '\"A fat cat\" has just eaten a -rat.')"
  },
  {
    "comment": "tsearch - Statement 273",
    "query": "select websearch_to_tsquery('english', '\"A fat cat\" has just eaten OR !rat.')",
    "expected": "SELECT websearch_to_tsquery('english', '\"A fat cat\" has just eaten OR !rat.')"
  },
  {
    "comment": "tsearch - Statement 274",
    "query": "select websearch_to_tsquery('english', '\"A fat cat\" has just (+eaten OR -rat)')",
    "expected": "SELECT websearch_to_tsquery('english', '\"A fat cat\" has just (+eaten OR -rat)')"
  },
  {
    "comment": "tsearch - Statement 275",
    "query": "select websearch_to_tsquery('english', 'this is ----fine')",
    "expected": "SELECT websearch_to_tsquery('english', 'this is ----fine')"
  },
  {
    "comment": "tsearch - Statement 276",
    "query": "select websearch_to_tsquery('english', '(()) )))) this ||| is \u0026\u0026 -fine, \"dear friend\" OR good')",
    "expected": "SELECT websearch_to_tsquery('english', '(()) )))) this ||| is \u0026\u0026 -fine, \"dear friend\" OR good')"
  },
  {
    "comment": "tsearch - Statement 277",
    "query": "select websearch_to_tsquery('english', 'an old \u003c-\u003e cat \" is fine \u0026\u0026\u0026 too')",
    "expected": "SELECT websearch_to_tsquery('english', 'an old \u003c-\u003e cat \" is fine \u0026\u0026\u0026 too')"
  },
  {
    "comment": "tsearch - Statement 278",
    "query": "select websearch_to_tsquery('english', '\"A the\" OR just on')",
    "expected": "SELECT websearch_to_tsquery('english', '\"A the\" OR just on')"
  },
  {
    "comment": "tsearch - Statement 279",
    "query": "select websearch_to_tsquery('english', '\"a fat cat\" ate a rat')",
    "expected": "SELECT websearch_to_tsquery('english', '\"a fat cat\" ate a rat')"
  },
  {
    "comment": "tsearch - Statement 280",
    "query": "select to_tsvector('english', 'A fat cat ate a rat') @@ websearch_to_tsquery('english', '\"a fat cat\" ate a rat')",
    "expected": "SELECT to_tsvector('english', 'A fat cat ate a rat') @@ websearch_to_tsquery('english', '\"a fat cat\" ate a rat')"
  },
  {
    "comment": "tsearch - Statement 281",
    "query": "select to_tsvector('english', 'A fat grey cat ate a rat') @@ websearch_to_tsquery('english', '\"a fat cat\" ate a rat')",
    "expected": "SELECT to_tsvector('english', 'A fat grey cat ate a rat') @@ websearch_to_tsquery('english', '\"a fat cat\" ate a rat')"
  },
  {
    "comment": "tsearch - Statement 282",
    "query": "select websearch_to_tsquery('''')",
    "expected": "SELECT websearch_to_tsquery('''')"
  },
  {
    "comment": "tsearch - Statement 283",
    "query": "select websearch_to_tsquery('''abc''''def''')",
    "expected": "SELECT websearch_to_tsquery('''abc''''def''')"
  },
  {
    "comment": "tsearch - Statement 284",
    "query": "select websearch_to_tsquery('\\abc')",
    "expected": "SELECT websearch_to_tsquery('\\abc')"
  },
  {
    "comment": "tsearch - Statement 285",
    "query": "select websearch_to_tsquery('\\')",
    "expected": "SELECT websearch_to_tsquery('\\')"
  }
]
